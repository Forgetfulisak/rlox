<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="981.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="2360"><g><title>.Lanon.321f55a7c5677dca2192f662f89590c1.333 (2 samples, 0.08%)</title><rect x="0.0000%" y="917" width="0.0847%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.08%)</title><rect x="0.0000%" y="901" width="0.0847%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.0847%" y="917" width="0.0424%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.3347%" y="927.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="0.1271%" y="917" width="0.0847%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.3771%" y="927.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="0.2119%" y="917" width="0.0847%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.4619%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="0.2119%" y="901" width="0.0847%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.4619%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="0.2966%" y="901" width="0.0847%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="2"/><text x="0.5466%" y="911.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.3814%" y="901" width="0.0424%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="1"/><text x="0.6314%" y="911.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (30 samples, 1.27%)</title><rect x="0.4237%" y="901" width="1.2712%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="30"/><text x="0.6737%" y="911.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (7 samples, 0.30%)</title><rect x="1.3983%" y="885" width="0.2966%" height="15" fill="rgb(220,122,19)" fg:x="33" fg:w="7"/><text x="1.6483%" y="895.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (9 samples, 0.38%)</title><rect x="1.6949%" y="901" width="0.3814%" height="15" fill="rgb(250,228,42)" fg:x="40" fg:w="9"/><text x="1.9449%" y="911.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="2.0763%" y="901" width="0.3814%" height="15" fill="rgb(240,193,28)" fg:x="49" fg:w="9"/><text x="2.3263%" y="911.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.81%)</title><rect x="2.4576%" y="901" width="0.8051%" height="15" fill="rgb(216,20,37)" fg:x="58" fg:w="19"/><text x="2.7076%" y="911.50"></text></g><g><title>_int_free (40 samples, 1.69%)</title><rect x="3.2627%" y="901" width="1.6949%" height="15" fill="rgb(206,188,39)" fg:x="77" fg:w="40"/><text x="3.5127%" y="911.50"></text></g><g><title>_int_malloc (4 samples, 0.17%)</title><rect x="4.9576%" y="901" width="0.1695%" height="15" fill="rgb(217,207,13)" fg:x="117" fg:w="4"/><text x="5.2076%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.21%)</title><rect x="5.1271%" y="901" width="0.2119%" height="15" fill="rgb(231,73,38)" fg:x="121" fg:w="5"/><text x="5.3771%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.21%)</title><rect x="5.1271%" y="885" width="0.2119%" height="15" fill="rgb(225,20,46)" fg:x="121" fg:w="5"/><text x="5.3771%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.21%)</title><rect x="5.1271%" y="869" width="0.2119%" height="15" fill="rgb(210,31,41)" fg:x="121" fg:w="5"/><text x="5.3771%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.21%)</title><rect x="5.1271%" y="853" width="0.2119%" height="15" fill="rgb(221,200,47)" fg:x="121" fg:w="5"/><text x="5.3771%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (5 samples, 0.21%)</title><rect x="5.1271%" y="837" width="0.2119%" height="15" fill="rgb(226,26,5)" fg:x="121" fg:w="5"/><text x="5.3771%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (5 samples, 0.21%)</title><rect x="5.1271%" y="821" width="0.2119%" height="15" fill="rgb(249,33,26)" fg:x="121" fg:w="5"/><text x="5.3771%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (5 samples, 0.21%)</title><rect x="5.1271%" y="805" width="0.2119%" height="15" fill="rgb(235,183,28)" fg:x="121" fg:w="5"/><text x="5.3771%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="5.2966%" y="789" width="0.0424%" height="15" fill="rgb(221,5,38)" fg:x="125" fg:w="1"/><text x="5.5466%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="5.3814%" y="869" width="0.0424%" height="15" fill="rgb(247,18,42)" fg:x="127" fg:w="1"/><text x="5.6314%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="5.3814%" y="853" width="0.0424%" height="15" fill="rgb(241,131,45)" fg:x="127" fg:w="1"/><text x="5.6314%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="5.3814%" y="837" width="0.0424%" height="15" fill="rgb(249,31,29)" fg:x="127" fg:w="1"/><text x="5.6314%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="5.3814%" y="821" width="0.0424%" height="15" fill="rgb(225,111,53)" fg:x="127" fg:w="1"/><text x="5.6314%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="5.3814%" y="805" width="0.0424%" height="15" fill="rgb(238,160,17)" fg:x="127" fg:w="1"/><text x="5.6314%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="5.3814%" y="789" width="0.0424%" height="15" fill="rgb(214,148,48)" fg:x="127" fg:w="1"/><text x="5.6314%" y="799.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="5.3814%" y="773" width="0.0424%" height="15" fill="rgb(232,36,49)" fg:x="127" fg:w="1"/><text x="5.6314%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="5.3814%" y="757" width="0.0424%" height="15" fill="rgb(209,103,24)" fg:x="127" fg:w="1"/><text x="5.6314%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxCallable&gt; (3 samples, 0.13%)</title><rect x="5.3390%" y="901" width="0.1271%" height="15" fill="rgb(229,88,8)" fg:x="126" fg:w="3"/><text x="5.5890%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxFunction&gt; (2 samples, 0.08%)</title><rect x="5.3814%" y="885" width="0.0847%" height="15" fill="rgb(213,181,19)" fg:x="127" fg:w="2"/><text x="5.6314%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="5.4237%" y="869" width="0.0424%" height="15" fill="rgb(254,191,54)" fg:x="128" fg:w="1"/><text x="5.6737%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="5.4237%" y="853" width="0.0424%" height="15" fill="rgb(241,83,37)" fg:x="128" fg:w="1"/><text x="5.6737%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="5.4237%" y="837" width="0.0424%" height="15" fill="rgb(233,36,39)" fg:x="128" fg:w="1"/><text x="5.6737%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="5.4237%" y="821" width="0.0424%" height="15" fill="rgb(226,3,54)" fg:x="128" fg:w="1"/><text x="5.6737%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="5.4237%" y="805" width="0.0424%" height="15" fill="rgb(245,192,40)" fg:x="128" fg:w="1"/><text x="5.6737%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="5.4237%" y="789" width="0.0424%" height="15" fill="rgb(238,167,29)" fg:x="128" fg:w="1"/><text x="5.6737%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="5.4237%" y="773" width="0.0424%" height="15" fill="rgb(232,182,51)" fg:x="128" fg:w="1"/><text x="5.6737%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="5.4237%" y="757" width="0.0424%" height="15" fill="rgb(231,60,39)" fg:x="128" fg:w="1"/><text x="5.6737%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="5.4237%" y="741" width="0.0424%" height="15" fill="rgb(208,69,12)" fg:x="128" fg:w="1"/><text x="5.6737%" y="751.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="5.4237%" y="725" width="0.0424%" height="15" fill="rgb(235,93,37)" fg:x="128" fg:w="1"/><text x="5.6737%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="5.4237%" y="709" width="0.0424%" height="15" fill="rgb(213,116,39)" fg:x="128" fg:w="1"/><text x="5.6737%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (19 samples, 0.81%)</title><rect x="5.4661%" y="901" width="0.8051%" height="15" fill="rgb(222,207,29)" fg:x="129" fg:w="19"/><text x="5.7161%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rlox::parser::Expression&gt;&gt; (3 samples, 0.13%)</title><rect x="6.1441%" y="885" width="0.1271%" height="15" fill="rgb(206,96,30)" fg:x="145" fg:w="3"/><text x="6.3941%" y="895.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.04%)</title><rect x="6.2288%" y="869" width="0.0424%" height="15" fill="rgb(218,138,4)" fg:x="147" fg:w="1"/><text x="6.4788%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="6.2288%" y="853" width="0.0424%" height="15" fill="rgb(250,191,14)" fg:x="147" fg:w="1"/><text x="6.4788%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="6.2288%" y="837" width="0.0424%" height="15" fill="rgb(239,60,40)" fg:x="147" fg:w="1"/><text x="6.4788%" y="847.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="6.2288%" y="821" width="0.0424%" height="15" fill="rgb(206,27,48)" fg:x="147" fg:w="1"/><text x="6.4788%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="6.2288%" y="805" width="0.0424%" height="15" fill="rgb(225,35,8)" fg:x="147" fg:w="1"/><text x="6.4788%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (6 samples, 0.25%)</title><rect x="6.2712%" y="901" width="0.2542%" height="15" fill="rgb(250,213,24)" fg:x="148" fg:w="6"/><text x="6.5212%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="6.4831%" y="885" width="0.0424%" height="15" fill="rgb(247,123,22)" fg:x="153" fg:w="1"/><text x="6.7331%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="6.4831%" y="869" width="0.0424%" height="15" fill="rgb(231,138,38)" fg:x="153" fg:w="1"/><text x="6.7331%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (1 samples, 0.04%)</title><rect x="6.4831%" y="853" width="0.0424%" height="15" fill="rgb(231,145,46)" fg:x="153" fg:w="1"/><text x="6.7331%" y="863.50"></text></g><g><title>rlox::environ::Environ::get (2 samples, 0.08%)</title><rect x="6.5254%" y="901" width="0.0847%" height="15" fill="rgb(251,118,11)" fg:x="154" fg:w="2"/><text x="6.7754%" y="911.50"></text></g><g><title>[[heap]] (156 samples, 6.61%)</title><rect x="0.2966%" y="917" width="6.6102%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="156"/><text x="0.5466%" y="927.50">[[heap]]</text></g><g><title>rlox::interpreter::Interpreter::evaluate (7 samples, 0.30%)</title><rect x="6.6102%" y="901" width="0.2966%" height="15" fill="rgb(247,81,37)" fg:x="156" fg:w="7"/><text x="6.8602%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="6.9068%" y="901" width="0.0424%" height="15" fill="rgb(209,12,38)" fg:x="163" fg:w="1"/><text x="7.1568%" y="911.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (5 samples, 0.21%)</title><rect x="6.9492%" y="901" width="0.2119%" height="15" fill="rgb(227,1,9)" fg:x="164" fg:w="5"/><text x="7.1992%" y="911.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.25%)</title><rect x="7.5424%" y="869" width="0.2542%" height="15" fill="rgb(248,47,43)" fg:x="178" fg:w="6"/><text x="7.7924%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.51%)</title><rect x="7.5424%" y="885" width="0.5085%" height="15" fill="rgb(221,10,30)" fg:x="178" fg:w="12"/><text x="7.7924%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6 samples, 0.25%)</title><rect x="7.7966%" y="869" width="0.2542%" height="15" fill="rgb(210,229,1)" fg:x="184" fg:w="6"/><text x="8.0466%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.25%)</title><rect x="7.7966%" y="853" width="0.2542%" height="15" fill="rgb(222,148,37)" fg:x="184" fg:w="6"/><text x="8.0466%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.25%)</title><rect x="7.7966%" y="837" width="0.2542%" height="15" fill="rgb(234,67,33)" fg:x="184" fg:w="6"/><text x="8.0466%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.25%)</title><rect x="7.7966%" y="821" width="0.2542%" height="15" fill="rgb(247,98,35)" fg:x="184" fg:w="6"/><text x="8.0466%" y="831.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.25%)</title><rect x="7.7966%" y="805" width="0.2542%" height="15" fill="rgb(247,138,52)" fg:x="184" fg:w="6"/><text x="8.0466%" y="815.50"></text></g><g><title>__rdl_alloc (6 samples, 0.25%)</title><rect x="7.7966%" y="789" width="0.2542%" height="15" fill="rgb(213,79,30)" fg:x="184" fg:w="6"/><text x="8.0466%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.25%)</title><rect x="7.7966%" y="773" width="0.2542%" height="15" fill="rgb(246,177,23)" fg:x="184" fg:w="6"/><text x="8.0466%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="8.0508%" y="885" width="0.1271%" height="15" fill="rgb(230,62,27)" fg:x="190" fg:w="3"/><text x="8.3008%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="8.0508%" y="869" width="0.1271%" height="15" fill="rgb(216,154,8)" fg:x="190" fg:w="3"/><text x="8.3008%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="8.0508%" y="853" width="0.1271%" height="15" fill="rgb(244,35,45)" fg:x="190" fg:w="3"/><text x="8.3008%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="8.0508%" y="837" width="0.1271%" height="15" fill="rgb(251,115,12)" fg:x="190" fg:w="3"/><text x="8.3008%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="8.1356%" y="821" width="0.0424%" height="15" fill="rgb(240,54,50)" fg:x="192" fg:w="1"/><text x="8.3856%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="8.1356%" y="805" width="0.0424%" height="15" fill="rgb(233,84,52)" fg:x="192" fg:w="1"/><text x="8.3856%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="8.1356%" y="789" width="0.0424%" height="15" fill="rgb(207,117,47)" fg:x="192" fg:w="1"/><text x="8.3856%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="8.1356%" y="773" width="0.0424%" height="15" fill="rgb(249,43,39)" fg:x="192" fg:w="1"/><text x="8.3856%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="8.1356%" y="757" width="0.0424%" height="15" fill="rgb(209,38,44)" fg:x="192" fg:w="1"/><text x="8.3856%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="8.1356%" y="741" width="0.0424%" height="15" fill="rgb(236,212,23)" fg:x="192" fg:w="1"/><text x="8.3856%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="8.1356%" y="725" width="0.0424%" height="15" fill="rgb(242,79,21)" fg:x="192" fg:w="1"/><text x="8.3856%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="8.1356%" y="709" width="0.0424%" height="15" fill="rgb(211,96,35)" fg:x="192" fg:w="1"/><text x="8.3856%" y="719.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (36 samples, 1.53%)</title><rect x="7.1610%" y="901" width="1.5254%" height="15" fill="rgb(253,215,40)" fg:x="169" fg:w="36"/><text x="7.4110%" y="911.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (12 samples, 0.51%)</title><rect x="8.1780%" y="885" width="0.5085%" height="15" fill="rgb(211,81,21)" fg:x="193" fg:w="12"/><text x="8.4280%" y="895.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="8.6864%" y="901" width="0.0847%" height="15" fill="rgb(208,190,38)" fg:x="205" fg:w="2"/><text x="8.9364%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="8.6864%" y="885" width="0.0847%" height="15" fill="rgb(235,213,38)" fg:x="205" fg:w="2"/><text x="8.9364%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="8.6864%" y="869" width="0.0847%" height="15" fill="rgb(237,122,38)" fg:x="205" fg:w="2"/><text x="8.9364%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="8.6864%" y="853" width="0.0847%" height="15" fill="rgb(244,218,35)" fg:x="205" fg:w="2"/><text x="8.9364%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="8.6864%" y="837" width="0.0847%" height="15" fill="rgb(240,68,47)" fg:x="205" fg:w="2"/><text x="8.9364%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="8.6864%" y="821" width="0.0847%" height="15" fill="rgb(210,16,53)" fg:x="205" fg:w="2"/><text x="8.9364%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="8.6864%" y="805" width="0.0847%" height="15" fill="rgb(235,124,12)" fg:x="205" fg:w="2"/><text x="8.9364%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="8.6864%" y="789" width="0.0847%" height="15" fill="rgb(224,169,11)" fg:x="205" fg:w="2"/><text x="8.9364%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="8.6864%" y="773" width="0.0847%" height="15" fill="rgb(250,166,2)" fg:x="205" fg:w="2"/><text x="8.9364%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="8.6864%" y="757" width="0.0847%" height="15" fill="rgb(242,216,29)" fg:x="205" fg:w="2"/><text x="8.9364%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="8.6864%" y="741" width="0.0847%" height="15" fill="rgb(230,116,27)" fg:x="205" fg:w="2"/><text x="8.9364%" y="751.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="8.6864%" y="725" width="0.0847%" height="15" fill="rgb(228,99,48)" fg:x="205" fg:w="2"/><text x="8.9364%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="8.6864%" y="709" width="0.0847%" height="15" fill="rgb(253,11,6)" fg:x="205" fg:w="2"/><text x="8.9364%" y="719.50"></text></g><g><title>__GI___libc_free (13 samples, 0.55%)</title><rect x="8.7712%" y="901" width="0.5508%" height="15" fill="rgb(247,143,39)" fg:x="207" fg:w="13"/><text x="9.0212%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="9.3220%" y="901" width="0.0424%" height="15" fill="rgb(236,97,10)" fg:x="220" fg:w="1"/><text x="9.5720%" y="911.50"></text></g><g><title>__memcmp_evex_movbe (2 samples, 0.08%)</title><rect x="9.3644%" y="901" width="0.0847%" height="15" fill="rgb(233,208,19)" fg:x="221" fg:w="2"/><text x="9.6144%" y="911.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="9.4492%" y="901" width="0.1271%" height="15" fill="rgb(216,164,2)" fg:x="223" fg:w="3"/><text x="9.6992%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.13%)</title><rect x="9.5763%" y="901" width="0.1271%" height="15" fill="rgb(220,129,5)" fg:x="226" fg:w="3"/><text x="9.8263%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (3 samples, 0.13%)</title><rect x="9.5763%" y="885" width="0.1271%" height="15" fill="rgb(242,17,10)" fg:x="226" fg:w="3"/><text x="9.8263%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.13%)</title><rect x="9.7034%" y="901" width="0.1271%" height="15" fill="rgb(242,107,0)" fg:x="229" fg:w="3"/><text x="9.9534%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rlox::parser::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="10.0000%" y="885" width="0.0424%" height="15" fill="rgb(251,28,31)" fg:x="236" fg:w="1"/><text x="10.2500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (6 samples, 0.25%)</title><rect x="9.8305%" y="901" width="0.2542%" height="15" fill="rgb(233,223,10)" fg:x="232" fg:w="6"/><text x="10.0805%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="10.0424%" y="885" width="0.0424%" height="15" fill="rgb(215,21,27)" fg:x="237" fg:w="1"/><text x="10.2924%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="10.0424%" y="869" width="0.0424%" height="15" fill="rgb(232,23,21)" fg:x="237" fg:w="1"/><text x="10.2924%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Expression]&gt; (1 samples, 0.04%)</title><rect x="10.0424%" y="853" width="0.0424%" height="15" fill="rgb(244,5,23)" fg:x="237" fg:w="1"/><text x="10.2924%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="10.1271%" y="885" width="0.0424%" height="15" fill="rgb(226,81,46)" fg:x="239" fg:w="1"/><text x="10.3771%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (8 samples, 0.34%)</title><rect x="10.0847%" y="901" width="0.3390%" height="15" fill="rgb(247,70,30)" fg:x="238" fg:w="8"/><text x="10.3347%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (6 samples, 0.25%)</title><rect x="10.1695%" y="885" width="0.2542%" height="15" fill="rgb(212,68,19)" fg:x="240" fg:w="6"/><text x="10.4195%" y="895.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="10.2966%" y="869" width="0.1271%" height="15" fill="rgb(240,187,13)" fg:x="243" fg:w="3"/><text x="10.5466%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="10.4237%" y="901" width="0.0424%" height="15" fill="rgb(223,113,26)" fg:x="246" fg:w="1"/><text x="10.6737%" y="911.50"></text></g><g><title>rlox::environ::Environ::get (1 samples, 0.04%)</title><rect x="10.4661%" y="901" width="0.0424%" height="15" fill="rgb(206,192,2)" fg:x="247" fg:w="1"/><text x="10.7161%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="10.4661%" y="885" width="0.0424%" height="15" fill="rgb(241,108,4)" fg:x="247" fg:w="1"/><text x="10.7161%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="10.4661%" y="869" width="0.0424%" height="15" fill="rgb(247,173,49)" fg:x="247" fg:w="1"/><text x="10.7161%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="10.4661%" y="853" width="0.0424%" height="15" fill="rgb(224,114,35)" fg:x="247" fg:w="1"/><text x="10.7161%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="10.4661%" y="837" width="0.0424%" height="15" fill="rgb(245,159,27)" fg:x="247" fg:w="1"/><text x="10.7161%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="10.4661%" y="821" width="0.0424%" height="15" fill="rgb(245,172,44)" fg:x="247" fg:w="1"/><text x="10.7161%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="10.4661%" y="805" width="0.0424%" height="15" fill="rgb(236,23,11)" fg:x="247" fg:w="1"/><text x="10.7161%" y="815.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="10.4661%" y="789" width="0.0424%" height="15" fill="rgb(205,117,38)" fg:x="247" fg:w="1"/><text x="10.7161%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="10.4661%" y="773" width="0.0424%" height="15" fill="rgb(237,72,25)" fg:x="247" fg:w="1"/><text x="10.7161%" y="783.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.13%)</title><rect x="11.1864%" y="885" width="0.1271%" height="15" fill="rgb(244,70,9)" fg:x="264" fg:w="3"/><text x="11.4364%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.13%)</title><rect x="11.1864%" y="869" width="0.1271%" height="15" fill="rgb(217,125,39)" fg:x="264" fg:w="3"/><text x="11.4364%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="11.1864%" y="853" width="0.1271%" height="15" fill="rgb(235,36,10)" fg:x="264" fg:w="3"/><text x="11.4364%" y="863.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="11.1864%" y="837" width="0.1271%" height="15" fill="rgb(251,123,47)" fg:x="264" fg:w="3"/><text x="11.4364%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="11.1864%" y="821" width="0.1271%" height="15" fill="rgb(221,13,13)" fg:x="264" fg:w="3"/><text x="11.4364%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="11.3136%" y="885" width="0.0424%" height="15" fill="rgb(238,131,9)" fg:x="267" fg:w="1"/><text x="11.5636%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="11.3136%" y="869" width="0.0424%" height="15" fill="rgb(211,50,8)" fg:x="267" fg:w="1"/><text x="11.5636%" y="879.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="11.3136%" y="853" width="0.0424%" height="15" fill="rgb(245,182,24)" fg:x="267" fg:w="1"/><text x="11.5636%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="11.3136%" y="837" width="0.0424%" height="15" fill="rgb(242,14,37)" fg:x="267" fg:w="1"/><text x="11.5636%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="11.3136%" y="821" width="0.0424%" height="15" fill="rgb(246,228,12)" fg:x="267" fg:w="1"/><text x="11.5636%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.04%)</title><rect x="11.3136%" y="805" width="0.0424%" height="15" fill="rgb(213,55,15)" fg:x="267" fg:w="1"/><text x="11.5636%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="11.3136%" y="789" width="0.0424%" height="15" fill="rgb(209,9,3)" fg:x="267" fg:w="1"/><text x="11.5636%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="11.3136%" y="773" width="0.0424%" height="15" fill="rgb(230,59,30)" fg:x="267" fg:w="1"/><text x="11.5636%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="11.3136%" y="757" width="0.0424%" height="15" fill="rgb(209,121,21)" fg:x="267" fg:w="1"/><text x="11.5636%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="11.3136%" y="741" width="0.0424%" height="15" fill="rgb(220,109,13)" fg:x="267" fg:w="1"/><text x="11.5636%" y="751.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate::{{closure}} (1 samples, 0.04%)</title><rect x="11.3136%" y="725" width="0.0424%" height="15" fill="rgb(232,18,1)" fg:x="267" fg:w="1"/><text x="11.5636%" y="735.50"></text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (2 samples, 0.08%)</title><rect x="11.3559%" y="885" width="0.0847%" height="15" fill="rgb(215,41,42)" fg:x="268" fg:w="2"/><text x="11.6059%" y="895.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="11.5678%" y="869" width="0.0424%" height="15" fill="rgb(224,123,36)" fg:x="273" fg:w="1"/><text x="11.8178%" y="879.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.04%)</title><rect x="11.5678%" y="853" width="0.0424%" height="15" fill="rgb(240,125,3)" fg:x="273" fg:w="1"/><text x="11.8178%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="11.5678%" y="837" width="0.0424%" height="15" fill="rgb(205,98,50)" fg:x="273" fg:w="1"/><text x="11.8178%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="11.5678%" y="821" width="0.0424%" height="15" fill="rgb(205,185,37)" fg:x="273" fg:w="1"/><text x="11.8178%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="11.5678%" y="805" width="0.0424%" height="15" fill="rgb(238,207,15)" fg:x="273" fg:w="1"/><text x="11.8178%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="11.5678%" y="789" width="0.0424%" height="15" fill="rgb(213,199,42)" fg:x="273" fg:w="1"/><text x="11.8178%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="11.5678%" y="773" width="0.0424%" height="15" fill="rgb(235,201,11)" fg:x="273" fg:w="1"/><text x="11.8178%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="11.5678%" y="757" width="0.0424%" height="15" fill="rgb(207,46,11)" fg:x="273" fg:w="1"/><text x="11.8178%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="11.5678%" y="741" width="0.0424%" height="15" fill="rgb(241,35,35)" fg:x="273" fg:w="1"/><text x="11.8178%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="11.6102%" y="869" width="0.0847%" height="15" fill="rgb(243,32,47)" fg:x="274" fg:w="2"/><text x="11.8602%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="11.6102%" y="853" width="0.0847%" height="15" fill="rgb(247,202,23)" fg:x="274" fg:w="2"/><text x="11.8602%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="11.6102%" y="837" width="0.0847%" height="15" fill="rgb(219,102,11)" fg:x="274" fg:w="2"/><text x="11.8602%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="11.6102%" y="821" width="0.0847%" height="15" fill="rgb(243,110,44)" fg:x="274" fg:w="2"/><text x="11.8602%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="11.6525%" y="805" width="0.0424%" height="15" fill="rgb(222,74,54)" fg:x="275" fg:w="1"/><text x="11.9025%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="11.6525%" y="789" width="0.0424%" height="15" fill="rgb(216,99,12)" fg:x="275" fg:w="1"/><text x="11.9025%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="11.6525%" y="773" width="0.0424%" height="15" fill="rgb(226,22,26)" fg:x="275" fg:w="1"/><text x="11.9025%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="11.6525%" y="757" width="0.0424%" height="15" fill="rgb(217,163,10)" fg:x="275" fg:w="1"/><text x="11.9025%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="11.6525%" y="741" width="0.0424%" height="15" fill="rgb(213,25,53)" fg:x="275" fg:w="1"/><text x="11.9025%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="11.6525%" y="725" width="0.0424%" height="15" fill="rgb(252,105,26)" fg:x="275" fg:w="1"/><text x="11.9025%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="11.6525%" y="709" width="0.0424%" height="15" fill="rgb(220,39,43)" fg:x="275" fg:w="1"/><text x="11.9025%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="11.6525%" y="693" width="0.0424%" height="15" fill="rgb(229,68,48)" fg:x="275" fg:w="1"/><text x="11.9025%" y="703.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (30 samples, 1.27%)</title><rect x="10.5085%" y="901" width="1.2712%" height="15" fill="rgb(252,8,32)" fg:x="248" fg:w="30"/><text x="10.7585%" y="911.50"></text></g><g><title>rlox::interpreter::LoxCallable::call (8 samples, 0.34%)</title><rect x="11.4407%" y="885" width="0.3390%" height="15" fill="rgb(223,20,43)" fg:x="270" fg:w="8"/><text x="11.6907%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="11.6949%" y="869" width="0.0847%" height="15" fill="rgb(229,81,49)" fg:x="276" fg:w="2"/><text x="11.9449%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="11.6949%" y="853" width="0.0847%" height="15" fill="rgb(236,28,36)" fg:x="276" fg:w="2"/><text x="11.9449%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.08%)</title><rect x="11.6949%" y="837" width="0.0847%" height="15" fill="rgb(249,185,26)" fg:x="276" fg:w="2"/><text x="11.9449%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="11.6949%" y="821" width="0.0847%" height="15" fill="rgb(249,174,33)" fg:x="276" fg:w="2"/><text x="11.9449%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="11.6949%" y="805" width="0.0847%" height="15" fill="rgb(233,201,37)" fg:x="276" fg:w="2"/><text x="11.9449%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="11.6949%" y="789" width="0.0847%" height="15" fill="rgb(221,78,26)" fg:x="276" fg:w="2"/><text x="11.9449%" y="799.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="11.6949%" y="773" width="0.0847%" height="15" fill="rgb(250,127,30)" fg:x="276" fg:w="2"/><text x="11.9449%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="11.6949%" y="757" width="0.0847%" height="15" fill="rgb(230,49,44)" fg:x="276" fg:w="2"/><text x="11.9449%" y="767.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (5 samples, 0.21%)</title><rect x="11.7797%" y="901" width="0.2119%" height="15" fill="rgb(229,67,23)" fg:x="278" fg:w="5"/><text x="12.0297%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="11.9068%" y="885" width="0.0847%" height="15" fill="rgb(249,83,47)" fg:x="281" fg:w="2"/><text x="12.1568%" y="895.50"></text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (2 samples, 0.08%)</title><rect x="11.9068%" y="869" width="0.0847%" height="15" fill="rgb(215,43,3)" fg:x="281" fg:w="2"/><text x="12.1568%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="11.9915%" y="885" width="0.0424%" height="15" fill="rgb(238,154,13)" fg:x="283" fg:w="1"/><text x="12.2415%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="11.9915%" y="869" width="0.0424%" height="15" fill="rgb(219,56,2)" fg:x="283" fg:w="1"/><text x="12.2415%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rlox::parser::Stmt,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="11.9915%" y="853" width="0.0424%" height="15" fill="rgb(233,0,4)" fg:x="283" fg:w="1"/><text x="12.2415%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="11.9915%" y="837" width="0.0424%" height="15" fill="rgb(235,30,7)" fg:x="283" fg:w="1"/><text x="12.2415%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="11.9915%" y="821" width="0.0424%" height="15" fill="rgb(250,79,13)" fg:x="283" fg:w="1"/><text x="12.2415%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="11.9915%" y="805" width="0.0424%" height="15" fill="rgb(211,146,34)" fg:x="283" fg:w="1"/><text x="12.2415%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="11.9915%" y="789" width="0.0424%" height="15" fill="rgb(228,22,38)" fg:x="283" fg:w="1"/><text x="12.2415%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="11.9915%" y="773" width="0.0424%" height="15" fill="rgb(235,168,5)" fg:x="283" fg:w="1"/><text x="12.2415%" y="783.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="11.9915%" y="757" width="0.0424%" height="15" fill="rgb(221,155,16)" fg:x="283" fg:w="1"/><text x="12.2415%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="11.9915%" y="741" width="0.0424%" height="15" fill="rgb(215,215,53)" fg:x="283" fg:w="1"/><text x="12.2415%" y="751.50"></text></g><g><title>[[stack]] (122 samples, 5.17%)</title><rect x="6.9068%" y="917" width="5.1695%" height="15" fill="rgb(223,4,10)" fg:x="163" fg:w="122"/><text x="7.1568%" y="927.50">[[stac..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (2 samples, 0.08%)</title><rect x="11.9915%" y="901" width="0.0847%" height="15" fill="rgb(234,103,6)" fg:x="283" fg:w="2"/><text x="12.2415%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="12.0339%" y="885" width="0.0424%" height="15" fill="rgb(227,97,0)" fg:x="284" fg:w="1"/><text x="12.2839%" y="895.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block::{{closure}} (1 samples, 0.04%)</title><rect x="12.0339%" y="869" width="0.0424%" height="15" fill="rgb(234,150,53)" fg:x="284" fg:w="1"/><text x="12.2839%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="12.0339%" y="853" width="0.0424%" height="15" fill="rgb(228,201,54)" fg:x="284" fg:w="1"/><text x="12.2839%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="12.0339%" y="837" width="0.0424%" height="15" fill="rgb(222,22,37)" fg:x="284" fg:w="1"/><text x="12.2839%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.47%)</title><rect x="12.0763%" y="901" width="0.4661%" height="15" fill="rgb(237,53,32)" fg:x="285" fg:w="11"/><text x="12.3263%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="12.7119%" y="773" width="0.0847%" height="15" fill="rgb(233,25,53)" fg:x="300" fg:w="2"/><text x="12.9619%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="12.7119%" y="757" width="0.0847%" height="15" fill="rgb(210,40,34)" fg:x="300" fg:w="2"/><text x="12.9619%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="12.7119%" y="741" width="0.0847%" height="15" fill="rgb(241,220,44)" fg:x="300" fg:w="2"/><text x="12.9619%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="12.7119%" y="725" width="0.0847%" height="15" fill="rgb(235,28,35)" fg:x="300" fg:w="2"/><text x="12.9619%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="12.7119%" y="709" width="0.0847%" height="15" fill="rgb(210,56,17)" fg:x="300" fg:w="2"/><text x="12.9619%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="12.7119%" y="693" width="0.0847%" height="15" fill="rgb(224,130,29)" fg:x="300" fg:w="2"/><text x="12.9619%" y="703.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="12.7119%" y="677" width="0.0847%" height="15" fill="rgb(235,212,8)" fg:x="300" fg:w="2"/><text x="12.9619%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="12.7119%" y="661" width="0.0847%" height="15" fill="rgb(223,33,50)" fg:x="300" fg:w="2"/><text x="12.9619%" y="671.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (7 samples, 0.30%)</title><rect x="12.5424%" y="901" width="0.2966%" height="15" fill="rgb(219,149,13)" fg:x="296" fg:w="7"/><text x="12.7924%" y="911.50"></text></g><g><title>&lt;rlox::interpreter::LoxCallable as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="12.7119%" y="885" width="0.1271%" height="15" fill="rgb(250,156,29)" fg:x="300" fg:w="3"/><text x="12.9619%" y="895.50"></text></g><g><title>&lt;rlox::interpreter::LoxFunction as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="12.7119%" y="869" width="0.1271%" height="15" fill="rgb(216,193,19)" fg:x="300" fg:w="3"/><text x="12.9619%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="12.7119%" y="853" width="0.1271%" height="15" fill="rgb(216,135,14)" fg:x="300" fg:w="3"/><text x="12.9619%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="12.7119%" y="837" width="0.1271%" height="15" fill="rgb(241,47,5)" fg:x="300" fg:w="3"/><text x="12.9619%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="12.7119%" y="821" width="0.1271%" height="15" fill="rgb(233,42,35)" fg:x="300" fg:w="3"/><text x="12.9619%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="12.7119%" y="805" width="0.1271%" height="15" fill="rgb(231,13,6)" fg:x="300" fg:w="3"/><text x="12.9619%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="12.7119%" y="789" width="0.1271%" height="15" fill="rgb(207,181,40)" fg:x="300" fg:w="3"/><text x="12.9619%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="12.7966%" y="773" width="0.0424%" height="15" fill="rgb(254,173,49)" fg:x="302" fg:w="1"/><text x="13.0466%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="12.7966%" y="757" width="0.0424%" height="15" fill="rgb(221,1,38)" fg:x="302" fg:w="1"/><text x="13.0466%" y="767.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2 samples, 0.08%)</title><rect x="14.2373%" y="869" width="0.0847%" height="15" fill="rgb(206,124,46)" fg:x="336" fg:w="2"/><text x="14.4873%" y="879.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (41 samples, 1.74%)</title><rect x="12.8390%" y="901" width="1.7373%" height="15" fill="rgb(249,21,11)" fg:x="303" fg:w="41"/><text x="13.0890%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.34%)</title><rect x="14.2373%" y="885" width="0.3390%" height="15" fill="rgb(222,201,40)" fg:x="336" fg:w="8"/><text x="14.4873%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6 samples, 0.25%)</title><rect x="14.3220%" y="869" width="0.2542%" height="15" fill="rgb(235,61,29)" fg:x="338" fg:w="6"/><text x="14.5720%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.25%)</title><rect x="14.3220%" y="853" width="0.2542%" height="15" fill="rgb(219,207,3)" fg:x="338" fg:w="6"/><text x="14.5720%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.25%)</title><rect x="14.3220%" y="837" width="0.2542%" height="15" fill="rgb(222,56,46)" fg:x="338" fg:w="6"/><text x="14.5720%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.25%)</title><rect x="14.3220%" y="821" width="0.2542%" height="15" fill="rgb(239,76,54)" fg:x="338" fg:w="6"/><text x="14.5720%" y="831.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.25%)</title><rect x="14.3220%" y="805" width="0.2542%" height="15" fill="rgb(231,124,27)" fg:x="338" fg:w="6"/><text x="14.5720%" y="815.50"></text></g><g><title>__rdl_alloc (6 samples, 0.25%)</title><rect x="14.3220%" y="789" width="0.2542%" height="15" fill="rgb(249,195,6)" fg:x="338" fg:w="6"/><text x="14.5720%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.25%)</title><rect x="14.3220%" y="773" width="0.2542%" height="15" fill="rgb(237,174,47)" fg:x="338" fg:w="6"/><text x="14.5720%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="14.7881%" y="885" width="0.0424%" height="15" fill="rgb(206,201,31)" fg:x="349" fg:w="1"/><text x="15.0381%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.04%)</title><rect x="14.7881%" y="869" width="0.0424%" height="15" fill="rgb(231,57,52)" fg:x="349" fg:w="1"/><text x="15.0381%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.04%)</title><rect x="14.7881%" y="853" width="0.0424%" height="15" fill="rgb(248,177,22)" fg:x="349" fg:w="1"/><text x="15.0381%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="14.7881%" y="837" width="0.0424%" height="15" fill="rgb(215,211,37)" fg:x="349" fg:w="1"/><text x="15.0381%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="14.7881%" y="821" width="0.0424%" height="15" fill="rgb(241,128,51)" fg:x="349" fg:w="1"/><text x="15.0381%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="14.7881%" y="805" width="0.0424%" height="15" fill="rgb(227,165,31)" fg:x="349" fg:w="1"/><text x="15.0381%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="14.7881%" y="789" width="0.0424%" height="15" fill="rgb(228,167,24)" fg:x="349" fg:w="1"/><text x="15.0381%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="14.7881%" y="773" width="0.0424%" height="15" fill="rgb(228,143,12)" fg:x="349" fg:w="1"/><text x="15.0381%" y="783.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (7 samples, 0.30%)</title><rect x="14.5763%" y="901" width="0.2966%" height="15" fill="rgb(249,149,8)" fg:x="344" fg:w="7"/><text x="14.8263%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="14.8305%" y="885" width="0.0424%" height="15" fill="rgb(243,35,44)" fg:x="350" fg:w="1"/><text x="15.0805%" y="895.50"></text></g><g><title>__GI___libc_free (52 samples, 2.20%)</title><rect x="14.8729%" y="901" width="2.2034%" height="15" fill="rgb(246,89,9)" fg:x="351" fg:w="52"/><text x="15.1229%" y="911.50">_..</text></g><g><title>__GI___libc_malloc (24 samples, 1.02%)</title><rect x="17.0763%" y="901" width="1.0169%" height="15" fill="rgb(233,213,13)" fg:x="403" fg:w="24"/><text x="17.3263%" y="911.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.08%)</title><rect x="18.0932%" y="901" width="0.0847%" height="15" fill="rgb(233,141,41)" fg:x="427" fg:w="2"/><text x="18.3432%" y="911.50"></text></g><g><title>_int_free (29 samples, 1.23%)</title><rect x="18.1780%" y="901" width="1.2288%" height="15" fill="rgb(239,167,4)" fg:x="429" fg:w="29"/><text x="18.4280%" y="911.50"></text></g><g><title>_int_malloc (2 samples, 0.08%)</title><rect x="19.4068%" y="901" width="0.0847%" height="15" fill="rgb(209,217,16)" fg:x="458" fg:w="2"/><text x="19.6568%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.17%)</title><rect x="19.4915%" y="901" width="0.1695%" height="15" fill="rgb(219,88,35)" fg:x="460" fg:w="4"/><text x="19.7415%" y="911.50"></text></g><g><title>core::mem::drop (4 samples, 0.17%)</title><rect x="19.4915%" y="885" width="0.1695%" height="15" fill="rgb(220,193,23)" fg:x="460" fg:w="4"/><text x="19.7415%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (4 samples, 0.17%)</title><rect x="19.4915%" y="869" width="0.1695%" height="15" fill="rgb(230,90,52)" fg:x="460" fg:w="4"/><text x="19.7415%" y="879.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="19.4915%" y="853" width="0.1695%" height="15" fill="rgb(252,106,19)" fg:x="460" fg:w="4"/><text x="19.7415%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.17%)</title><rect x="19.4915%" y="837" width="0.1695%" height="15" fill="rgb(206,74,20)" fg:x="460" fg:w="4"/><text x="19.7415%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="19.4915%" y="821" width="0.1695%" height="15" fill="rgb(230,138,44)" fg:x="460" fg:w="4"/><text x="19.7415%" y="831.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.17%)</title><rect x="19.4915%" y="805" width="0.1695%" height="15" fill="rgb(235,182,43)" fg:x="460" fg:w="4"/><text x="19.7415%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.17%)</title><rect x="19.4915%" y="789" width="0.1695%" height="15" fill="rgb(242,16,51)" fg:x="460" fg:w="4"/><text x="19.7415%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxCallable&gt; (1 samples, 0.04%)</title><rect x="19.6610%" y="901" width="0.0424%" height="15" fill="rgb(248,9,4)" fg:x="464" fg:w="1"/><text x="19.9110%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxFunction&gt; (1 samples, 0.04%)</title><rect x="19.6610%" y="885" width="0.0424%" height="15" fill="rgb(210,31,22)" fg:x="464" fg:w="1"/><text x="19.9110%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="19.6610%" y="869" width="0.0424%" height="15" fill="rgb(239,54,39)" fg:x="464" fg:w="1"/><text x="19.9110%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="19.6610%" y="853" width="0.0424%" height="15" fill="rgb(230,99,41)" fg:x="464" fg:w="1"/><text x="19.9110%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="19.6610%" y="837" width="0.0424%" height="15" fill="rgb(253,106,12)" fg:x="464" fg:w="1"/><text x="19.9110%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="19.6610%" y="821" width="0.0424%" height="15" fill="rgb(213,46,41)" fg:x="464" fg:w="1"/><text x="19.9110%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="19.6610%" y="805" width="0.0424%" height="15" fill="rgb(215,133,35)" fg:x="464" fg:w="1"/><text x="19.9110%" y="815.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="19.6610%" y="789" width="0.0424%" height="15" fill="rgb(213,28,5)" fg:x="464" fg:w="1"/><text x="19.9110%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="19.6610%" y="773" width="0.0424%" height="15" fill="rgb(215,77,49)" fg:x="464" fg:w="1"/><text x="19.9110%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="20.0847%" y="885" width="0.0424%" height="15" fill="rgb(248,100,22)" fg:x="474" fg:w="1"/><text x="20.3347%" y="895.50"></text></g><g><title>_int_free (19 samples, 0.81%)</title><rect x="20.1271%" y="885" width="0.8051%" height="15" fill="rgb(208,67,9)" fg:x="475" fg:w="19"/><text x="20.3771%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (32 samples, 1.36%)</title><rect x="19.7034%" y="901" width="1.3559%" height="15" fill="rgb(219,133,21)" fg:x="465" fg:w="32"/><text x="19.9534%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (3 samples, 0.13%)</title><rect x="20.9322%" y="885" width="0.1271%" height="15" fill="rgb(246,46,29)" fg:x="494" fg:w="3"/><text x="21.1822%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (1 samples, 0.04%)</title><rect x="21.0593%" y="901" width="0.0424%" height="15" fill="rgb(246,185,52)" fg:x="497" fg:w="1"/><text x="21.3093%" y="911.50"></text></g><g><title>rlox::environ::Environ::define (3 samples, 0.13%)</title><rect x="21.1017%" y="901" width="0.1271%" height="15" fill="rgb(252,136,11)" fg:x="498" fg:w="3"/><text x="21.3517%" y="911.50"></text></g><g><title>rlox::environ::Environ::get (7 samples, 0.30%)</title><rect x="21.2288%" y="901" width="0.2966%" height="15" fill="rgb(219,138,53)" fg:x="501" fg:w="7"/><text x="21.4788%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.17%)</title><rect x="21.3559%" y="885" width="0.1695%" height="15" fill="rgb(211,51,23)" fg:x="504" fg:w="4"/><text x="21.6059%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="21.3559%" y="869" width="0.1695%" height="15" fill="rgb(247,221,28)" fg:x="504" fg:w="4"/><text x="21.6059%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="21.3559%" y="853" width="0.1695%" height="15" fill="rgb(251,222,45)" fg:x="504" fg:w="4"/><text x="21.6059%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="21.3559%" y="837" width="0.1695%" height="15" fill="rgb(217,162,53)" fg:x="504" fg:w="4"/><text x="21.6059%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.17%)</title><rect x="21.3559%" y="821" width="0.1695%" height="15" fill="rgb(229,93,14)" fg:x="504" fg:w="4"/><text x="21.6059%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="21.3559%" y="805" width="0.1695%" height="15" fill="rgb(209,67,49)" fg:x="504" fg:w="4"/><text x="21.6059%" y="815.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.17%)</title><rect x="21.3559%" y="789" width="0.1695%" height="15" fill="rgb(213,87,29)" fg:x="504" fg:w="4"/><text x="21.6059%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.17%)</title><rect x="21.3559%" y="773" width="0.1695%" height="15" fill="rgb(205,151,52)" fg:x="504" fg:w="4"/><text x="21.6059%" y="783.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="22.0339%" y="405" width="0.0424%" height="15" fill="rgb(253,215,39)" fg:x="520" fg:w="1"/><text x="22.2839%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="22.1186%" y="277" width="0.0424%" height="15" fill="rgb(221,220,41)" fg:x="522" fg:w="1"/><text x="22.3686%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="22.1186%" y="261" width="0.0424%" height="15" fill="rgb(218,133,21)" fg:x="522" fg:w="1"/><text x="22.3686%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.13%)</title><rect x="22.1610%" y="261" width="0.1271%" height="15" fill="rgb(221,193,43)" fg:x="523" fg:w="3"/><text x="22.4110%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="22.1186%" y="325" width="0.2542%" height="15" fill="rgb(240,128,52)" fg:x="522" fg:w="6"/><text x="22.3686%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="22.1186%" y="309" width="0.2542%" height="15" fill="rgb(253,114,12)" fg:x="522" fg:w="6"/><text x="22.3686%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="22.1186%" y="293" width="0.2542%" height="15" fill="rgb(215,223,47)" fg:x="522" fg:w="6"/><text x="22.3686%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.21%)</title><rect x="22.1610%" y="277" width="0.2119%" height="15" fill="rgb(248,225,23)" fg:x="523" fg:w="5"/><text x="22.4110%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.08%)</title><rect x="22.2881%" y="261" width="0.0847%" height="15" fill="rgb(250,108,0)" fg:x="526" fg:w="2"/><text x="22.5381%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="22.3729%" y="325" width="0.0424%" height="15" fill="rgb(228,208,7)" fg:x="528" fg:w="1"/><text x="22.6229%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="22.4576%" y="229" width="0.1271%" height="15" fill="rgb(244,45,10)" fg:x="530" fg:w="3"/><text x="22.7076%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="22.5424%" y="213" width="0.0424%" height="15" fill="rgb(207,125,25)" fg:x="532" fg:w="1"/><text x="22.7924%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.64%)</title><rect x="22.0339%" y="645" width="0.6356%" height="15" fill="rgb(210,195,18)" fg:x="520" fg:w="15"/><text x="22.2839%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.64%)</title><rect x="22.0339%" y="629" width="0.6356%" height="15" fill="rgb(249,80,12)" fg:x="520" fg:w="15"/><text x="22.2839%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 0.64%)</title><rect x="22.0339%" y="613" width="0.6356%" height="15" fill="rgb(221,65,9)" fg:x="520" fg:w="15"/><text x="22.2839%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.64%)</title><rect x="22.0339%" y="597" width="0.6356%" height="15" fill="rgb(235,49,36)" fg:x="520" fg:w="15"/><text x="22.2839%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.64%)</title><rect x="22.0339%" y="581" width="0.6356%" height="15" fill="rgb(225,32,20)" fg:x="520" fg:w="15"/><text x="22.2839%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15 samples, 0.64%)</title><rect x="22.0339%" y="565" width="0.6356%" height="15" fill="rgb(215,141,46)" fg:x="520" fg:w="15"/><text x="22.2839%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.64%)</title><rect x="22.0339%" y="549" width="0.6356%" height="15" fill="rgb(250,160,47)" fg:x="520" fg:w="15"/><text x="22.2839%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.64%)</title><rect x="22.0339%" y="533" width="0.6356%" height="15" fill="rgb(216,222,40)" fg:x="520" fg:w="15"/><text x="22.2839%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.64%)</title><rect x="22.0339%" y="517" width="0.6356%" height="15" fill="rgb(234,217,39)" fg:x="520" fg:w="15"/><text x="22.2839%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 0.64%)</title><rect x="22.0339%" y="501" width="0.6356%" height="15" fill="rgb(207,178,40)" fg:x="520" fg:w="15"/><text x="22.2839%" y="511.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate::{{closure}} (15 samples, 0.64%)</title><rect x="22.0339%" y="485" width="0.6356%" height="15" fill="rgb(221,136,13)" fg:x="520" fg:w="15"/><text x="22.2839%" y="495.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (15 samples, 0.64%)</title><rect x="22.0339%" y="469" width="0.6356%" height="15" fill="rgb(249,199,10)" fg:x="520" fg:w="15"/><text x="22.2839%" y="479.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (15 samples, 0.64%)</title><rect x="22.0339%" y="453" width="0.6356%" height="15" fill="rgb(249,222,13)" fg:x="520" fg:w="15"/><text x="22.2839%" y="463.50"></text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (15 samples, 0.64%)</title><rect x="22.0339%" y="437" width="0.6356%" height="15" fill="rgb(244,185,38)" fg:x="520" fg:w="15"/><text x="22.2839%" y="447.50"></text></g><g><title>rlox::environ::Environ::get (15 samples, 0.64%)</title><rect x="22.0339%" y="421" width="0.6356%" height="15" fill="rgb(236,202,9)" fg:x="520" fg:w="15"/><text x="22.2839%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.59%)</title><rect x="22.0763%" y="405" width="0.5932%" height="15" fill="rgb(250,229,37)" fg:x="521" fg:w="14"/><text x="22.3263%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.59%)</title><rect x="22.0763%" y="389" width="0.5932%" height="15" fill="rgb(206,174,23)" fg:x="521" fg:w="14"/><text x="22.3263%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.59%)</title><rect x="22.0763%" y="373" width="0.5932%" height="15" fill="rgb(211,33,43)" fg:x="521" fg:w="14"/><text x="22.3263%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.59%)</title><rect x="22.0763%" y="357" width="0.5932%" height="15" fill="rgb(245,58,50)" fg:x="521" fg:w="14"/><text x="22.3263%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.59%)</title><rect x="22.0763%" y="341" width="0.5932%" height="15" fill="rgb(244,68,36)" fg:x="521" fg:w="14"/><text x="22.3263%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.25%)</title><rect x="22.4153%" y="325" width="0.2542%" height="15" fill="rgb(232,229,15)" fg:x="529" fg:w="6"/><text x="22.6653%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.25%)</title><rect x="22.4153%" y="309" width="0.2542%" height="15" fill="rgb(254,30,23)" fg:x="529" fg:w="6"/><text x="22.6653%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.25%)</title><rect x="22.4153%" y="293" width="0.2542%" height="15" fill="rgb(235,160,14)" fg:x="529" fg:w="6"/><text x="22.6653%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (6 samples, 0.25%)</title><rect x="22.4153%" y="277" width="0.2542%" height="15" fill="rgb(212,155,44)" fg:x="529" fg:w="6"/><text x="22.6653%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6 samples, 0.25%)</title><rect x="22.4153%" y="261" width="0.2542%" height="15" fill="rgb(226,2,50)" fg:x="529" fg:w="6"/><text x="22.6653%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6 samples, 0.25%)</title><rect x="22.4153%" y="245" width="0.2542%" height="15" fill="rgb(234,177,6)" fg:x="529" fg:w="6"/><text x="22.6653%" y="255.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.08%)</title><rect x="22.5847%" y="229" width="0.0847%" height="15" fill="rgb(217,24,9)" fg:x="533" fg:w="2"/><text x="22.8347%" y="239.50"></text></g><g><title>__GI___libc_free (8 samples, 0.34%)</title><rect x="22.7542%" y="533" width="0.3390%" height="15" fill="rgb(220,13,46)" fg:x="537" fg:w="8"/><text x="23.0042%" y="543.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="22.9237%" y="517" width="0.1695%" height="15" fill="rgb(239,221,27)" fg:x="541" fg:w="4"/><text x="23.1737%" y="527.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="23.1356%" y="437" width="0.2966%" height="15" fill="rgb(222,198,25)" fg:x="546" fg:w="7"/><text x="23.3856%" y="447.50"></text></g><g><title>alloc::alloc::box_free (9 samples, 0.38%)</title><rect x="23.0932%" y="533" width="0.3814%" height="15" fill="rgb(211,99,13)" fg:x="545" fg:w="9"/><text x="23.3432%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.38%)</title><rect x="23.0932%" y="517" width="0.3814%" height="15" fill="rgb(232,111,31)" fg:x="545" fg:w="9"/><text x="23.3432%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.38%)</title><rect x="23.0932%" y="501" width="0.3814%" height="15" fill="rgb(245,82,37)" fg:x="545" fg:w="9"/><text x="23.3432%" y="511.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.38%)</title><rect x="23.0932%" y="485" width="0.3814%" height="15" fill="rgb(227,149,46)" fg:x="545" fg:w="9"/><text x="23.3432%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.38%)</title><rect x="23.0932%" y="469" width="0.3814%" height="15" fill="rgb(218,36,50)" fg:x="545" fg:w="9"/><text x="23.3432%" y="479.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="23.0932%" y="453" width="0.3814%" height="15" fill="rgb(226,80,48)" fg:x="545" fg:w="9"/><text x="23.3432%" y="463.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="23.4322%" y="437" width="0.0424%" height="15" fill="rgb(238,224,15)" fg:x="553" fg:w="1"/><text x="23.6822%" y="447.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="23.5593%" y="357" width="0.3814%" height="15" fill="rgb(241,136,10)" fg:x="556" fg:w="9"/><text x="23.8093%" y="367.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="23.6441%" y="341" width="0.2966%" height="15" fill="rgb(208,32,45)" fg:x="558" fg:w="7"/><text x="23.8941%" y="351.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="23.8983%" y="325" width="0.0424%" height="15" fill="rgb(207,135,9)" fg:x="564" fg:w="1"/><text x="24.1483%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.47%)</title><rect x="23.5593%" y="389" width="0.4661%" height="15" fill="rgb(206,86,44)" fg:x="556" fg:w="11"/><text x="23.8093%" y="399.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate::{{closure}} (11 samples, 0.47%)</title><rect x="23.5593%" y="373" width="0.4661%" height="15" fill="rgb(245,177,15)" fg:x="556" fg:w="11"/><text x="23.8093%" y="383.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (2 samples, 0.08%)</title><rect x="23.9407%" y="357" width="0.0847%" height="15" fill="rgb(206,64,50)" fg:x="565" fg:w="2"/><text x="24.1907%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 0.76%)</title><rect x="23.4746%" y="469" width="0.7627%" height="15" fill="rgb(234,36,40)" fg:x="554" fg:w="18"/><text x="23.7246%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (18 samples, 0.76%)</title><rect x="23.4746%" y="453" width="0.7627%" height="15" fill="rgb(213,64,8)" fg:x="554" fg:w="18"/><text x="23.7246%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.76%)</title><rect x="23.4746%" y="437" width="0.7627%" height="15" fill="rgb(210,75,36)" fg:x="554" fg:w="18"/><text x="23.7246%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.76%)</title><rect x="23.4746%" y="421" width="0.7627%" height="15" fill="rgb(229,88,21)" fg:x="554" fg:w="18"/><text x="23.7246%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.76%)</title><rect x="23.4746%" y="405" width="0.7627%" height="15" fill="rgb(252,204,47)" fg:x="554" fg:w="18"/><text x="23.7246%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rlox::parser::Expression&gt;&gt; (5 samples, 0.21%)</title><rect x="24.0254%" y="389" width="0.2119%" height="15" fill="rgb(208,77,27)" fg:x="567" fg:w="5"/><text x="24.2754%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.21%)</title><rect x="24.0254%" y="373" width="0.2119%" height="15" fill="rgb(221,76,26)" fg:x="567" fg:w="5"/><text x="24.2754%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rlox::parser::Expression,alloc::alloc::Global&gt;&gt; (5 samples, 0.21%)</title><rect x="24.0254%" y="357" width="0.2119%" height="15" fill="rgb(225,139,18)" fg:x="567" fg:w="5"/><text x="24.2754%" y="367.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.21%)</title><rect x="24.0254%" y="341" width="0.2119%" height="15" fill="rgb(230,137,11)" fg:x="567" fg:w="5"/><text x="24.2754%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Expression&gt;&gt; (5 samples, 0.21%)</title><rect x="24.0254%" y="325" width="0.2119%" height="15" fill="rgb(212,28,1)" fg:x="567" fg:w="5"/><text x="24.2754%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.21%)</title><rect x="24.0254%" y="309" width="0.2119%" height="15" fill="rgb(248,164,17)" fg:x="567" fg:w="5"/><text x="24.2754%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.21%)</title><rect x="24.0254%" y="293" width="0.2119%" height="15" fill="rgb(222,171,42)" fg:x="567" fg:w="5"/><text x="24.2754%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.21%)</title><rect x="24.0254%" y="277" width="0.2119%" height="15" fill="rgb(243,84,45)" fg:x="567" fg:w="5"/><text x="24.2754%" y="287.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.21%)</title><rect x="24.0254%" y="261" width="0.2119%" height="15" fill="rgb(252,49,23)" fg:x="567" fg:w="5"/><text x="24.2754%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.21%)</title><rect x="24.0254%" y="245" width="0.2119%" height="15" fill="rgb(215,19,7)" fg:x="567" fg:w="5"/><text x="24.2754%" y="255.50"></text></g><g><title>__GI___libc_free (5 samples, 0.21%)</title><rect x="24.0254%" y="229" width="0.2119%" height="15" fill="rgb(238,81,41)" fg:x="567" fg:w="5"/><text x="24.2754%" y="239.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="24.0678%" y="213" width="0.1695%" height="15" fill="rgb(210,199,37)" fg:x="568" fg:w="4"/><text x="24.3178%" y="223.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="24.6186%" y="309" width="0.0424%" height="15" fill="rgb(244,192,49)" fg:x="581" fg:w="1"/><text x="24.8686%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.47%)</title><rect x="24.2797%" y="405" width="0.4661%" height="15" fill="rgb(226,211,11)" fg:x="573" fg:w="11"/><text x="24.5297%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.47%)</title><rect x="24.2797%" y="389" width="0.4661%" height="15" fill="rgb(236,162,54)" fg:x="573" fg:w="11"/><text x="24.5297%" y="399.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.42%)</title><rect x="24.3220%" y="373" width="0.4237%" height="15" fill="rgb(220,229,9)" fg:x="574" fg:w="10"/><text x="24.5720%" y="383.50"></text></g><g><title>__rdl_alloc (10 samples, 0.42%)</title><rect x="24.3220%" y="357" width="0.4237%" height="15" fill="rgb(250,87,22)" fg:x="574" fg:w="10"/><text x="24.5720%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (10 samples, 0.42%)</title><rect x="24.3220%" y="341" width="0.4237%" height="15" fill="rgb(239,43,17)" fg:x="574" fg:w="10"/><text x="24.5720%" y="351.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.42%)</title><rect x="24.3220%" y="325" width="0.4237%" height="15" fill="rgb(231,177,25)" fg:x="574" fg:w="10"/><text x="24.5720%" y="335.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="24.6610%" y="309" width="0.0847%" height="15" fill="rgb(219,179,1)" fg:x="582" fg:w="2"/><text x="24.9110%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 1.31%)</title><rect x="23.4746%" y="533" width="1.3136%" height="15" fill="rgb(238,219,53)" fg:x="554" fg:w="31"/><text x="23.7246%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 1.31%)</title><rect x="23.4746%" y="517" width="1.3136%" height="15" fill="rgb(232,167,36)" fg:x="554" fg:w="31"/><text x="23.7246%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (31 samples, 1.31%)</title><rect x="23.4746%" y="501" width="1.3136%" height="15" fill="rgb(244,19,51)" fg:x="554" fg:w="31"/><text x="23.7246%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31 samples, 1.31%)</title><rect x="23.4746%" y="485" width="1.3136%" height="15" fill="rgb(224,6,22)" fg:x="554" fg:w="31"/><text x="23.7246%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.55%)</title><rect x="24.2373%" y="469" width="0.5508%" height="15" fill="rgb(224,145,5)" fg:x="572" fg:w="13"/><text x="24.4873%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.55%)</title><rect x="24.2373%" y="453" width="0.5508%" height="15" fill="rgb(234,130,49)" fg:x="572" fg:w="13"/><text x="24.4873%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.55%)</title><rect x="24.2373%" y="437" width="0.5508%" height="15" fill="rgb(254,6,2)" fg:x="572" fg:w="13"/><text x="24.4873%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.55%)</title><rect x="24.2373%" y="421" width="0.5508%" height="15" fill="rgb(208,96,46)" fg:x="572" fg:w="13"/><text x="24.4873%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="24.7458%" y="405" width="0.0424%" height="15" fill="rgb(239,3,39)" fg:x="584" fg:w="1"/><text x="24.9958%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="24.7458%" y="389" width="0.0424%" height="15" fill="rgb(233,210,1)" fg:x="584" fg:w="1"/><text x="24.9958%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.51%)</title><rect x="24.7881%" y="501" width="0.5085%" height="15" fill="rgb(244,137,37)" fg:x="585" fg:w="12"/><text x="25.0381%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.51%)</title><rect x="24.7881%" y="485" width="0.5085%" height="15" fill="rgb(240,136,2)" fg:x="585" fg:w="12"/><text x="25.0381%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.51%)</title><rect x="24.7881%" y="469" width="0.5085%" height="15" fill="rgb(239,18,37)" fg:x="585" fg:w="12"/><text x="25.0381%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.51%)</title><rect x="24.7881%" y="453" width="0.5085%" height="15" fill="rgb(218,185,22)" fg:x="585" fg:w="12"/><text x="25.0381%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.51%)</title><rect x="24.7881%" y="437" width="0.5085%" height="15" fill="rgb(225,218,4)" fg:x="585" fg:w="12"/><text x="25.0381%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.51%)</title><rect x="24.7881%" y="421" width="0.5085%" height="15" fill="rgb(230,182,32)" fg:x="585" fg:w="12"/><text x="25.0381%" y="431.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.51%)</title><rect x="24.7881%" y="405" width="0.5085%" height="15" fill="rgb(242,56,43)" fg:x="585" fg:w="12"/><text x="25.0381%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.51%)</title><rect x="24.7881%" y="389" width="0.5085%" height="15" fill="rgb(233,99,24)" fg:x="585" fg:w="12"/><text x="25.0381%" y="399.50"></text></g><g><title>__GI___libc_free (12 samples, 0.51%)</title><rect x="24.7881%" y="373" width="0.5085%" height="15" fill="rgb(234,209,42)" fg:x="585" fg:w="12"/><text x="25.0381%" y="383.50"></text></g><g><title>_int_free (12 samples, 0.51%)</title><rect x="24.7881%" y="357" width="0.5085%" height="15" fill="rgb(227,7,12)" fg:x="585" fg:w="12"/><text x="25.0381%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="25.2966%" y="485" width="0.3814%" height="15" fill="rgb(245,203,43)" fg:x="597" fg:w="9"/><text x="25.5466%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (9 samples, 0.38%)</title><rect x="25.2966%" y="469" width="0.3814%" height="15" fill="rgb(238,205,33)" fg:x="597" fg:w="9"/><text x="25.5466%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.30%)</title><rect x="25.3814%" y="453" width="0.2966%" height="15" fill="rgb(231,56,7)" fg:x="599" fg:w="7"/><text x="25.6314%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.30%)</title><rect x="25.3814%" y="437" width="0.2966%" height="15" fill="rgb(244,186,29)" fg:x="599" fg:w="7"/><text x="25.6314%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.30%)</title><rect x="25.3814%" y="421" width="0.2966%" height="15" fill="rgb(234,111,31)" fg:x="599" fg:w="7"/><text x="25.6314%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.30%)</title><rect x="25.3814%" y="405" width="0.2966%" height="15" fill="rgb(241,149,10)" fg:x="599" fg:w="7"/><text x="25.6314%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.30%)</title><rect x="25.3814%" y="389" width="0.2966%" height="15" fill="rgb(249,206,44)" fg:x="599" fg:w="7"/><text x="25.6314%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.30%)</title><rect x="25.3814%" y="373" width="0.2966%" height="15" fill="rgb(251,153,30)" fg:x="599" fg:w="7"/><text x="25.6314%" y="383.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.30%)</title><rect x="25.3814%" y="357" width="0.2966%" height="15" fill="rgb(239,152,38)" fg:x="599" fg:w="7"/><text x="25.6314%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.30%)</title><rect x="25.3814%" y="341" width="0.2966%" height="15" fill="rgb(249,139,47)" fg:x="599" fg:w="7"/><text x="25.6314%" y="351.50"></text></g><g><title>__GI___libc_free (7 samples, 0.30%)</title><rect x="25.3814%" y="325" width="0.2966%" height="15" fill="rgb(244,64,35)" fg:x="599" fg:w="7"/><text x="25.6314%" y="335.50"></text></g><g><title>_int_free (5 samples, 0.21%)</title><rect x="25.4661%" y="309" width="0.2119%" height="15" fill="rgb(216,46,15)" fg:x="601" fg:w="5"/><text x="25.7161%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (25 samples, 1.06%)</title><rect x="25.2966%" y="501" width="1.0593%" height="15" fill="rgb(250,74,19)" fg:x="597" fg:w="25"/><text x="25.5466%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (16 samples, 0.68%)</title><rect x="25.6780%" y="485" width="0.6780%" height="15" fill="rgb(249,42,33)" fg:x="606" fg:w="16"/><text x="25.9280%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.68%)</title><rect x="25.6780%" y="469" width="0.6780%" height="15" fill="rgb(242,149,17)" fg:x="606" fg:w="16"/><text x="25.9280%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.68%)</title><rect x="25.6780%" y="453" width="0.6780%" height="15" fill="rgb(244,29,21)" fg:x="606" fg:w="16"/><text x="25.9280%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.68%)</title><rect x="25.6780%" y="437" width="0.6780%" height="15" fill="rgb(220,130,37)" fg:x="606" fg:w="16"/><text x="25.9280%" y="447.50"></text></g><g><title>__rdl_dealloc (16 samples, 0.68%)</title><rect x="25.6780%" y="421" width="0.6780%" height="15" fill="rgb(211,67,2)" fg:x="606" fg:w="16"/><text x="25.9280%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (16 samples, 0.68%)</title><rect x="25.6780%" y="405" width="0.6780%" height="15" fill="rgb(235,68,52)" fg:x="606" fg:w="16"/><text x="25.9280%" y="415.50"></text></g><g><title>__GI___libc_free (16 samples, 0.68%)</title><rect x="25.6780%" y="389" width="0.6780%" height="15" fill="rgb(246,142,3)" fg:x="606" fg:w="16"/><text x="25.9280%" y="399.50"></text></g><g><title>_int_free (15 samples, 0.64%)</title><rect x="25.7203%" y="373" width="0.6356%" height="15" fill="rgb(241,25,7)" fg:x="607" fg:w="15"/><text x="25.9703%" y="383.50"></text></g><g><title>_int_free (6 samples, 0.25%)</title><rect x="26.3983%" y="437" width="0.2542%" height="15" fill="rgb(242,119,39)" fg:x="623" fg:w="6"/><text x="26.6483%" y="447.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="26.3559%" y="453" width="0.3814%" height="15" fill="rgb(241,98,45)" fg:x="622" fg:w="9"/><text x="26.6059%" y="463.50"></text></g><g><title>arena_for_chunk (2 samples, 0.08%)</title><rect x="26.6525%" y="437" width="0.0847%" height="15" fill="rgb(254,28,30)" fg:x="629" fg:w="2"/><text x="26.9025%" y="447.50"></text></g><g><title>_int_free (19 samples, 0.81%)</title><rect x="26.9915%" y="421" width="0.8051%" height="15" fill="rgb(241,142,54)" fg:x="637" fg:w="19"/><text x="27.2415%" y="431.50"></text></g><g><title>__GI___libc_free (27 samples, 1.14%)</title><rect x="26.8644%" y="437" width="1.1441%" height="15" fill="rgb(222,85,15)" fg:x="634" fg:w="27"/><text x="27.1144%" y="447.50"></text></g><g><title>arena_for_chunk (5 samples, 0.21%)</title><rect x="27.7966%" y="421" width="0.2119%" height="15" fill="rgb(210,85,47)" fg:x="656" fg:w="5"/><text x="28.0466%" y="431.50"></text></g><g><title>_int_free (15 samples, 0.64%)</title><rect x="28.0932%" y="389" width="0.6356%" height="15" fill="rgb(224,206,25)" fg:x="663" fg:w="15"/><text x="28.3432%" y="399.50"></text></g><g><title>__GI___libc_free (18 samples, 0.76%)</title><rect x="28.0508%" y="405" width="0.7627%" height="15" fill="rgb(243,201,19)" fg:x="662" fg:w="18"/><text x="28.3008%" y="415.50"></text></g><g><title>arena_for_chunk (2 samples, 0.08%)</title><rect x="28.7288%" y="389" width="0.0847%" height="15" fill="rgb(236,59,4)" fg:x="678" fg:w="2"/><text x="28.9788%" y="399.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.51%)</title><rect x="28.8136%" y="405" width="0.5085%" height="15" fill="rgb(254,179,45)" fg:x="680" fg:w="12"/><text x="29.0636%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.51%)</title><rect x="28.8136%" y="389" width="0.5085%" height="15" fill="rgb(226,14,10)" fg:x="680" fg:w="12"/><text x="29.0636%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.51%)</title><rect x="28.8136%" y="373" width="0.5085%" height="15" fill="rgb(244,27,41)" fg:x="680" fg:w="12"/><text x="29.0636%" y="383.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.51%)</title><rect x="28.8136%" y="357" width="0.5085%" height="15" fill="rgb(235,35,32)" fg:x="680" fg:w="12"/><text x="29.0636%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.51%)</title><rect x="28.8136%" y="341" width="0.5085%" height="15" fill="rgb(218,68,31)" fg:x="680" fg:w="12"/><text x="29.0636%" y="351.50"></text></g><g><title>__GI___libc_free (12 samples, 0.51%)</title><rect x="28.8136%" y="325" width="0.5085%" height="15" fill="rgb(207,120,37)" fg:x="680" fg:w="12"/><text x="29.0636%" y="335.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="29.0254%" y="309" width="0.2966%" height="15" fill="rgb(227,98,0)" fg:x="685" fg:w="7"/><text x="29.2754%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rlox::parser::Expression&gt;&gt; (41 samples, 1.74%)</title><rect x="28.0508%" y="421" width="1.7373%" height="15" fill="rgb(207,7,3)" fg:x="662" fg:w="41"/><text x="28.3008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (11 samples, 0.47%)</title><rect x="29.3220%" y="405" width="0.4661%" height="15" fill="rgb(206,98,19)" fg:x="692" fg:w="11"/><text x="29.5720%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (2 samples, 0.08%)</title><rect x="29.7034%" y="389" width="0.0847%" height="15" fill="rgb(217,5,26)" fg:x="701" fg:w="2"/><text x="29.9534%" y="399.50"></text></g><g><title>_int_free (11 samples, 0.47%)</title><rect x="29.9153%" y="357" width="0.4661%" height="15" fill="rgb(235,190,38)" fg:x="706" fg:w="11"/><text x="30.1653%" y="367.50"></text></g><g><title>__GI___libc_free (15 samples, 0.64%)</title><rect x="29.7881%" y="373" width="0.6356%" height="15" fill="rgb(247,86,24)" fg:x="703" fg:w="15"/><text x="30.0381%" y="383.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="30.3814%" y="357" width="0.0424%" height="15" fill="rgb(205,101,16)" fg:x="717" fg:w="1"/><text x="30.6314%" y="367.50"></text></g><g><title>_int_free (31 samples, 1.31%)</title><rect x="30.9746%" y="341" width="1.3136%" height="15" fill="rgb(246,168,33)" fg:x="731" fg:w="31"/><text x="31.2246%" y="351.50"></text></g><g><title>__GI___libc_free (36 samples, 1.53%)</title><rect x="30.8051%" y="357" width="1.5254%" height="15" fill="rgb(231,114,1)" fg:x="727" fg:w="36"/><text x="31.0551%" y="367.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="32.2881%" y="341" width="0.0424%" height="15" fill="rgb(207,184,53)" fg:x="762" fg:w="1"/><text x="32.5381%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (141 samples, 5.97%)</title><rect x="26.7373%" y="453" width="5.9746%" height="15" fill="rgb(224,95,51)" fg:x="631" fg:w="141"/><text x="26.9873%" y="463.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (111 samples, 4.70%)</title><rect x="28.0085%" y="437" width="4.7034%" height="15" fill="rgb(212,188,45)" fg:x="661" fg:w="111"/><text x="28.2585%" y="447.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Expression&gt;&gt; (69 samples, 2.92%)</title><rect x="29.7881%" y="421" width="2.9237%" height="15" fill="rgb(223,154,38)" fg:x="703" fg:w="69"/><text x="30.0381%" y="431.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 2.92%)</title><rect x="29.7881%" y="405" width="2.9237%" height="15" fill="rgb(251,22,52)" fg:x="703" fg:w="69"/><text x="30.0381%" y="415.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Expression]&gt; (69 samples, 2.92%)</title><rect x="29.7881%" y="389" width="2.9237%" height="15" fill="rgb(229,209,22)" fg:x="703" fg:w="69"/><text x="30.0381%" y="399.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (54 samples, 2.29%)</title><rect x="30.4237%" y="373" width="2.2881%" height="15" fill="rgb(234,138,34)" fg:x="718" fg:w="54"/><text x="30.6737%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (9 samples, 0.38%)</title><rect x="32.3305%" y="357" width="0.3814%" height="15" fill="rgb(212,95,11)" fg:x="763" fg:w="9"/><text x="32.5805%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (5 samples, 0.21%)</title><rect x="32.5000%" y="341" width="0.2119%" height="15" fill="rgb(240,179,47)" fg:x="767" fg:w="5"/><text x="32.7500%" y="351.50"></text></g><g><title>__GI___libc_free (5 samples, 0.21%)</title><rect x="32.7542%" y="437" width="0.2119%" height="15" fill="rgb(240,163,11)" fg:x="773" fg:w="5"/><text x="33.0042%" y="447.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="32.7966%" y="421" width="0.1695%" height="15" fill="rgb(236,37,12)" fg:x="774" fg:w="4"/><text x="33.0466%" y="431.50"></text></g><g><title>__GI___libc_free (7 samples, 0.30%)</title><rect x="32.9661%" y="421" width="0.2966%" height="15" fill="rgb(232,164,16)" fg:x="778" fg:w="7"/><text x="33.2161%" y="431.50"></text></g><g><title>_int_free (5 samples, 0.21%)</title><rect x="33.0508%" y="405" width="0.2119%" height="15" fill="rgb(244,205,15)" fg:x="780" fg:w="5"/><text x="33.3008%" y="415.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="33.2203%" y="389" width="0.0424%" height="15" fill="rgb(223,117,47)" fg:x="784" fg:w="1"/><text x="33.4703%" y="399.50"></text></g><g><title>_int_free (5 samples, 0.21%)</title><rect x="33.3051%" y="325" width="0.2119%" height="15" fill="rgb(244,107,35)" fg:x="786" fg:w="5"/><text x="33.5551%" y="335.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="33.4746%" y="309" width="0.0424%" height="15" fill="rgb(205,140,8)" fg:x="790" fg:w="1"/><text x="33.7246%" y="319.50"></text></g><g><title>alloc::alloc::box_free (7 samples, 0.30%)</title><rect x="33.2627%" y="421" width="0.2966%" height="15" fill="rgb(228,84,46)" fg:x="785" fg:w="7"/><text x="33.5127%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.30%)</title><rect x="33.2627%" y="405" width="0.2966%" height="15" fill="rgb(254,188,9)" fg:x="785" fg:w="7"/><text x="33.5127%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.30%)</title><rect x="33.2627%" y="389" width="0.2966%" height="15" fill="rgb(206,112,54)" fg:x="785" fg:w="7"/><text x="33.5127%" y="399.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.30%)</title><rect x="33.2627%" y="373" width="0.2966%" height="15" fill="rgb(216,84,49)" fg:x="785" fg:w="7"/><text x="33.5127%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.30%)</title><rect x="33.2627%" y="357" width="0.2966%" height="15" fill="rgb(214,194,35)" fg:x="785" fg:w="7"/><text x="33.5127%" y="367.50"></text></g><g><title>__GI___libc_free (7 samples, 0.30%)</title><rect x="33.2627%" y="341" width="0.2966%" height="15" fill="rgb(249,28,3)" fg:x="785" fg:w="7"/><text x="33.5127%" y="351.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="33.5169%" y="325" width="0.0424%" height="15" fill="rgb(222,56,52)" fg:x="791" fg:w="1"/><text x="33.7669%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (1 samples, 0.04%)</title><rect x="33.6864%" y="357" width="0.0424%" height="15" fill="rgb(245,217,50)" fg:x="795" fg:w="1"/><text x="33.9364%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rlox::parser::Stmt&gt;&gt; (19 samples, 0.81%)</title><rect x="32.9661%" y="437" width="0.8051%" height="15" fill="rgb(213,201,24)" fg:x="778" fg:w="19"/><text x="33.2161%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (5 samples, 0.21%)</title><rect x="33.5593%" y="421" width="0.2119%" height="15" fill="rgb(248,116,28)" fg:x="792" fg:w="5"/><text x="33.8093%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Stmt&gt;&gt; (3 samples, 0.13%)</title><rect x="33.6441%" y="405" width="0.1271%" height="15" fill="rgb(219,72,43)" fg:x="794" fg:w="3"/><text x="33.8941%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="33.6441%" y="389" width="0.1271%" height="15" fill="rgb(209,138,14)" fg:x="794" fg:w="3"/><text x="33.8941%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (3 samples, 0.13%)</title><rect x="33.6441%" y="373" width="0.1271%" height="15" fill="rgb(222,18,33)" fg:x="794" fg:w="3"/><text x="33.8941%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (1 samples, 0.04%)</title><rect x="33.7288%" y="357" width="0.0424%" height="15" fill="rgb(213,199,7)" fg:x="796" fg:w="1"/><text x="33.9788%" y="367.50"></text></g><g><title>_int_free (8 samples, 0.34%)</title><rect x="34.1102%" y="405" width="0.3390%" height="15" fill="rgb(250,110,10)" fg:x="805" fg:w="8"/><text x="34.3602%" y="415.50"></text></g><g><title>__GI___libc_free (15 samples, 0.64%)</title><rect x="33.9407%" y="421" width="0.6356%" height="15" fill="rgb(248,123,6)" fg:x="801" fg:w="15"/><text x="34.1907%" y="431.50"></text></g><g><title>arena_for_chunk (3 samples, 0.13%)</title><rect x="34.4492%" y="405" width="0.1271%" height="15" fill="rgb(206,91,31)" fg:x="813" fg:w="3"/><text x="34.6992%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (199 samples, 8.43%)</title><rect x="26.3559%" y="485" width="8.4322%" height="15" fill="rgb(211,154,13)" fg:x="622" fg:w="199"/><text x="26.6059%" y="495.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (199 samples, 8.43%)</title><rect x="26.3559%" y="469" width="8.4322%" height="15" fill="rgb(225,148,7)" fg:x="622" fg:w="199"/><text x="26.6059%" y="479.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (49 samples, 2.08%)</title><rect x="32.7119%" y="453" width="2.0763%" height="15" fill="rgb(220,160,43)" fg:x="772" fg:w="49"/><text x="32.9619%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (24 samples, 1.02%)</title><rect x="33.7712%" y="437" width="1.0169%" height="15" fill="rgb(213,52,39)" fg:x="797" fg:w="24"/><text x="34.0212%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (5 samples, 0.21%)</title><rect x="34.5763%" y="421" width="0.2119%" height="15" fill="rgb(243,137,7)" fg:x="816" fg:w="5"/><text x="34.8263%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (2 samples, 0.08%)</title><rect x="34.7034%" y="405" width="0.0847%" height="15" fill="rgb(230,79,13)" fg:x="819" fg:w="2"/><text x="34.9534%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxCallable&gt; (238 samples, 10.08%)</title><rect x="24.7881%" y="533" width="10.0847%" height="15" fill="rgb(247,105,23)" fg:x="585" fg:w="238"/><text x="25.0381%" y="543.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::interpreter::LoxFunction&gt; (238 samples, 10.08%)</title><rect x="24.7881%" y="517" width="10.0847%" height="15" fill="rgb(223,179,41)" fg:x="585" fg:w="238"/><text x="25.0381%" y="527.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Stmt&gt;&gt; (201 samples, 8.52%)</title><rect x="26.3559%" y="501" width="8.5169%" height="15" fill="rgb(218,9,34)" fg:x="622" fg:w="201"/><text x="26.6059%" y="511.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Stmt&gt;&gt; (2 samples, 0.08%)</title><rect x="34.7881%" y="485" width="0.0847%" height="15" fill="rgb(222,106,8)" fg:x="821" fg:w="2"/><text x="35.0381%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="34.7881%" y="469" width="0.0847%" height="15" fill="rgb(211,220,0)" fg:x="821" fg:w="2"/><text x="35.0381%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="34.7881%" y="453" width="0.0847%" height="15" fill="rgb(229,52,16)" fg:x="821" fg:w="2"/><text x="35.0381%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="34.7881%" y="437" width="0.0847%" height="15" fill="rgb(212,155,18)" fg:x="821" fg:w="2"/><text x="35.0381%" y="447.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.08%)</title><rect x="34.7881%" y="421" width="0.0847%" height="15" fill="rgb(242,21,14)" fg:x="821" fg:w="2"/><text x="35.0381%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.08%)</title><rect x="34.7881%" y="405" width="0.0847%" height="15" fill="rgb(222,19,48)" fg:x="821" fg:w="2"/><text x="35.0381%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="34.9576%" y="405" width="0.0424%" height="15" fill="rgb(232,45,27)" fg:x="825" fg:w="1"/><text x="35.2076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="34.9576%" y="389" width="0.0424%" height="15" fill="rgb(249,103,42)" fg:x="825" fg:w="1"/><text x="35.2076%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="34.9576%" y="373" width="0.0424%" height="15" fill="rgb(246,81,33)" fg:x="825" fg:w="1"/><text x="35.2076%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="34.9576%" y="357" width="0.0424%" height="15" fill="rgb(252,33,42)" fg:x="825" fg:w="1"/><text x="35.2076%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="34.9576%" y="341" width="0.0424%" height="15" fill="rgb(209,212,41)" fg:x="825" fg:w="1"/><text x="35.2076%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="34.9576%" y="325" width="0.0424%" height="15" fill="rgb(207,154,6)" fg:x="825" fg:w="1"/><text x="35.2076%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="34.9576%" y="309" width="0.0424%" height="15" fill="rgb(223,64,47)" fg:x="825" fg:w="1"/><text x="35.2076%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="34.9576%" y="293" width="0.0424%" height="15" fill="rgb(211,161,38)" fg:x="825" fg:w="1"/><text x="35.2076%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="34.9576%" y="277" width="0.0424%" height="15" fill="rgb(219,138,40)" fg:x="825" fg:w="1"/><text x="35.2076%" y="287.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (4 samples, 0.17%)</title><rect x="34.9576%" y="517" width="0.1695%" height="15" fill="rgb(241,228,46)" fg:x="825" fg:w="4"/><text x="35.2076%" y="527.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (4 samples, 0.17%)</title><rect x="34.9576%" y="501" width="0.1695%" height="15" fill="rgb(223,209,38)" fg:x="825" fg:w="4"/><text x="35.2076%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="34.9576%" y="485" width="0.1695%" height="15" fill="rgb(236,164,45)" fg:x="825" fg:w="4"/><text x="35.2076%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="34.9576%" y="469" width="0.1695%" height="15" fill="rgb(231,15,5)" fg:x="825" fg:w="4"/><text x="35.2076%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="34.9576%" y="453" width="0.1695%" height="15" fill="rgb(252,35,15)" fg:x="825" fg:w="4"/><text x="35.2076%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="34.9576%" y="437" width="0.1695%" height="15" fill="rgb(248,181,18)" fg:x="825" fg:w="4"/><text x="35.2076%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="34.9576%" y="421" width="0.1695%" height="15" fill="rgb(233,39,42)" fg:x="825" fg:w="4"/><text x="35.2076%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.13%)</title><rect x="35.0000%" y="405" width="0.1271%" height="15" fill="rgb(238,110,33)" fg:x="826" fg:w="3"/><text x="35.2500%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.13%)</title><rect x="35.0000%" y="389" width="0.1271%" height="15" fill="rgb(233,195,10)" fg:x="826" fg:w="3"/><text x="35.2500%" y="399.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="35.0847%" y="373" width="0.0424%" height="15" fill="rgb(254,105,3)" fg:x="828" fg:w="1"/><text x="35.3347%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.30%)</title><rect x="35.1271%" y="517" width="0.2966%" height="15" fill="rgb(221,225,9)" fg:x="829" fg:w="7"/><text x="35.3771%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.30%)</title><rect x="35.1271%" y="501" width="0.2966%" height="15" fill="rgb(224,227,45)" fg:x="829" fg:w="7"/><text x="35.3771%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.30%)</title><rect x="35.1271%" y="485" width="0.2966%" height="15" fill="rgb(229,198,43)" fg:x="829" fg:w="7"/><text x="35.3771%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="35.6780%" y="453" width="0.1695%" height="15" fill="rgb(206,209,35)" fg:x="842" fg:w="4"/><text x="35.9280%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.8051%" y="437" width="0.0424%" height="15" fill="rgb(245,195,53)" fg:x="845" fg:w="1"/><text x="36.0551%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="35.8051%" y="421" width="0.0424%" height="15" fill="rgb(240,92,26)" fg:x="845" fg:w="1"/><text x="36.0551%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="36.8220%" y="293" width="0.0424%" height="15" fill="rgb(207,40,23)" fg:x="869" fg:w="1"/><text x="37.0720%" y="303.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="36.8644%" y="293" width="0.1271%" height="15" fill="rgb(223,111,35)" fg:x="870" fg:w="3"/><text x="37.1144%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.30%)</title><rect x="36.7373%" y="437" width="0.2966%" height="15" fill="rgb(229,147,28)" fg:x="867" fg:w="7"/><text x="36.9873%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.30%)</title><rect x="36.7373%" y="421" width="0.2966%" height="15" fill="rgb(211,29,28)" fg:x="867" fg:w="7"/><text x="36.9873%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.30%)</title><rect x="36.7373%" y="405" width="0.2966%" height="15" fill="rgb(228,72,33)" fg:x="867" fg:w="7"/><text x="36.9873%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.30%)</title><rect x="36.7373%" y="389" width="0.2966%" height="15" fill="rgb(205,214,31)" fg:x="867" fg:w="7"/><text x="36.9873%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.30%)</title><rect x="36.7373%" y="373" width="0.2966%" height="15" fill="rgb(224,111,15)" fg:x="867" fg:w="7"/><text x="36.9873%" y="383.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.30%)</title><rect x="36.7373%" y="357" width="0.2966%" height="15" fill="rgb(253,21,26)" fg:x="867" fg:w="7"/><text x="36.9873%" y="367.50"></text></g><g><title>__rdl_alloc (7 samples, 0.30%)</title><rect x="36.7373%" y="341" width="0.2966%" height="15" fill="rgb(245,139,43)" fg:x="867" fg:w="7"/><text x="36.9873%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.30%)</title><rect x="36.7373%" y="325" width="0.2966%" height="15" fill="rgb(252,170,7)" fg:x="867" fg:w="7"/><text x="36.9873%" y="335.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.30%)</title><rect x="36.7373%" y="309" width="0.2966%" height="15" fill="rgb(231,118,14)" fg:x="867" fg:w="7"/><text x="36.9873%" y="319.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="36.9915%" y="293" width="0.0424%" height="15" fill="rgb(238,83,0)" fg:x="873" fg:w="1"/><text x="37.2415%" y="303.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1 samples, 0.04%)</title><rect x="37.6271%" y="389" width="0.0424%" height="15" fill="rgb(221,39,39)" fg:x="888" fg:w="1"/><text x="37.8771%" y="399.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="37.8390%" y="261" width="0.1271%" height="15" fill="rgb(222,119,46)" fg:x="893" fg:w="3"/><text x="38.0890%" y="271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 1.02%)</title><rect x="37.0339%" y="437" width="1.0169%" height="15" fill="rgb(222,165,49)" fg:x="874" fg:w="24"/><text x="37.2839%" y="447.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (13 samples, 0.55%)</title><rect x="37.5000%" y="421" width="0.5508%" height="15" fill="rgb(219,113,52)" fg:x="885" fg:w="13"/><text x="37.7500%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.42%)</title><rect x="37.6271%" y="405" width="0.4237%" height="15" fill="rgb(214,7,15)" fg:x="888" fg:w="10"/><text x="37.8771%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.38%)</title><rect x="37.6695%" y="389" width="0.3814%" height="15" fill="rgb(235,32,4)" fg:x="889" fg:w="9"/><text x="37.9195%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.38%)</title><rect x="37.6695%" y="373" width="0.3814%" height="15" fill="rgb(238,90,54)" fg:x="889" fg:w="9"/><text x="37.9195%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.38%)</title><rect x="37.6695%" y="357" width="0.3814%" height="15" fill="rgb(213,208,19)" fg:x="889" fg:w="9"/><text x="37.9195%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.38%)</title><rect x="37.6695%" y="341" width="0.3814%" height="15" fill="rgb(233,156,4)" fg:x="889" fg:w="9"/><text x="37.9195%" y="351.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.38%)</title><rect x="37.6695%" y="325" width="0.3814%" height="15" fill="rgb(207,194,5)" fg:x="889" fg:w="9"/><text x="37.9195%" y="335.50"></text></g><g><title>__rdl_alloc (9 samples, 0.38%)</title><rect x="37.6695%" y="309" width="0.3814%" height="15" fill="rgb(206,111,30)" fg:x="889" fg:w="9"/><text x="37.9195%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.38%)</title><rect x="37.6695%" y="293" width="0.3814%" height="15" fill="rgb(243,70,54)" fg:x="889" fg:w="9"/><text x="37.9195%" y="303.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.38%)</title><rect x="37.6695%" y="277" width="0.3814%" height="15" fill="rgb(242,28,8)" fg:x="889" fg:w="9"/><text x="37.9195%" y="287.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="37.9661%" y="261" width="0.0847%" height="15" fill="rgb(219,106,18)" fg:x="896" fg:w="2"/><text x="38.2161%" y="271.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="38.4322%" y="277" width="0.0424%" height="15" fill="rgb(244,222,10)" fg:x="907" fg:w="1"/><text x="38.6822%" y="287.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (64 samples, 2.71%)</title><rect x="35.8475%" y="453" width="2.7119%" height="15" fill="rgb(236,179,52)" fg:x="846" fg:w="64"/><text x="36.0975%" y="463.50">&lt;r..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (12 samples, 0.51%)</title><rect x="38.0508%" y="437" width="0.5085%" height="15" fill="rgb(213,23,39)" fg:x="898" fg:w="12"/><text x="38.3008%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.38%)</title><rect x="38.1780%" y="421" width="0.3814%" height="15" fill="rgb(238,48,10)" fg:x="901" fg:w="9"/><text x="38.4280%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.38%)</title><rect x="38.1780%" y="405" width="0.3814%" height="15" fill="rgb(251,196,23)" fg:x="901" fg:w="9"/><text x="38.4280%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.38%)</title><rect x="38.1780%" y="389" width="0.3814%" height="15" fill="rgb(250,152,24)" fg:x="901" fg:w="9"/><text x="38.4280%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.38%)</title><rect x="38.1780%" y="373" width="0.3814%" height="15" fill="rgb(209,150,17)" fg:x="901" fg:w="9"/><text x="38.4280%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.38%)</title><rect x="38.1780%" y="357" width="0.3814%" height="15" fill="rgb(234,202,34)" fg:x="901" fg:w="9"/><text x="38.4280%" y="367.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.38%)</title><rect x="38.1780%" y="341" width="0.3814%" height="15" fill="rgb(253,148,53)" fg:x="901" fg:w="9"/><text x="38.4280%" y="351.50"></text></g><g><title>__rdl_alloc (9 samples, 0.38%)</title><rect x="38.1780%" y="325" width="0.3814%" height="15" fill="rgb(218,129,16)" fg:x="901" fg:w="9"/><text x="38.4280%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.38%)</title><rect x="38.1780%" y="309" width="0.3814%" height="15" fill="rgb(216,85,19)" fg:x="901" fg:w="9"/><text x="38.4280%" y="319.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.38%)</title><rect x="38.1780%" y="293" width="0.3814%" height="15" fill="rgb(235,228,7)" fg:x="901" fg:w="9"/><text x="38.4280%" y="303.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="38.4746%" y="277" width="0.0847%" height="15" fill="rgb(245,175,0)" fg:x="908" fg:w="2"/><text x="38.7246%" y="287.50"></text></g><g><title>_int_malloc (9 samples, 0.38%)</title><rect x="38.9407%" y="309" width="0.3814%" height="15" fill="rgb(208,168,36)" fg:x="919" fg:w="9"/><text x="39.1907%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.76%)</title><rect x="38.6441%" y="405" width="0.7627%" height="15" fill="rgb(246,171,24)" fg:x="912" fg:w="18"/><text x="38.8941%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.76%)</title><rect x="38.6441%" y="389" width="0.7627%" height="15" fill="rgb(215,142,24)" fg:x="912" fg:w="18"/><text x="38.8941%" y="399.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.76%)</title><rect x="38.6441%" y="373" width="0.7627%" height="15" fill="rgb(250,187,7)" fg:x="912" fg:w="18"/><text x="38.8941%" y="383.50"></text></g><g><title>__rdl_alloc (18 samples, 0.76%)</title><rect x="38.6441%" y="357" width="0.7627%" height="15" fill="rgb(228,66,33)" fg:x="912" fg:w="18"/><text x="38.8941%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (18 samples, 0.76%)</title><rect x="38.6441%" y="341" width="0.7627%" height="15" fill="rgb(234,215,21)" fg:x="912" fg:w="18"/><text x="38.8941%" y="351.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.72%)</title><rect x="38.6864%" y="325" width="0.7203%" height="15" fill="rgb(222,191,20)" fg:x="913" fg:w="17"/><text x="38.9364%" y="335.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="39.3220%" y="309" width="0.0847%" height="15" fill="rgb(245,79,54)" fg:x="928" fg:w="2"/><text x="39.5720%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.93%)</title><rect x="38.5593%" y="453" width="0.9322%" height="15" fill="rgb(240,10,37)" fg:x="910" fg:w="22"/><text x="38.8093%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.93%)</title><rect x="38.5593%" y="437" width="0.9322%" height="15" fill="rgb(214,192,32)" fg:x="910" fg:w="22"/><text x="38.8093%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.93%)</title><rect x="38.5593%" y="421" width="0.9322%" height="15" fill="rgb(209,36,54)" fg:x="910" fg:w="22"/><text x="38.8093%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.08%)</title><rect x="39.4068%" y="405" width="0.0847%" height="15" fill="rgb(220,10,11)" fg:x="930" fg:w="2"/><text x="39.6568%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.08%)</title><rect x="39.4068%" y="389" width="0.0847%" height="15" fill="rgb(221,106,17)" fg:x="930" fg:w="2"/><text x="39.6568%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 4.66%)</title><rect x="35.4237%" y="517" width="4.6610%" height="15" fill="rgb(251,142,44)" fg:x="836" fg:w="110"/><text x="35.6737%" y="527.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (110 samples, 4.66%)</title><rect x="35.4237%" y="501" width="4.6610%" height="15" fill="rgb(238,13,15)" fg:x="836" fg:w="110"/><text x="35.6737%" y="511.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (110 samples, 4.66%)</title><rect x="35.4237%" y="485" width="4.6610%" height="15" fill="rgb(208,107,27)" fg:x="836" fg:w="110"/><text x="35.6737%" y="495.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (110 samples, 4.66%)</title><rect x="35.4237%" y="469" width="4.6610%" height="15" fill="rgb(205,136,37)" fg:x="836" fg:w="110"/><text x="35.6737%" y="479.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.59%)</title><rect x="39.4915%" y="453" width="0.5932%" height="15" fill="rgb(250,205,27)" fg:x="932" fg:w="14"/><text x="39.7415%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.30%)</title><rect x="40.0847%" y="517" width="0.2966%" height="15" fill="rgb(210,80,43)" fg:x="946" fg:w="7"/><text x="40.3347%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.30%)</title><rect x="40.0847%" y="501" width="0.2966%" height="15" fill="rgb(247,160,36)" fg:x="946" fg:w="7"/><text x="40.3347%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.17%)</title><rect x="40.2119%" y="485" width="0.1695%" height="15" fill="rgb(234,13,49)" fg:x="949" fg:w="4"/><text x="40.4619%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.17%)</title><rect x="40.2119%" y="469" width="0.1695%" height="15" fill="rgb(234,122,0)" fg:x="949" fg:w="4"/><text x="40.4619%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.17%)</title><rect x="40.2119%" y="453" width="0.1695%" height="15" fill="rgb(207,146,38)" fg:x="949" fg:w="4"/><text x="40.4619%" y="463.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.17%)</title><rect x="40.2119%" y="437" width="0.1695%" height="15" fill="rgb(207,177,25)" fg:x="949" fg:w="4"/><text x="40.4619%" y="447.50"></text></g><g><title>__rdl_alloc (4 samples, 0.17%)</title><rect x="40.2119%" y="421" width="0.1695%" height="15" fill="rgb(211,178,42)" fg:x="949" fg:w="4"/><text x="40.4619%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.17%)</title><rect x="40.2119%" y="405" width="0.1695%" height="15" fill="rgb(230,69,54)" fg:x="949" fg:w="4"/><text x="40.4619%" y="415.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="40.2119%" y="389" width="0.1695%" height="15" fill="rgb(214,135,41)" fg:x="949" fg:w="4"/><text x="40.4619%" y="399.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="40.2542%" y="373" width="0.1271%" height="15" fill="rgb(237,67,25)" fg:x="950" fg:w="3"/><text x="40.5042%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="40.3814%" y="501" width="0.0424%" height="15" fill="rgb(222,189,50)" fg:x="953" fg:w="1"/><text x="40.6314%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::interpreter::LoxValue]&gt; (1 samples, 0.04%)</title><rect x="40.3814%" y="485" width="0.0424%" height="15" fill="rgb(245,148,34)" fg:x="953" fg:w="1"/><text x="40.6314%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::interpreter::LoxValue&gt;&gt; (10 samples, 0.42%)</title><rect x="40.3814%" y="517" width="0.4237%" height="15" fill="rgb(222,29,6)" fg:x="953" fg:w="10"/><text x="40.6314%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::interpreter::LoxValue&gt;&gt; (9 samples, 0.38%)</title><rect x="40.4237%" y="501" width="0.3814%" height="15" fill="rgb(221,189,43)" fg:x="954" fg:w="9"/><text x="40.6737%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="40.4237%" y="485" width="0.3814%" height="15" fill="rgb(207,36,27)" fg:x="954" fg:w="9"/><text x="40.6737%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.38%)</title><rect x="40.4237%" y="469" width="0.3814%" height="15" fill="rgb(217,90,24)" fg:x="954" fg:w="9"/><text x="40.6737%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.38%)</title><rect x="40.4237%" y="453" width="0.3814%" height="15" fill="rgb(224,66,35)" fg:x="954" fg:w="9"/><text x="40.6737%" y="463.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.38%)</title><rect x="40.4237%" y="437" width="0.3814%" height="15" fill="rgb(221,13,50)" fg:x="954" fg:w="9"/><text x="40.6737%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.38%)</title><rect x="40.4237%" y="421" width="0.3814%" height="15" fill="rgb(236,68,49)" fg:x="954" fg:w="9"/><text x="40.6737%" y="431.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="40.4237%" y="405" width="0.3814%" height="15" fill="rgb(229,146,28)" fg:x="954" fg:w="9"/><text x="40.6737%" y="415.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="40.5085%" y="389" width="0.2966%" height="15" fill="rgb(225,31,38)" fg:x="956" fg:w="7"/><text x="40.7585%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.08%)</title><rect x="40.9322%" y="389" width="0.0847%" height="15" fill="rgb(250,208,3)" fg:x="966" fg:w="2"/><text x="41.1822%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="40.9746%" y="373" width="0.0424%" height="15" fill="rgb(246,54,23)" fg:x="967" fg:w="1"/><text x="41.2246%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.08%)</title><rect x="41.0169%" y="373" width="0.0847%" height="15" fill="rgb(243,76,11)" fg:x="968" fg:w="2"/><text x="41.2669%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.34%)</title><rect x="40.8475%" y="437" width="0.3390%" height="15" fill="rgb(245,21,50)" fg:x="964" fg:w="8"/><text x="41.0975%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.34%)</title><rect x="40.8475%" y="421" width="0.3390%" height="15" fill="rgb(228,9,43)" fg:x="964" fg:w="8"/><text x="41.0975%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.34%)</title><rect x="40.8475%" y="405" width="0.3390%" height="15" fill="rgb(208,100,47)" fg:x="964" fg:w="8"/><text x="41.0975%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.17%)</title><rect x="41.0169%" y="389" width="0.1695%" height="15" fill="rgb(232,26,8)" fg:x="968" fg:w="4"/><text x="41.2669%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.08%)</title><rect x="41.1017%" y="373" width="0.0847%" height="15" fill="rgb(216,166,38)" fg:x="970" fg:w="2"/><text x="41.3517%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.13%)</title><rect x="41.1864%" y="437" width="0.1271%" height="15" fill="rgb(251,202,51)" fg:x="972" fg:w="3"/><text x="41.4364%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="41.2712%" y="421" width="0.0424%" height="15" fill="rgb(254,216,34)" fg:x="974" fg:w="1"/><text x="41.5212%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="41.2712%" y="405" width="0.0424%" height="15" fill="rgb(251,32,27)" fg:x="974" fg:w="1"/><text x="41.5212%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="41.2712%" y="389" width="0.0424%" height="15" fill="rgb(208,127,28)" fg:x="974" fg:w="1"/><text x="41.5212%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="41.3136%" y="341" width="0.0847%" height="15" fill="rgb(224,137,22)" fg:x="975" fg:w="2"/><text x="41.5636%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="41.3559%" y="325" width="0.0424%" height="15" fill="rgb(254,70,32)" fg:x="976" fg:w="1"/><text x="41.6059%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.64%)</title><rect x="40.8475%" y="469" width="0.6356%" height="15" fill="rgb(229,75,37)" fg:x="964" fg:w="15"/><text x="41.0975%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.64%)</title><rect x="40.8475%" y="453" width="0.6356%" height="15" fill="rgb(252,64,23)" fg:x="964" fg:w="15"/><text x="41.0975%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.17%)</title><rect x="41.3136%" y="437" width="0.1695%" height="15" fill="rgb(232,162,48)" fg:x="975" fg:w="4"/><text x="41.5636%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.17%)</title><rect x="41.3136%" y="421" width="0.1695%" height="15" fill="rgb(246,160,12)" fg:x="975" fg:w="4"/><text x="41.5636%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.17%)</title><rect x="41.3136%" y="405" width="0.1695%" height="15" fill="rgb(247,166,0)" fg:x="975" fg:w="4"/><text x="41.5636%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.17%)</title><rect x="41.3136%" y="389" width="0.1695%" height="15" fill="rgb(249,219,21)" fg:x="975" fg:w="4"/><text x="41.5636%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.17%)</title><rect x="41.3136%" y="373" width="0.1695%" height="15" fill="rgb(205,209,3)" fg:x="975" fg:w="4"/><text x="41.5636%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.17%)</title><rect x="41.3136%" y="357" width="0.1695%" height="15" fill="rgb(243,44,1)" fg:x="975" fg:w="4"/><text x="41.5636%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.08%)</title><rect x="41.3983%" y="341" width="0.0847%" height="15" fill="rgb(206,159,16)" fg:x="977" fg:w="2"/><text x="41.6483%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="41.4407%" y="325" width="0.0424%" height="15" fill="rgb(244,77,30)" fg:x="978" fg:w="1"/><text x="41.6907%" y="335.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="41.4831%" y="421" width="0.0424%" height="15" fill="rgb(218,69,12)" fg:x="979" fg:w="1"/><text x="41.7331%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="41.5254%" y="421" width="0.0424%" height="15" fill="rgb(212,87,7)" fg:x="980" fg:w="1"/><text x="41.7754%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="41.5254%" y="405" width="0.0424%" height="15" fill="rgb(245,114,25)" fg:x="980" fg:w="1"/><text x="41.7754%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="41.5254%" y="389" width="0.0424%" height="15" fill="rgb(210,61,42)" fg:x="980" fg:w="1"/><text x="41.7754%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.13%)</title><rect x="41.4831%" y="469" width="0.1271%" height="15" fill="rgb(211,52,33)" fg:x="979" fg:w="3"/><text x="41.7331%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.13%)</title><rect x="41.4831%" y="453" width="0.1271%" height="15" fill="rgb(234,58,33)" fg:x="979" fg:w="3"/><text x="41.7331%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.13%)</title><rect x="41.4831%" y="437" width="0.1271%" height="15" fill="rgb(220,115,36)" fg:x="979" fg:w="3"/><text x="41.7331%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.04%)</title><rect x="41.5678%" y="421" width="0.0424%" height="15" fill="rgb(243,153,54)" fg:x="981" fg:w="1"/><text x="41.8178%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="41.5678%" y="405" width="0.0424%" height="15" fill="rgb(251,47,18)" fg:x="981" fg:w="1"/><text x="41.8178%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="41.5678%" y="389" width="0.0424%" height="15" fill="rgb(242,102,42)" fg:x="981" fg:w="1"/><text x="41.8178%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.08%)</title><rect x="41.6102%" y="453" width="0.0847%" height="15" fill="rgb(234,31,38)" fg:x="982" fg:w="2"/><text x="41.8602%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.08%)</title><rect x="41.6102%" y="437" width="0.0847%" height="15" fill="rgb(221,117,51)" fg:x="982" fg:w="2"/><text x="41.8602%" y="447.50"></text></g><g><title>core::ptr::write (2 samples, 0.08%)</title><rect x="41.6102%" y="421" width="0.0847%" height="15" fill="rgb(212,20,18)" fg:x="982" fg:w="2"/><text x="41.8602%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.08%)</title><rect x="41.6949%" y="405" width="0.0847%" height="15" fill="rgb(245,133,36)" fg:x="984" fg:w="2"/><text x="41.9449%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.08%)</title><rect x="41.6949%" y="389" width="0.0847%" height="15" fill="rgb(212,6,19)" fg:x="984" fg:w="2"/><text x="41.9449%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.13%)</title><rect x="42.0339%" y="389" width="0.1271%" height="15" fill="rgb(218,1,36)" fg:x="992" fg:w="3"/><text x="42.2839%" y="399.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="42.0339%" y="373" width="0.1271%" height="15" fill="rgb(246,84,54)" fg:x="992" fg:w="3"/><text x="42.2839%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.13%)</title><rect x="42.0339%" y="357" width="0.1271%" height="15" fill="rgb(242,110,6)" fg:x="992" fg:w="3"/><text x="42.2839%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (3 samples, 0.13%)</title><rect x="42.0339%" y="341" width="0.1271%" height="15" fill="rgb(214,47,5)" fg:x="992" fg:w="3"/><text x="42.2839%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.13%)</title><rect x="42.2034%" y="357" width="0.1271%" height="15" fill="rgb(218,159,25)" fg:x="996" fg:w="3"/><text x="42.4534%" y="367.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="42.2034%" y="341" width="0.1271%" height="15" fill="rgb(215,211,28)" fg:x="996" fg:w="3"/><text x="42.4534%" y="351.50"></text></g><g><title>__memset_evex_unaligned_erms (3 samples, 0.13%)</title><rect x="42.2034%" y="325" width="0.1271%" height="15" fill="rgb(238,59,32)" fg:x="996" fg:w="3"/><text x="42.4534%" y="335.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (5 samples, 0.21%)</title><rect x="42.3305%" y="341" width="0.2119%" height="15" fill="rgb(226,82,3)" fg:x="999" fg:w="5"/><text x="42.5805%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="42.5000%" y="325" width="0.0424%" height="15" fill="rgb(240,164,32)" fg:x="1003" fg:w="1"/><text x="42.7500%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="42.5000%" y="309" width="0.0424%" height="15" fill="rgb(232,46,7)" fg:x="1003" fg:w="1"/><text x="42.7500%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.51%)</title><rect x="42.3305%" y="357" width="0.5085%" height="15" fill="rgb(229,129,53)" fg:x="999" fg:w="12"/><text x="42.5805%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.30%)</title><rect x="42.5424%" y="341" width="0.2966%" height="15" fill="rgb(234,188,29)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.30%)</title><rect x="42.5424%" y="325" width="0.2966%" height="15" fill="rgb(246,141,4)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.30%)</title><rect x="42.5424%" y="309" width="0.2966%" height="15" fill="rgb(229,23,39)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="319.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.30%)</title><rect x="42.5424%" y="293" width="0.2966%" height="15" fill="rgb(206,12,3)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="303.50"></text></g><g><title>__rdl_alloc (7 samples, 0.30%)</title><rect x="42.5424%" y="277" width="0.2966%" height="15" fill="rgb(252,226,20)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.30%)</title><rect x="42.5424%" y="261" width="0.2966%" height="15" fill="rgb(216,123,35)" fg:x="1004" fg:w="7"/><text x="42.7924%" y="271.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.25%)</title><rect x="42.5847%" y="245" width="0.2542%" height="15" fill="rgb(212,68,40)" fg:x="1005" fg:w="6"/><text x="42.8347%" y="255.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="42.7119%" y="229" width="0.1271%" height="15" fill="rgb(254,125,32)" fg:x="1008" fg:w="3"/><text x="42.9619%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (30 samples, 1.27%)</title><rect x="41.6949%" y="453" width="1.2712%" height="15" fill="rgb(253,97,22)" fg:x="984" fg:w="30"/><text x="41.9449%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 1.27%)</title><rect x="41.6949%" y="437" width="1.2712%" height="15" fill="rgb(241,101,14)" fg:x="984" fg:w="30"/><text x="41.9449%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (30 samples, 1.27%)</title><rect x="41.6949%" y="421" width="1.2712%" height="15" fill="rgb(238,103,29)" fg:x="984" fg:w="30"/><text x="41.9449%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (28 samples, 1.19%)</title><rect x="41.7797%" y="405" width="1.1864%" height="15" fill="rgb(233,195,47)" fg:x="986" fg:w="28"/><text x="42.0297%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (19 samples, 0.81%)</title><rect x="42.1610%" y="389" width="0.8051%" height="15" fill="rgb(246,218,30)" fg:x="995" fg:w="19"/><text x="42.4110%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (18 samples, 0.76%)</title><rect x="42.2034%" y="373" width="0.7627%" height="15" fill="rgb(219,145,47)" fg:x="996" fg:w="18"/><text x="42.4534%" y="383.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (3 samples, 0.13%)</title><rect x="42.8390%" y="357" width="0.1271%" height="15" fill="rgb(243,12,26)" fg:x="1011" fg:w="3"/><text x="43.0890%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (6 samples, 0.25%)</title><rect x="43.0508%" y="437" width="0.2542%" height="15" fill="rgb(214,87,16)" fg:x="1016" fg:w="6"/><text x="43.3008%" y="447.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.25%)</title><rect x="43.0508%" y="421" width="0.2542%" height="15" fill="rgb(208,99,42)" fg:x="1016" fg:w="6"/><text x="43.3008%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.13%)</title><rect x="43.3051%" y="437" width="0.1271%" height="15" fill="rgb(253,99,2)" fg:x="1022" fg:w="3"/><text x="43.5551%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.25%)</title><rect x="43.4322%" y="437" width="0.2542%" height="15" fill="rgb(220,168,23)" fg:x="1025" fg:w="6"/><text x="43.6822%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.25%)</title><rect x="43.4322%" y="421" width="0.2542%" height="15" fill="rgb(242,38,24)" fg:x="1025" fg:w="6"/><text x="43.6822%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.25%)</title><rect x="43.4322%" y="405" width="0.2542%" height="15" fill="rgb(225,182,9)" fg:x="1025" fg:w="6"/><text x="43.6822%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (18 samples, 0.76%)</title><rect x="42.9661%" y="453" width="0.7627%" height="15" fill="rgb(243,178,37)" fg:x="1014" fg:w="18"/><text x="43.2161%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.04%)</title><rect x="43.6864%" y="437" width="0.0424%" height="15" fill="rgb(232,139,19)" fg:x="1031" fg:w="1"/><text x="43.9364%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="43.6864%" y="421" width="0.0424%" height="15" fill="rgb(225,201,24)" fg:x="1031" fg:w="1"/><text x="43.9364%" y="431.50"></text></g><g><title>rlox::environ::Environ::define (70 samples, 2.97%)</title><rect x="40.8051%" y="517" width="2.9661%" height="15" fill="rgb(221,47,46)" fg:x="963" fg:w="70"/><text x="41.0551%" y="527.50">rlo..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (70 samples, 2.97%)</title><rect x="40.8051%" y="501" width="2.9661%" height="15" fill="rgb(249,23,13)" fg:x="963" fg:w="70"/><text x="41.0551%" y="511.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (70 samples, 2.97%)</title><rect x="40.8051%" y="485" width="2.9661%" height="15" fill="rgb(219,9,5)" fg:x="963" fg:w="70"/><text x="41.0551%" y="495.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (51 samples, 2.16%)</title><rect x="41.6102%" y="469" width="2.1610%" height="15" fill="rgb(254,171,16)" fg:x="982" fg:w="51"/><text x="41.8602%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.04%)</title><rect x="43.7288%" y="453" width="0.0424%" height="15" fill="rgb(230,171,20)" fg:x="1032" fg:w="1"/><text x="43.9788%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.04%)</title><rect x="43.7288%" y="437" width="0.0424%" height="15" fill="rgb(210,71,41)" fg:x="1032" fg:w="1"/><text x="43.9788%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.04%)</title><rect x="43.7288%" y="421" width="0.0424%" height="15" fill="rgb(206,173,20)" fg:x="1032" fg:w="1"/><text x="43.9788%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (499 samples, 21.14%)</title><rect x="22.6695%" y="597" width="21.1441%" height="15" fill="rgb(233,88,34)" fg:x="535" fg:w="499"/><text x="22.9195%" y="607.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (499 samples, 21.14%)</title><rect x="22.6695%" y="581" width="21.1441%" height="15" fill="rgb(223,209,46)" fg:x="535" fg:w="499"/><text x="22.9195%" y="591.50">rlox::interpreter::Interpreter::e..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (499 samples, 21.14%)</title><rect x="22.6695%" y="565" width="21.1441%" height="15" fill="rgb(250,43,18)" fg:x="535" fg:w="499"/><text x="22.9195%" y="575.50">rlox::interpreter::Interpreter::e..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (499 samples, 21.14%)</title><rect x="22.6695%" y="549" width="21.1441%" height="15" fill="rgb(208,13,10)" fg:x="535" fg:w="499"/><text x="22.9195%" y="559.50">rlox::interpreter::Interpreter::e..</text></g><g><title>rlox::interpreter::LoxCallable::call (211 samples, 8.94%)</title><rect x="34.8729%" y="533" width="8.9407%" height="15" fill="rgb(212,200,36)" fg:x="823" fg:w="211"/><text x="35.1229%" y="543.50">rlox::interpr..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="43.7712%" y="517" width="0.0424%" height="15" fill="rgb(225,90,30)" fg:x="1033" fg:w="1"/><text x="44.0212%" y="527.50"></text></g><g><title>__GI___libc_free (8 samples, 0.34%)</title><rect x="44.4068%" y="549" width="0.3390%" height="15" fill="rgb(236,182,39)" fg:x="1048" fg:w="8"/><text x="44.6568%" y="559.50"></text></g><g><title>_int_free (5 samples, 0.21%)</title><rect x="44.5339%" y="533" width="0.2119%" height="15" fill="rgb(212,144,35)" fg:x="1051" fg:w="5"/><text x="44.7839%" y="543.50"></text></g><g><title>tcache_put (2 samples, 0.08%)</title><rect x="44.6610%" y="517" width="0.0847%" height="15" fill="rgb(228,63,44)" fg:x="1054" fg:w="2"/><text x="44.9110%" y="527.50"></text></g><g><title>std::sync::poison::Flag::done (2 samples, 0.08%)</title><rect x="44.7458%" y="517" width="0.0847%" height="15" fill="rgb(228,109,6)" fg:x="1056" fg:w="2"/><text x="44.9958%" y="527.50"></text></g><g><title>std::thread::panicking (2 samples, 0.08%)</title><rect x="44.7458%" y="501" width="0.0847%" height="15" fill="rgb(238,117,24)" fg:x="1056" fg:w="2"/><text x="44.9958%" y="511.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.08%)</title><rect x="44.7458%" y="485" width="0.0847%" height="15" fill="rgb(242,26,26)" fg:x="1056" fg:w="2"/><text x="44.9958%" y="495.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.08%)</title><rect x="44.7458%" y="469" width="0.0847%" height="15" fill="rgb(221,92,48)" fg:x="1056" fg:w="2"/><text x="44.9958%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rlox::environ::Environ&gt;&gt; (12 samples, 0.51%)</title><rect x="44.7458%" y="549" width="0.5085%" height="15" fill="rgb(209,209,32)" fg:x="1056" fg:w="12"/><text x="44.9958%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.51%)</title><rect x="44.7458%" y="533" width="0.5085%" height="15" fill="rgb(221,70,22)" fg:x="1056" fg:w="12"/><text x="44.9958%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (10 samples, 0.42%)</title><rect x="44.8305%" y="517" width="0.4237%" height="15" fill="rgb(248,145,5)" fg:x="1058" fg:w="10"/><text x="45.0805%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.42%)</title><rect x="44.8305%" y="501" width="0.4237%" height="15" fill="rgb(226,116,26)" fg:x="1058" fg:w="10"/><text x="45.0805%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.42%)</title><rect x="44.8305%" y="485" width="0.4237%" height="15" fill="rgb(244,5,17)" fg:x="1058" fg:w="10"/><text x="45.0805%" y="495.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="45.2542%" y="533" width="0.0424%" height="15" fill="rgb(252,159,33)" fg:x="1068" fg:w="1"/><text x="45.5042%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.08%)</title><rect x="45.5932%" y="405" width="0.0847%" height="15" fill="rgb(206,71,0)" fg:x="1076" fg:w="2"/><text x="45.8432%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="45.6356%" y="389" width="0.0424%" height="15" fill="rgb(233,118,54)" fg:x="1077" fg:w="1"/><text x="45.8856%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="45.5085%" y="453" width="0.2542%" height="15" fill="rgb(234,83,48)" fg:x="1074" fg:w="6"/><text x="45.7585%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="45.5085%" y="437" width="0.2542%" height="15" fill="rgb(228,3,54)" fg:x="1074" fg:w="6"/><text x="45.7585%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.25%)</title><rect x="45.5085%" y="421" width="0.2542%" height="15" fill="rgb(226,155,13)" fg:x="1074" fg:w="6"/><text x="45.7585%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.08%)</title><rect x="45.6780%" y="405" width="0.0847%" height="15" fill="rgb(241,28,37)" fg:x="1078" fg:w="2"/><text x="45.9280%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="45.7203%" y="389" width="0.0424%" height="15" fill="rgb(233,93,10)" fg:x="1079" fg:w="1"/><text x="45.9703%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.08%)</title><rect x="45.7627%" y="453" width="0.0847%" height="15" fill="rgb(225,113,19)" fg:x="1080" fg:w="2"/><text x="46.0127%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.25%)</title><rect x="45.8475%" y="357" width="0.2542%" height="15" fill="rgb(241,2,18)" fg:x="1082" fg:w="6"/><text x="46.0975%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.17%)</title><rect x="45.9322%" y="341" width="0.1695%" height="15" fill="rgb(228,207,21)" fg:x="1084" fg:w="4"/><text x="46.1822%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 1.06%)</title><rect x="45.3390%" y="485" width="1.0593%" height="15" fill="rgb(213,211,35)" fg:x="1070" fg:w="25"/><text x="45.5890%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.93%)</title><rect x="45.4661%" y="469" width="0.9322%" height="15" fill="rgb(209,83,10)" fg:x="1073" fg:w="22"/><text x="45.7161%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.55%)</title><rect x="45.8475%" y="453" width="0.5508%" height="15" fill="rgb(209,164,1)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13 samples, 0.55%)</title><rect x="45.8475%" y="437" width="0.5508%" height="15" fill="rgb(213,184,43)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.55%)</title><rect x="45.8475%" y="421" width="0.5508%" height="15" fill="rgb(231,61,34)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (13 samples, 0.55%)</title><rect x="45.8475%" y="405" width="0.5508%" height="15" fill="rgb(235,75,3)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (13 samples, 0.55%)</title><rect x="45.8475%" y="389" width="0.5508%" height="15" fill="rgb(220,106,47)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (13 samples, 0.55%)</title><rect x="45.8475%" y="373" width="0.5508%" height="15" fill="rgb(210,196,33)" fg:x="1082" fg:w="13"/><text x="46.0975%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u8 (7 samples, 0.30%)</title><rect x="46.1017%" y="357" width="0.2966%" height="15" fill="rgb(229,154,42)" fg:x="1088" fg:w="7"/><text x="46.3517%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.30%)</title><rect x="46.1017%" y="341" width="0.2966%" height="15" fill="rgb(228,114,26)" fg:x="1088" fg:w="7"/><text x="46.3517%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.17%)</title><rect x="46.2288%" y="325" width="0.1695%" height="15" fill="rgb(208,144,1)" fg:x="1091" fg:w="4"/><text x="46.4788%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.17%)</title><rect x="46.3983%" y="437" width="0.1695%" height="15" fill="rgb(239,112,37)" fg:x="1095" fg:w="4"/><text x="46.6483%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.13%)</title><rect x="46.4407%" y="421" width="0.1271%" height="15" fill="rgb(210,96,50)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="431.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.13%)</title><rect x="46.4407%" y="405" width="0.1271%" height="15" fill="rgb(222,178,2)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="46.4407%" y="389" width="0.1271%" height="15" fill="rgb(226,74,18)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.13%)</title><rect x="46.4407%" y="373" width="0.1271%" height="15" fill="rgb(225,67,54)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="383.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.13%)</title><rect x="46.4407%" y="357" width="0.1271%" height="15" fill="rgb(251,92,32)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.13%)</title><rect x="46.4407%" y="341" width="0.1271%" height="15" fill="rgb(228,149,22)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.13%)</title><rect x="46.4407%" y="325" width="0.1271%" height="15" fill="rgb(243,54,13)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="335.50"></text></g><g><title>__memcmp_evex_movbe (3 samples, 0.13%)</title><rect x="46.4407%" y="309" width="0.1271%" height="15" fill="rgb(243,180,28)" fg:x="1096" fg:w="3"/><text x="46.6907%" y="319.50"></text></g><g><title>rlox::environ::Environ::get (32 samples, 1.36%)</title><rect x="45.2542%" y="549" width="1.3559%" height="15" fill="rgb(208,167,24)" fg:x="1068" fg:w="32"/><text x="45.5042%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 1.31%)</title><rect x="45.2966%" y="533" width="1.3136%" height="15" fill="rgb(245,73,45)" fg:x="1069" fg:w="31"/><text x="45.5466%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 1.31%)</title><rect x="45.2966%" y="517" width="1.3136%" height="15" fill="rgb(237,203,48)" fg:x="1069" fg:w="31"/><text x="45.5466%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 1.31%)</title><rect x="45.2966%" y="501" width="1.3136%" height="15" fill="rgb(211,197,16)" fg:x="1069" fg:w="31"/><text x="45.5466%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.21%)</title><rect x="46.3983%" y="485" width="0.2119%" height="15" fill="rgb(243,99,51)" fg:x="1095" fg:w="5"/><text x="46.6483%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.21%)</title><rect x="46.3983%" y="469" width="0.2119%" height="15" fill="rgb(215,123,29)" fg:x="1095" fg:w="5"/><text x="46.6483%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.21%)</title><rect x="46.3983%" y="453" width="0.2119%" height="15" fill="rgb(239,186,37)" fg:x="1095" fg:w="5"/><text x="46.6483%" y="463.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="46.5678%" y="437" width="0.0424%" height="15" fill="rgb(252,136,39)" fg:x="1099" fg:w="1"/><text x="46.8178%" y="447.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (77 samples, 3.26%)</title><rect x="43.8136%" y="597" width="3.2627%" height="15" fill="rgb(223,213,32)" fg:x="1034" fg:w="77"/><text x="44.0636%" y="607.50">rlo..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (77 samples, 3.26%)</title><rect x="43.8136%" y="581" width="3.2627%" height="15" fill="rgb(233,115,5)" fg:x="1034" fg:w="77"/><text x="44.0636%" y="591.50">rlo..</text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (71 samples, 3.01%)</title><rect x="44.0678%" y="565" width="3.0085%" height="15" fill="rgb(207,226,44)" fg:x="1040" fg:w="71"/><text x="44.3178%" y="575.50">rlo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.47%)</title><rect x="46.6102%" y="549" width="0.4661%" height="15" fill="rgb(208,126,0)" fg:x="1100" fg:w="11"/><text x="46.8602%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (11 samples, 0.47%)</title><rect x="46.6102%" y="533" width="0.4661%" height="15" fill="rgb(244,66,21)" fg:x="1100" fg:w="11"/><text x="46.8602%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.42%)</title><rect x="46.6525%" y="517" width="0.4237%" height="15" fill="rgb(222,97,12)" fg:x="1101" fg:w="10"/><text x="46.9025%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.42%)</title><rect x="46.6525%" y="501" width="0.4237%" height="15" fill="rgb(219,213,19)" fg:x="1101" fg:w="10"/><text x="46.9025%" y="511.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (606 samples, 25.68%)</title><rect x="22.0339%" y="885" width="25.6780%" height="15" fill="rgb(252,169,30)" fg:x="520" fg:w="606"/><text x="22.2839%" y="895.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (606 samples, 25.68%)</title><rect x="22.0339%" y="869" width="25.6780%" height="15" fill="rgb(206,32,51)" fg:x="520" fg:w="606"/><text x="22.2839%" y="879.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (606 samples, 25.68%)</title><rect x="22.0339%" y="853" width="25.6780%" height="15" fill="rgb(250,172,42)" fg:x="520" fg:w="606"/><text x="22.2839%" y="863.50">rlox::interpreter::Interpreter::execute_b..</text></g><g><title>rlox::interpreter::Interpreter::execute (606 samples, 25.68%)</title><rect x="22.0339%" y="837" width="25.6780%" height="15" fill="rgb(209,34,43)" fg:x="520" fg:w="606"/><text x="22.2839%" y="847.50">rlox::interpreter::Interpreter::execute</text></g><g><title>core::option::Option&lt;T&gt;::map (606 samples, 25.68%)</title><rect x="22.0339%" y="821" width="25.6780%" height="15" fill="rgb(223,11,35)" fg:x="520" fg:w="606"/><text x="22.2839%" y="831.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (606 samples, 25.68%)</title><rect x="22.0339%" y="805" width="25.6780%" height="15" fill="rgb(251,219,26)" fg:x="520" fg:w="606"/><text x="22.2839%" y="815.50">rlox::interpreter::Interpreter::execute::..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (606 samples, 25.68%)</title><rect x="22.0339%" y="789" width="25.6780%" height="15" fill="rgb(231,119,3)" fg:x="520" fg:w="606"/><text x="22.2839%" y="799.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::Interpreter::evaluate (606 samples, 25.68%)</title><rect x="22.0339%" y="773" width="25.6780%" height="15" fill="rgb(216,97,11)" fg:x="520" fg:w="606"/><text x="22.2839%" y="783.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (606 samples, 25.68%)</title><rect x="22.0339%" y="757" width="25.6780%" height="15" fill="rgb(223,59,9)" fg:x="520" fg:w="606"/><text x="22.2839%" y="767.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (606 samples, 25.68%)</title><rect x="22.0339%" y="741" width="25.6780%" height="15" fill="rgb(233,93,31)" fg:x="520" fg:w="606"/><text x="22.2839%" y="751.50">rlox::interpreter::Interpreter::execute_b..</text></g><g><title>rlox::interpreter::Interpreter::execute (606 samples, 25.68%)</title><rect x="22.0339%" y="725" width="25.6780%" height="15" fill="rgb(239,81,33)" fg:x="520" fg:w="606"/><text x="22.2839%" y="735.50">rlox::interpreter::Interpreter::execute</text></g><g><title>core::option::Option&lt;T&gt;::map (606 samples, 25.68%)</title><rect x="22.0339%" y="709" width="25.6780%" height="15" fill="rgb(213,120,34)" fg:x="520" fg:w="606"/><text x="22.2839%" y="719.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (606 samples, 25.68%)</title><rect x="22.0339%" y="693" width="25.6780%" height="15" fill="rgb(243,49,53)" fg:x="520" fg:w="606"/><text x="22.2839%" y="703.50">rlox::interpreter::Interpreter::execute::..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (606 samples, 25.68%)</title><rect x="22.0339%" y="677" width="25.6780%" height="15" fill="rgb(247,216,33)" fg:x="520" fg:w="606"/><text x="22.2839%" y="687.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::Interpreter::evaluate (606 samples, 25.68%)</title><rect x="22.0339%" y="661" width="25.6780%" height="15" fill="rgb(226,26,14)" fg:x="520" fg:w="606"/><text x="22.2839%" y="671.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (591 samples, 25.04%)</title><rect x="22.6695%" y="645" width="25.0424%" height="15" fill="rgb(215,49,53)" fg:x="535" fg:w="591"/><text x="22.9195%" y="655.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (591 samples, 25.04%)</title><rect x="22.6695%" y="629" width="25.0424%" height="15" fill="rgb(245,162,40)" fg:x="535" fg:w="591"/><text x="22.9195%" y="639.50">rlox::interpreter::Interpreter::execute_..</text></g><g><title>rlox::interpreter::Interpreter::execute (591 samples, 25.04%)</title><rect x="22.6695%" y="613" width="25.0424%" height="15" fill="rgb(229,68,17)" fg:x="535" fg:w="591"/><text x="22.9195%" y="623.50">rlox::interpreter::Interpreter::execute</text></g><g><title>rlox::interpreter::Interpreter::execute (15 samples, 0.64%)</title><rect x="47.0763%" y="597" width="0.6356%" height="15" fill="rgb(213,182,10)" fg:x="1111" fg:w="15"/><text x="47.3263%" y="607.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block (15 samples, 0.64%)</title><rect x="47.0763%" y="581" width="0.6356%" height="15" fill="rgb(245,125,30)" fg:x="1111" fg:w="15"/><text x="47.3263%" y="591.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (15 samples, 0.64%)</title><rect x="47.0763%" y="565" width="0.6356%" height="15" fill="rgb(232,202,2)" fg:x="1111" fg:w="15"/><text x="47.3263%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.30%)</title><rect x="47.4153%" y="549" width="0.2966%" height="15" fill="rgb(237,140,51)" fg:x="1119" fg:w="7"/><text x="47.6653%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 1.10%)</title><rect x="47.7119%" y="549" width="1.1017%" height="15" fill="rgb(236,157,25)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 1.10%)</title><rect x="47.7119%" y="533" width="1.1017%" height="15" fill="rgb(219,209,0)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (26 samples, 1.10%)</title><rect x="47.7119%" y="517" width="1.1017%" height="15" fill="rgb(240,116,54)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 1.10%)</title><rect x="47.7119%" y="501" width="1.1017%" height="15" fill="rgb(216,10,36)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (26 samples, 1.10%)</title><rect x="47.7119%" y="485" width="1.1017%" height="15" fill="rgb(222,72,44)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (26 samples, 1.10%)</title><rect x="47.7119%" y="469" width="1.1017%" height="15" fill="rgb(232,159,9)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 1.10%)</title><rect x="47.7119%" y="453" width="1.1017%" height="15" fill="rgb(210,39,32)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 1.10%)</title><rect x="47.7119%" y="437" width="1.1017%" height="15" fill="rgb(216,194,45)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 1.10%)</title><rect x="47.7119%" y="421" width="1.1017%" height="15" fill="rgb(218,18,35)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 1.10%)</title><rect x="47.7119%" y="405" width="1.1017%" height="15" fill="rgb(207,83,51)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="415.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate::{{closure}} (26 samples, 1.10%)</title><rect x="47.7119%" y="389" width="1.1017%" height="15" fill="rgb(225,63,43)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="399.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (26 samples, 1.10%)</title><rect x="47.7119%" y="373" width="1.1017%" height="15" fill="rgb(207,57,36)" fg:x="1126" fg:w="26"/><text x="47.9619%" y="383.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="48.4322%" y="357" width="0.3814%" height="15" fill="rgb(216,99,33)" fg:x="1143" fg:w="9"/><text x="48.6822%" y="367.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="48.5169%" y="341" width="0.2966%" height="15" fill="rgb(225,42,16)" fg:x="1145" fg:w="7"/><text x="48.7669%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rlox::environ::Environ&gt;&gt; (10 samples, 0.42%)</title><rect x="49.1102%" y="517" width="0.4237%" height="15" fill="rgb(220,201,45)" fg:x="1159" fg:w="10"/><text x="49.3602%" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.42%)</title><rect x="49.1102%" y="501" width="0.4237%" height="15" fill="rgb(225,33,4)" fg:x="1159" fg:w="10"/><text x="49.3602%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (10 samples, 0.42%)</title><rect x="49.1102%" y="485" width="0.4237%" height="15" fill="rgb(224,33,50)" fg:x="1159" fg:w="10"/><text x="49.3602%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.42%)</title><rect x="49.1102%" y="469" width="0.4237%" height="15" fill="rgb(246,198,51)" fg:x="1159" fg:w="10"/><text x="49.3602%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.42%)</title><rect x="49.1102%" y="453" width="0.4237%" height="15" fill="rgb(205,22,4)" fg:x="1159" fg:w="10"/><text x="49.3602%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="49.5339%" y="501" width="0.0424%" height="15" fill="rgb(206,3,8)" fg:x="1169" fg:w="1"/><text x="49.7839%" y="511.50"></text></g><g><title>_int_free (5 samples, 0.21%)</title><rect x="49.7458%" y="485" width="0.2119%" height="15" fill="rgb(251,23,15)" fg:x="1174" fg:w="5"/><text x="49.9958%" y="495.50"></text></g><g><title>__GI___libc_free (10 samples, 0.42%)</title><rect x="49.5763%" y="501" width="0.4237%" height="15" fill="rgb(252,88,28)" fg:x="1170" fg:w="10"/><text x="49.8263%" y="511.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="49.9576%" y="485" width="0.0424%" height="15" fill="rgb(212,127,14)" fg:x="1179" fg:w="1"/><text x="50.2076%" y="495.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="50.0000%" y="469" width="0.0424%" height="15" fill="rgb(247,145,37)" fg:x="1180" fg:w="1"/><text x="50.2500%" y="479.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="50.0000%" y="453" width="0.0424%" height="15" fill="rgb(209,117,53)" fg:x="1180" fg:w="1"/><text x="50.2500%" y="463.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="50.0000%" y="437" width="0.0424%" height="15" fill="rgb(212,90,42)" fg:x="1180" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="50.0000%" y="421" width="0.0424%" height="15" fill="rgb(218,164,37)" fg:x="1180" fg:w="1"/><text x="50.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rlox::environ::Environ&gt;&gt; (11 samples, 0.47%)</title><rect x="50.0000%" y="501" width="0.4661%" height="15" fill="rgb(246,65,34)" fg:x="1180" fg:w="11"/><text x="50.2500%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.47%)</title><rect x="50.0000%" y="485" width="0.4661%" height="15" fill="rgb(231,100,33)" fg:x="1180" fg:w="11"/><text x="50.2500%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (10 samples, 0.42%)</title><rect x="50.0424%" y="469" width="0.4237%" height="15" fill="rgb(228,126,14)" fg:x="1181" fg:w="10"/><text x="50.2924%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (10 samples, 0.42%)</title><rect x="50.0424%" y="453" width="0.4237%" height="15" fill="rgb(215,173,21)" fg:x="1181" fg:w="10"/><text x="50.2924%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (10 samples, 0.42%)</title><rect x="50.0424%" y="437" width="0.4237%" height="15" fill="rgb(210,6,40)" fg:x="1181" fg:w="10"/><text x="50.2924%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.17%)</title><rect x="50.6780%" y="373" width="0.1695%" height="15" fill="rgb(212,48,18)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="383.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.17%)</title><rect x="50.6780%" y="357" width="0.1695%" height="15" fill="rgb(230,214,11)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="50.6780%" y="341" width="0.1695%" height="15" fill="rgb(254,105,39)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.17%)</title><rect x="50.6780%" y="325" width="0.1695%" height="15" fill="rgb(245,158,5)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="335.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.17%)</title><rect x="50.6780%" y="309" width="0.1695%" height="15" fill="rgb(249,208,11)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="50.6780%" y="293" width="0.1695%" height="15" fill="rgb(210,39,28)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="50.6780%" y="277" width="0.1695%" height="15" fill="rgb(211,56,53)" fg:x="1196" fg:w="4"/><text x="50.9280%" y="287.50"></text></g><g><title>__memcmp_evex_movbe (3 samples, 0.13%)</title><rect x="50.7203%" y="261" width="0.1271%" height="15" fill="rgb(226,201,30)" fg:x="1197" fg:w="3"/><text x="50.9703%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.25%)</title><rect x="50.6356%" y="389" width="0.2542%" height="15" fill="rgb(239,101,34)" fg:x="1195" fg:w="6"/><text x="50.8856%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.04%)</title><rect x="50.8475%" y="373" width="0.0424%" height="15" fill="rgb(226,209,5)" fg:x="1200" fg:w="1"/><text x="51.0975%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.04%)</title><rect x="50.8475%" y="357" width="0.0424%" height="15" fill="rgb(250,105,47)" fg:x="1200" fg:w="1"/><text x="51.0975%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="50.8475%" y="341" width="0.0424%" height="15" fill="rgb(230,72,3)" fg:x="1200" fg:w="1"/><text x="51.0975%" y="351.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.04%)</title><rect x="50.8475%" y="325" width="0.0424%" height="15" fill="rgb(232,218,39)" fg:x="1200" fg:w="1"/><text x="51.0975%" y="335.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.04%)</title><rect x="50.8475%" y="309" width="0.0424%" height="15" fill="rgb(248,166,6)" fg:x="1200" fg:w="1"/><text x="51.0975%" y="319.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.17%)</title><rect x="50.8898%" y="389" width="0.1695%" height="15" fill="rgb(247,89,20)" fg:x="1201" fg:w="4"/><text x="51.1398%" y="399.50"></text></g><g><title>rlox::environ::Environ::get (17 samples, 0.72%)</title><rect x="50.4661%" y="501" width="0.7203%" height="15" fill="rgb(248,130,54)" fg:x="1191" fg:w="17"/><text x="50.7161%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.72%)</title><rect x="50.4661%" y="485" width="0.7203%" height="15" fill="rgb(234,196,4)" fg:x="1191" fg:w="17"/><text x="50.7161%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.72%)</title><rect x="50.4661%" y="469" width="0.7203%" height="15" fill="rgb(250,143,31)" fg:x="1191" fg:w="17"/><text x="50.7161%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.68%)</title><rect x="50.5085%" y="453" width="0.6780%" height="15" fill="rgb(211,110,34)" fg:x="1192" fg:w="16"/><text x="50.7585%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.64%)</title><rect x="50.5508%" y="437" width="0.6356%" height="15" fill="rgb(215,124,48)" fg:x="1193" fg:w="15"/><text x="50.8008%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.64%)</title><rect x="50.5508%" y="421" width="0.6356%" height="15" fill="rgb(216,46,13)" fg:x="1193" fg:w="15"/><text x="50.8008%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.64%)</title><rect x="50.5508%" y="405" width="0.6356%" height="15" fill="rgb(205,184,25)" fg:x="1193" fg:w="15"/><text x="50.8008%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.13%)</title><rect x="51.0593%" y="389" width="0.1271%" height="15" fill="rgb(228,1,10)" fg:x="1205" fg:w="3"/><text x="51.3093%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.13%)</title><rect x="51.0593%" y="373" width="0.1271%" height="15" fill="rgb(213,116,27)" fg:x="1205" fg:w="3"/><text x="51.3093%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.08%)</title><rect x="51.2712%" y="373" width="0.0847%" height="15" fill="rgb(241,95,50)" fg:x="1210" fg:w="2"/><text x="51.5212%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="51.3136%" y="357" width="0.0424%" height="15" fill="rgb(238,48,32)" fg:x="1211" fg:w="1"/><text x="51.5636%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="51.2712%" y="421" width="0.2966%" height="15" fill="rgb(235,113,49)" fg:x="1210" fg:w="7"/><text x="51.5212%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="51.2712%" y="405" width="0.2966%" height="15" fill="rgb(205,127,43)" fg:x="1210" fg:w="7"/><text x="51.5212%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="51.2712%" y="389" width="0.2966%" height="15" fill="rgb(250,162,2)" fg:x="1210" fg:w="7"/><text x="51.5212%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.21%)</title><rect x="51.3559%" y="373" width="0.2119%" height="15" fill="rgb(220,13,41)" fg:x="1212" fg:w="5"/><text x="51.6059%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.17%)</title><rect x="51.3983%" y="357" width="0.1695%" height="15" fill="rgb(249,221,25)" fg:x="1213" fg:w="4"/><text x="51.6483%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="51.5678%" y="421" width="0.0424%" height="15" fill="rgb(215,208,19)" fg:x="1217" fg:w="1"/><text x="51.8178%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="51.5678%" y="405" width="0.0424%" height="15" fill="rgb(236,175,2)" fg:x="1217" fg:w="1"/><text x="51.8178%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="51.5678%" y="389" width="0.0424%" height="15" fill="rgb(241,52,2)" fg:x="1217" fg:w="1"/><text x="51.8178%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="51.5678%" y="373" width="0.0424%" height="15" fill="rgb(248,140,14)" fg:x="1217" fg:w="1"/><text x="51.8178%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.25%)</title><rect x="51.6102%" y="325" width="0.2542%" height="15" fill="rgb(253,22,42)" fg:x="1218" fg:w="6"/><text x="51.8602%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.13%)</title><rect x="51.7373%" y="309" width="0.1271%" height="15" fill="rgb(234,61,47)" fg:x="1221" fg:w="3"/><text x="51.9873%" y="319.50"></text></g><g><title>core::cmp::min (1 samples, 0.04%)</title><rect x="52.0339%" y="293" width="0.0424%" height="15" fill="rgb(208,226,15)" fg:x="1228" fg:w="1"/><text x="52.2839%" y="303.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="52.0339%" y="277" width="0.0424%" height="15" fill="rgb(217,221,4)" fg:x="1228" fg:w="1"/><text x="52.2839%" y="287.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.04%)</title><rect x="52.0339%" y="261" width="0.0424%" height="15" fill="rgb(212,174,34)" fg:x="1228" fg:w="1"/><text x="52.2839%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.93%)</title><rect x="51.1864%" y="453" width="0.9322%" height="15" fill="rgb(253,83,4)" fg:x="1208" fg:w="22"/><text x="51.4364%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.89%)</title><rect x="51.2288%" y="437" width="0.8898%" height="15" fill="rgb(250,195,49)" fg:x="1209" fg:w="21"/><text x="51.4788%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.51%)</title><rect x="51.6102%" y="421" width="0.5085%" height="15" fill="rgb(241,192,25)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.51%)</title><rect x="51.6102%" y="405" width="0.5085%" height="15" fill="rgb(208,124,10)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.51%)</title><rect x="51.6102%" y="389" width="0.5085%" height="15" fill="rgb(222,33,0)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (12 samples, 0.51%)</title><rect x="51.6102%" y="373" width="0.5085%" height="15" fill="rgb(234,209,28)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (12 samples, 0.51%)</title><rect x="51.6102%" y="357" width="0.5085%" height="15" fill="rgb(224,11,23)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (12 samples, 0.51%)</title><rect x="51.6102%" y="341" width="0.5085%" height="15" fill="rgb(232,99,1)" fg:x="1218" fg:w="12"/><text x="51.8602%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.25%)</title><rect x="51.8644%" y="325" width="0.2542%" height="15" fill="rgb(237,95,45)" fg:x="1224" fg:w="6"/><text x="52.1144%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="51.9492%" y="309" width="0.1695%" height="15" fill="rgb(208,109,11)" fg:x="1226" fg:w="4"/><text x="52.1992%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="52.0763%" y="293" width="0.0424%" height="15" fill="rgb(216,190,48)" fg:x="1229" fg:w="1"/><text x="52.3263%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23 samples, 0.97%)</title><rect x="51.1864%" y="501" width="0.9746%" height="15" fill="rgb(251,171,36)" fg:x="1208" fg:w="23"/><text x="51.4364%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23 samples, 0.97%)</title><rect x="51.1864%" y="485" width="0.9746%" height="15" fill="rgb(230,62,22)" fg:x="1208" fg:w="23"/><text x="51.4364%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.97%)</title><rect x="51.1864%" y="469" width="0.9746%" height="15" fill="rgb(225,114,35)" fg:x="1208" fg:w="23"/><text x="51.4364%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="52.1186%" y="453" width="0.0424%" height="15" fill="rgb(215,118,42)" fg:x="1230" fg:w="1"/><text x="52.3686%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="52.1186%" y="437" width="0.0424%" height="15" fill="rgb(243,119,21)" fg:x="1230" fg:w="1"/><text x="52.3686%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.04%)</title><rect x="52.1186%" y="421" width="0.0424%" height="15" fill="rgb(252,177,53)" fg:x="1230" fg:w="1"/><text x="52.3686%" y="431.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="52.1610%" y="485" width="0.0424%" height="15" fill="rgb(237,209,29)" fg:x="1231" fg:w="1"/><text x="52.4110%" y="495.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="52.1610%" y="469" width="0.0424%" height="15" fill="rgb(212,65,23)" fg:x="1231" fg:w="1"/><text x="52.4110%" y="479.50"></text></g><g><title>rlox::environ::Environ::get (73 samples, 3.09%)</title><rect x="49.5339%" y="517" width="3.0932%" height="15" fill="rgb(230,222,46)" fg:x="1169" fg:w="73"/><text x="49.7839%" y="527.50">rlo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.47%)</title><rect x="52.1610%" y="501" width="0.4661%" height="15" fill="rgb(215,135,32)" fg:x="1231" fg:w="11"/><text x="52.4110%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (10 samples, 0.42%)</title><rect x="52.2034%" y="485" width="0.4237%" height="15" fill="rgb(246,101,22)" fg:x="1232" fg:w="10"/><text x="52.4534%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.42%)</title><rect x="52.2034%" y="469" width="0.4237%" height="15" fill="rgb(206,107,13)" fg:x="1232" fg:w="10"/><text x="52.4534%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.42%)</title><rect x="52.2034%" y="453" width="0.4237%" height="15" fill="rgb(250,100,44)" fg:x="1232" fg:w="10"/><text x="52.4534%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="52.6271%" y="501" width="0.0424%" height="15" fill="rgb(231,147,38)" fg:x="1242" fg:w="1"/><text x="52.8771%" y="511.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="52.6271%" y="485" width="0.0424%" height="15" fill="rgb(229,8,40)" fg:x="1242" fg:w="1"/><text x="52.8771%" y="495.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (101 samples, 4.28%)</title><rect x="48.8136%" y="549" width="4.2797%" height="15" fill="rgb(221,135,30)" fg:x="1152" fg:w="101"/><text x="49.0636%" y="559.50">rlox:..</text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (100 samples, 4.24%)</title><rect x="48.8559%" y="533" width="4.2373%" height="15" fill="rgb(249,193,18)" fg:x="1153" fg:w="100"/><text x="49.1059%" y="543.50">rlox:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.47%)</title><rect x="52.6271%" y="517" width="0.4661%" height="15" fill="rgb(209,133,39)" fg:x="1242" fg:w="11"/><text x="52.8771%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (10 samples, 0.42%)</title><rect x="52.6695%" y="501" width="0.4237%" height="15" fill="rgb(232,100,14)" fg:x="1243" fg:w="10"/><text x="52.9195%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (7 samples, 0.30%)</title><rect x="52.7966%" y="485" width="0.2966%" height="15" fill="rgb(224,185,1)" fg:x="1246" fg:w="7"/><text x="53.0466%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.30%)</title><rect x="52.7966%" y="469" width="0.2966%" height="15" fill="rgb(223,139,8)" fg:x="1246" fg:w="7"/><text x="53.0466%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="53.2627%" y="341" width="0.0424%" height="15" fill="rgb(232,213,38)" fg:x="1257" fg:w="1"/><text x="53.5127%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="53.2627%" y="325" width="0.0424%" height="15" fill="rgb(207,94,22)" fg:x="1257" fg:w="1"/><text x="53.5127%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="53.2627%" y="309" width="0.0424%" height="15" fill="rgb(219,183,54)" fg:x="1257" fg:w="1"/><text x="53.5127%" y="319.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (29 samples, 1.23%)</title><rect x="53.3051%" y="341" width="1.2288%" height="15" fill="rgb(216,185,54)" fg:x="1258" fg:w="29"/><text x="53.5551%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.51%)</title><rect x="54.0254%" y="325" width="0.5085%" height="15" fill="rgb(254,217,39)" fg:x="1275" fg:w="12"/><text x="54.2754%" y="335.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="54.4068%" y="309" width="0.1271%" height="15" fill="rgb(240,178,23)" fg:x="1284" fg:w="3"/><text x="54.6568%" y="319.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="54.4492%" y="293" width="0.0847%" height="15" fill="rgb(218,11,47)" fg:x="1285" fg:w="2"/><text x="54.6992%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.30%)</title><rect x="54.5339%" y="341" width="0.2966%" height="15" fill="rgb(218,51,51)" fg:x="1287" fg:w="7"/><text x="54.7839%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.30%)</title><rect x="54.5339%" y="325" width="0.2966%" height="15" fill="rgb(238,126,27)" fg:x="1287" fg:w="7"/><text x="54.7839%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.30%)</title><rect x="54.5339%" y="309" width="0.2966%" height="15" fill="rgb(249,202,22)" fg:x="1287" fg:w="7"/><text x="54.7839%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.25%)</title><rect x="54.5763%" y="293" width="0.2542%" height="15" fill="rgb(254,195,49)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.25%)</title><rect x="54.5763%" y="277" width="0.2542%" height="15" fill="rgb(208,123,14)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="287.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.25%)</title><rect x="54.5763%" y="261" width="0.2542%" height="15" fill="rgb(224,200,8)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="271.50"></text></g><g><title>__rdl_alloc (6 samples, 0.25%)</title><rect x="54.5763%" y="245" width="0.2542%" height="15" fill="rgb(217,61,36)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.25%)</title><rect x="54.5763%" y="229" width="0.2542%" height="15" fill="rgb(206,35,45)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="239.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.25%)</title><rect x="54.5763%" y="213" width="0.2542%" height="15" fill="rgb(217,65,33)" fg:x="1288" fg:w="6"/><text x="54.8263%" y="223.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="54.7458%" y="197" width="0.0847%" height="15" fill="rgb(222,158,48)" fg:x="1292" fg:w="2"/><text x="54.9958%" y="207.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (55 samples, 2.33%)</title><rect x="53.0932%" y="437" width="2.3305%" height="15" fill="rgb(254,2,54)" fg:x="1253" fg:w="55"/><text x="53.3432%" y="447.50">&lt;..</text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (55 samples, 2.33%)</title><rect x="53.0932%" y="421" width="2.3305%" height="15" fill="rgb(250,143,38)" fg:x="1253" fg:w="55"/><text x="53.3432%" y="431.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 2.20%)</title><rect x="53.2203%" y="405" width="2.2034%" height="15" fill="rgb(248,25,0)" fg:x="1256" fg:w="52"/><text x="53.4703%" y="415.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 2.20%)</title><rect x="53.2203%" y="389" width="2.2034%" height="15" fill="rgb(206,152,27)" fg:x="1256" fg:w="52"/><text x="53.4703%" y="399.50">a..</text></g><g><title>alloc::slice::hack::to_vec (52 samples, 2.20%)</title><rect x="53.2203%" y="373" width="2.2034%" height="15" fill="rgb(240,77,30)" fg:x="1256" fg:w="52"/><text x="53.4703%" y="383.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 2.20%)</title><rect x="53.2203%" y="357" width="2.2034%" height="15" fill="rgb(231,5,3)" fg:x="1256" fg:w="52"/><text x="53.4703%" y="367.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.59%)</title><rect x="54.8305%" y="341" width="0.5932%" height="15" fill="rgb(207,226,32)" fg:x="1294" fg:w="14"/><text x="55.0805%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (68 samples, 2.88%)</title><rect x="53.0932%" y="453" width="2.8814%" height="15" fill="rgb(222,207,47)" fg:x="1253" fg:w="68"/><text x="53.3432%" y="463.50">&lt;a..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13 samples, 0.55%)</title><rect x="55.4237%" y="437" width="0.5508%" height="15" fill="rgb(229,115,45)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.55%)</title><rect x="55.4237%" y="421" width="0.5508%" height="15" fill="rgb(224,191,6)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.55%)</title><rect x="55.4237%" y="405" width="0.5508%" height="15" fill="rgb(230,227,24)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.55%)</title><rect x="55.4237%" y="389" width="0.5508%" height="15" fill="rgb(228,80,19)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="399.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.55%)</title><rect x="55.4237%" y="373" width="0.5508%" height="15" fill="rgb(247,229,0)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="383.50"></text></g><g><title>__rdl_alloc (13 samples, 0.55%)</title><rect x="55.4237%" y="357" width="0.5508%" height="15" fill="rgb(237,194,15)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.55%)</title><rect x="55.4237%" y="341" width="0.5508%" height="15" fill="rgb(219,203,20)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="351.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.55%)</title><rect x="55.4237%" y="325" width="0.5508%" height="15" fill="rgb(234,128,8)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="335.50"></text></g><g><title>_int_malloc (13 samples, 0.55%)</title><rect x="55.4237%" y="309" width="0.5508%" height="15" fill="rgb(248,202,8)" fg:x="1308" fg:w="13"/><text x="55.6737%" y="319.50"></text></g><g><title>tcache_put (5 samples, 0.21%)</title><rect x="55.7627%" y="293" width="0.2119%" height="15" fill="rgb(206,104,37)" fg:x="1316" fg:w="5"/><text x="56.0127%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="56.6949%" y="181" width="0.0424%" height="15" fill="rgb(223,8,27)" fg:x="1338" fg:w="1"/><text x="56.9449%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="56.6949%" y="165" width="0.0424%" height="15" fill="rgb(216,217,28)" fg:x="1338" fg:w="1"/><text x="56.9449%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="56.6949%" y="149" width="0.0424%" height="15" fill="rgb(249,199,1)" fg:x="1338" fg:w="1"/><text x="56.9449%" y="159.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="56.6949%" y="133" width="0.0424%" height="15" fill="rgb(240,85,17)" fg:x="1338" fg:w="1"/><text x="56.9449%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="56.6949%" y="117" width="0.0424%" height="15" fill="rgb(206,108,45)" fg:x="1338" fg:w="1"/><text x="56.9449%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="56.6949%" y="309" width="0.0847%" height="15" fill="rgb(245,210,41)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="56.6949%" y="293" width="0.0847%" height="15" fill="rgb(206,13,37)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="56.6949%" y="277" width="0.0847%" height="15" fill="rgb(250,61,18)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="56.6949%" y="261" width="0.0847%" height="15" fill="rgb(235,172,48)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="56.6949%" y="245" width="0.0847%" height="15" fill="rgb(249,201,17)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="56.6949%" y="229" width="0.0847%" height="15" fill="rgb(219,208,6)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="56.6949%" y="213" width="0.0847%" height="15" fill="rgb(248,31,23)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="56.6949%" y="197" width="0.0847%" height="15" fill="rgb(245,15,42)" fg:x="1338" fg:w="2"/><text x="56.9449%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="56.7373%" y="181" width="0.0424%" height="15" fill="rgb(222,217,39)" fg:x="1339" fg:w="1"/><text x="56.9873%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="56.7373%" y="165" width="0.0424%" height="15" fill="rgb(210,219,27)" fg:x="1339" fg:w="1"/><text x="56.9873%" y="175.50"></text></g><g><title>_int_malloc (10 samples, 0.42%)</title><rect x="56.9915%" y="293" width="0.4237%" height="15" fill="rgb(252,166,36)" fg:x="1345" fg:w="10"/><text x="57.2415%" y="303.50"></text></g><g><title>tcache_put (3 samples, 0.13%)</title><rect x="57.2881%" y="277" width="0.1271%" height="15" fill="rgb(245,132,34)" fg:x="1352" fg:w="3"/><text x="57.5381%" y="287.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="57.4153%" y="293" width="0.0424%" height="15" fill="rgb(236,54,3)" fg:x="1355" fg:w="1"/><text x="57.6653%" y="303.50"></text></g><g><title>checked_request2size (2 samples, 0.08%)</title><rect x="57.4576%" y="293" width="0.0847%" height="15" fill="rgb(241,173,43)" fg:x="1356" fg:w="2"/><text x="57.7076%" y="303.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.93%)</title><rect x="56.7797%" y="309" width="0.9322%" height="15" fill="rgb(215,190,9)" fg:x="1340" fg:w="22"/><text x="57.0297%" y="319.50"></text></g><g><title>tcache_get (4 samples, 0.17%)</title><rect x="57.5424%" y="293" width="0.1695%" height="15" fill="rgb(242,101,16)" fg:x="1358" fg:w="4"/><text x="57.7924%" y="303.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (42 samples, 1.78%)</title><rect x="56.1441%" y="357" width="1.7797%" height="15" fill="rgb(223,190,21)" fg:x="1325" fg:w="42"/><text x="56.3941%" y="367.50">&lt;..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (39 samples, 1.65%)</title><rect x="56.2712%" y="341" width="1.6525%" height="15" fill="rgb(215,228,25)" fg:x="1328" fg:w="39"/><text x="56.5212%" y="351.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (34 samples, 1.44%)</title><rect x="56.4831%" y="325" width="1.4407%" height="15" fill="rgb(225,36,22)" fg:x="1333" fg:w="34"/><text x="56.7331%" y="335.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5 samples, 0.21%)</title><rect x="57.7119%" y="309" width="0.2119%" height="15" fill="rgb(251,106,46)" fg:x="1362" fg:w="5"/><text x="57.9619%" y="319.50"></text></g><g><title>_int_malloc (12 samples, 0.51%)</title><rect x="58.2627%" y="229" width="0.5085%" height="15" fill="rgb(208,90,1)" fg:x="1375" fg:w="12"/><text x="58.5127%" y="239.50"></text></g><g><title>tcache_put (4 samples, 0.17%)</title><rect x="58.6017%" y="213" width="0.1695%" height="15" fill="rgb(243,10,4)" fg:x="1383" fg:w="4"/><text x="58.8517%" y="223.50"></text></g><g><title>checked_request2size (6 samples, 0.25%)</title><rect x="58.7712%" y="229" width="0.2542%" height="15" fill="rgb(212,137,27)" fg:x="1387" fg:w="6"/><text x="59.0212%" y="239.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 3.01%)</title><rect x="56.1441%" y="373" width="3.0085%" height="15" fill="rgb(231,220,49)" fg:x="1325" fg:w="71"/><text x="56.3941%" y="383.50">&lt;al..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (29 samples, 1.23%)</title><rect x="57.9237%" y="357" width="1.2288%" height="15" fill="rgb(237,96,20)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (29 samples, 1.23%)</title><rect x="57.9237%" y="341" width="1.2288%" height="15" fill="rgb(239,229,30)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 1.23%)</title><rect x="57.9237%" y="325" width="1.2288%" height="15" fill="rgb(219,65,33)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 1.23%)</title><rect x="57.9237%" y="309" width="1.2288%" height="15" fill="rgb(243,134,7)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="319.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 1.23%)</title><rect x="57.9237%" y="293" width="1.2288%" height="15" fill="rgb(216,177,54)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="303.50"></text></g><g><title>__rdl_alloc (29 samples, 1.23%)</title><rect x="57.9237%" y="277" width="1.2288%" height="15" fill="rgb(211,160,20)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (29 samples, 1.23%)</title><rect x="57.9237%" y="261" width="1.2288%" height="15" fill="rgb(239,85,39)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="271.50"></text></g><g><title>__GI___libc_malloc (29 samples, 1.23%)</title><rect x="57.9237%" y="245" width="1.2288%" height="15" fill="rgb(232,125,22)" fg:x="1367" fg:w="29"/><text x="58.1737%" y="255.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="59.0254%" y="229" width="0.1271%" height="15" fill="rgb(244,57,34)" fg:x="1393" fg:w="3"/><text x="59.2754%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="59.1525%" y="309" width="0.0424%" height="15" fill="rgb(214,203,32)" fg:x="1396" fg:w="1"/><text x="59.4025%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="59.1525%" y="293" width="0.0424%" height="15" fill="rgb(207,58,43)" fg:x="1396" fg:w="1"/><text x="59.4025%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="59.1525%" y="277" width="0.0424%" height="15" fill="rgb(215,193,15)" fg:x="1396" fg:w="1"/><text x="59.4025%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="59.7881%" y="229" width="0.0847%" height="15" fill="rgb(232,15,44)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="59.7881%" y="213" width="0.0847%" height="15" fill="rgb(212,3,48)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="59.7881%" y="197" width="0.0847%" height="15" fill="rgb(218,128,7)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="59.7881%" y="181" width="0.0847%" height="15" fill="rgb(226,216,39)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="59.7881%" y="165" width="0.0847%" height="15" fill="rgb(243,47,51)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="59.7881%" y="149" width="0.0847%" height="15" fill="rgb(241,183,40)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="59.7881%" y="133" width="0.0847%" height="15" fill="rgb(231,217,32)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="59.7881%" y="117" width="0.0847%" height="15" fill="rgb(229,61,38)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="59.7881%" y="101" width="0.0847%" height="15" fill="rgb(225,210,5)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="59.7881%" y="85" width="0.0847%" height="15" fill="rgb(231,79,45)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="95.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="59.7881%" y="69" width="0.0847%" height="15" fill="rgb(224,100,7)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="79.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="59.7881%" y="53" width="0.0847%" height="15" fill="rgb(241,198,18)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="59.7881%" y="37" width="0.0847%" height="15" fill="rgb(252,97,53)" fg:x="1411" fg:w="2"/><text x="60.0381%" y="47.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.30%)</title><rect x="59.8729%" y="229" width="0.2966%" height="15" fill="rgb(220,88,7)" fg:x="1413" fg:w="7"/><text x="60.1229%" y="239.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="60.0847%" y="213" width="0.0847%" height="15" fill="rgb(213,176,14)" fg:x="1418" fg:w="2"/><text x="60.3347%" y="223.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (22 samples, 0.93%)</title><rect x="59.2797%" y="277" width="0.9322%" height="15" fill="rgb(246,73,7)" fg:x="1399" fg:w="22"/><text x="59.5297%" y="287.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (19 samples, 0.81%)</title><rect x="59.4068%" y="261" width="0.8051%" height="15" fill="rgb(245,64,36)" fg:x="1402" fg:w="19"/><text x="59.6568%" y="271.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (14 samples, 0.59%)</title><rect x="59.6186%" y="245" width="0.5932%" height="15" fill="rgb(245,80,10)" fg:x="1407" fg:w="14"/><text x="59.8686%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="60.1695%" y="229" width="0.0424%" height="15" fill="rgb(232,107,50)" fg:x="1420" fg:w="1"/><text x="60.4195%" y="239.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="61.4831%" y="133" width="0.0424%" height="15" fill="rgb(253,3,0)" fg:x="1451" fg:w="1"/><text x="61.7331%" y="143.50"></text></g><g><title>_int_malloc (26 samples, 1.10%)</title><rect x="60.5932%" y="149" width="1.1017%" height="15" fill="rgb(212,99,53)" fg:x="1430" fg:w="26"/><text x="60.8432%" y="159.50"></text></g><g><title>tcache_put (4 samples, 0.17%)</title><rect x="61.5254%" y="133" width="0.1695%" height="15" fill="rgb(249,111,54)" fg:x="1452" fg:w="4"/><text x="61.7754%" y="143.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="61.6949%" y="149" width="0.0424%" height="15" fill="rgb(249,55,30)" fg:x="1456" fg:w="1"/><text x="61.9449%" y="159.50"></text></g><g><title>checked_request2size (7 samples, 0.30%)</title><rect x="61.7373%" y="149" width="0.2966%" height="15" fill="rgb(237,47,42)" fg:x="1457" fg:w="7"/><text x="61.9873%" y="159.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (73 samples, 3.09%)</title><rect x="59.1949%" y="309" width="3.0932%" height="15" fill="rgb(211,20,18)" fg:x="1397" fg:w="73"/><text x="59.4449%" y="319.50">&lt;rl..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 3.01%)</title><rect x="59.2797%" y="293" width="3.0085%" height="15" fill="rgb(231,203,46)" fg:x="1399" fg:w="71"/><text x="59.5297%" y="303.50">&lt;al..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (49 samples, 2.08%)</title><rect x="60.2119%" y="277" width="2.0763%" height="15" fill="rgb(237,142,3)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="287.50">a..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (49 samples, 2.08%)</title><rect x="60.2119%" y="261" width="2.0763%" height="15" fill="rgb(241,107,1)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="271.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 2.08%)</title><rect x="60.2119%" y="245" width="2.0763%" height="15" fill="rgb(229,83,13)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="255.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 2.08%)</title><rect x="60.2119%" y="229" width="2.0763%" height="15" fill="rgb(241,91,40)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="239.50">a..</text></g><g><title>alloc::alloc::alloc (49 samples, 2.08%)</title><rect x="60.2119%" y="213" width="2.0763%" height="15" fill="rgb(225,3,45)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="223.50">a..</text></g><g><title>__rdl_alloc (49 samples, 2.08%)</title><rect x="60.2119%" y="197" width="2.0763%" height="15" fill="rgb(244,223,14)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="207.50">_..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (49 samples, 2.08%)</title><rect x="60.2119%" y="181" width="2.0763%" height="15" fill="rgb(224,124,37)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="191.50">s..</text></g><g><title>__GI___libc_malloc (49 samples, 2.08%)</title><rect x="60.2119%" y="165" width="2.0763%" height="15" fill="rgb(251,171,30)" fg:x="1421" fg:w="49"/><text x="60.4619%" y="175.50">_..</text></g><g><title>tcache_get (6 samples, 0.25%)</title><rect x="62.0339%" y="149" width="0.2542%" height="15" fill="rgb(236,46,54)" fg:x="1464" fg:w="6"/><text x="62.2839%" y="159.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="62.7966%" y="165" width="0.1271%" height="15" fill="rgb(245,213,5)" fg:x="1482" fg:w="3"/><text x="63.0466%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.76%)</title><rect x="62.3305%" y="261" width="0.7627%" height="15" fill="rgb(230,144,27)" fg:x="1471" fg:w="18"/><text x="62.5805%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.76%)</title><rect x="62.3305%" y="245" width="0.7627%" height="15" fill="rgb(220,86,6)" fg:x="1471" fg:w="18"/><text x="62.5805%" y="255.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.68%)</title><rect x="62.4153%" y="229" width="0.6780%" height="15" fill="rgb(240,20,13)" fg:x="1473" fg:w="16"/><text x="62.6653%" y="239.50"></text></g><g><title>__rdl_alloc (16 samples, 0.68%)</title><rect x="62.4153%" y="213" width="0.6780%" height="15" fill="rgb(217,89,34)" fg:x="1473" fg:w="16"/><text x="62.6653%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (16 samples, 0.68%)</title><rect x="62.4153%" y="197" width="0.6780%" height="15" fill="rgb(229,13,5)" fg:x="1473" fg:w="16"/><text x="62.6653%" y="207.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.64%)</title><rect x="62.4576%" y="181" width="0.6356%" height="15" fill="rgb(244,67,35)" fg:x="1474" fg:w="15"/><text x="62.7076%" y="191.50"></text></g><g><title>tcache_get (4 samples, 0.17%)</title><rect x="62.9237%" y="165" width="0.1695%" height="15" fill="rgb(221,40,2)" fg:x="1485" fg:w="4"/><text x="63.1737%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.85%)</title><rect x="62.2881%" y="309" width="0.8475%" height="15" fill="rgb(237,157,21)" fg:x="1470" fg:w="20"/><text x="62.5381%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.85%)</title><rect x="62.2881%" y="293" width="0.8475%" height="15" fill="rgb(222,94,11)" fg:x="1470" fg:w="20"/><text x="62.5381%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.85%)</title><rect x="62.2881%" y="277" width="0.8475%" height="15" fill="rgb(249,113,6)" fg:x="1470" fg:w="20"/><text x="62.5381%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="63.0932%" y="261" width="0.0424%" height="15" fill="rgb(238,137,36)" fg:x="1489" fg:w="1"/><text x="63.3432%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="63.0932%" y="245" width="0.0424%" height="15" fill="rgb(210,102,26)" fg:x="1489" fg:w="1"/><text x="63.3432%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (185 samples, 7.84%)</title><rect x="55.9746%" y="453" width="7.8390%" height="15" fill="rgb(218,30,30)" fg:x="1321" fg:w="185"/><text x="56.2246%" y="463.50">&lt;core::opti..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (185 samples, 7.84%)</title><rect x="55.9746%" y="437" width="7.8390%" height="15" fill="rgb(214,67,26)" fg:x="1321" fg:w="185"/><text x="56.2246%" y="447.50">&lt;rlox::pars..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (185 samples, 7.84%)</title><rect x="55.9746%" y="421" width="7.8390%" height="15" fill="rgb(251,9,53)" fg:x="1321" fg:w="185"/><text x="56.2246%" y="431.50">&lt;alloc::box..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (185 samples, 7.84%)</title><rect x="55.9746%" y="405" width="7.8390%" height="15" fill="rgb(228,204,25)" fg:x="1321" fg:w="185"/><text x="56.2246%" y="415.50">&lt;T as alloc..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (185 samples, 7.84%)</title><rect x="55.9746%" y="389" width="7.8390%" height="15" fill="rgb(207,153,8)" fg:x="1321" fg:w="185"/><text x="56.2246%" y="399.50">&lt;rlox::pars..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 4.66%)</title><rect x="59.1525%" y="373" width="4.6610%" height="15" fill="rgb(242,9,16)" fg:x="1396" fg:w="110"/><text x="59.4025%" y="383.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (110 samples, 4.66%)</title><rect x="59.1525%" y="357" width="4.6610%" height="15" fill="rgb(217,211,10)" fg:x="1396" fg:w="110"/><text x="59.4025%" y="367.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (110 samples, 4.66%)</title><rect x="59.1525%" y="341" width="4.6610%" height="15" fill="rgb(219,228,52)" fg:x="1396" fg:w="110"/><text x="59.4025%" y="351.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (110 samples, 4.66%)</title><rect x="59.1525%" y="325" width="4.6610%" height="15" fill="rgb(231,92,29)" fg:x="1396" fg:w="110"/><text x="59.4025%" y="335.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.68%)</title><rect x="63.1356%" y="309" width="0.6780%" height="15" fill="rgb(232,8,23)" fg:x="1490" fg:w="16"/><text x="63.3856%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="63.9831%" y="373" width="0.0424%" height="15" fill="rgb(216,211,34)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="63.9831%" y="357" width="0.0424%" height="15" fill="rgb(236,151,0)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="63.9831%" y="341" width="0.0424%" height="15" fill="rgb(209,168,3)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="63.9831%" y="325" width="0.0424%" height="15" fill="rgb(208,129,28)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="63.9831%" y="309" width="0.0424%" height="15" fill="rgb(229,78,22)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="63.9831%" y="293" width="0.0424%" height="15" fill="rgb(228,187,13)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="63.9831%" y="277" width="0.0424%" height="15" fill="rgb(240,119,24)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="63.9831%" y="261" width="0.0424%" height="15" fill="rgb(209,194,42)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="63.9831%" y="245" width="0.0424%" height="15" fill="rgb(247,200,46)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="63.9831%" y="229" width="0.0424%" height="15" fill="rgb(218,76,16)" fg:x="1510" fg:w="1"/><text x="64.2331%" y="239.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="64.0254%" y="373" width="0.1695%" height="15" fill="rgb(225,21,48)" fg:x="1511" fg:w="4"/><text x="64.2754%" y="383.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="64.0678%" y="357" width="0.1271%" height="15" fill="rgb(239,223,50)" fg:x="1512" fg:w="3"/><text x="64.3178%" y="367.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="64.1949%" y="373" width="0.0424%" height="15" fill="rgb(244,45,21)" fg:x="1515" fg:w="1"/><text x="64.4449%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (266 samples, 11.27%)</title><rect x="53.0932%" y="533" width="11.2712%" height="15" fill="rgb(232,33,43)" fg:x="1253" fg:w="266"/><text x="53.3432%" y="543.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (266 samples, 11.27%)</title><rect x="53.0932%" y="517" width="11.2712%" height="15" fill="rgb(209,8,3)" fg:x="1253" fg:w="266"/><text x="53.3432%" y="527.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (266 samples, 11.27%)</title><rect x="53.0932%" y="501" width="11.2712%" height="15" fill="rgb(214,25,53)" fg:x="1253" fg:w="266"/><text x="53.3432%" y="511.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (266 samples, 11.27%)</title><rect x="53.0932%" y="485" width="11.2712%" height="15" fill="rgb(254,186,54)" fg:x="1253" fg:w="266"/><text x="53.3432%" y="495.50">&lt;T as alloc::slic..</text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (266 samples, 11.27%)</title><rect x="53.0932%" y="469" width="11.2712%" height="15" fill="rgb(208,174,49)" fg:x="1253" fg:w="266"/><text x="53.3432%" y="479.50">&lt;rlox::parser::St..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (13 samples, 0.55%)</title><rect x="63.8136%" y="453" width="0.5508%" height="15" fill="rgb(233,191,51)" fg:x="1506" fg:w="13"/><text x="64.0636%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.55%)</title><rect x="63.8136%" y="437" width="0.5508%" height="15" fill="rgb(222,134,10)" fg:x="1506" fg:w="13"/><text x="64.0636%" y="447.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.55%)</title><rect x="63.8136%" y="421" width="0.5508%" height="15" fill="rgb(230,226,20)" fg:x="1506" fg:w="13"/><text x="64.0636%" y="431.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (13 samples, 0.55%)</title><rect x="63.8136%" y="405" width="0.5508%" height="15" fill="rgb(251,111,25)" fg:x="1506" fg:w="13"/><text x="64.0636%" y="415.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (11 samples, 0.47%)</title><rect x="63.8983%" y="389" width="0.4661%" height="15" fill="rgb(224,40,46)" fg:x="1508" fg:w="11"/><text x="64.1483%" y="399.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (3 samples, 0.13%)</title><rect x="64.2373%" y="373" width="0.1271%" height="15" fill="rgb(236,108,47)" fg:x="1516" fg:w="3"/><text x="64.4873%" y="383.50"></text></g><g><title>rlox::environ::Environ::define (2 samples, 0.08%)</title><rect x="64.3644%" y="533" width="0.0847%" height="15" fill="rgb(234,93,0)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.08%)</title><rect x="64.3644%" y="517" width="0.0847%" height="15" fill="rgb(224,213,32)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.08%)</title><rect x="64.3644%" y="501" width="0.0847%" height="15" fill="rgb(251,11,48)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.08%)</title><rect x="64.3644%" y="485" width="0.0847%" height="15" fill="rgb(236,173,5)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="64.3644%" y="469" width="0.0847%" height="15" fill="rgb(230,95,12)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.08%)</title><rect x="64.3644%" y="453" width="0.0847%" height="15" fill="rgb(232,209,1)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.08%)</title><rect x="64.3644%" y="437" width="0.0847%" height="15" fill="rgb(232,6,1)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.08%)</title><rect x="64.3644%" y="421" width="0.0847%" height="15" fill="rgb(210,224,50)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.08%)</title><rect x="64.3644%" y="405" width="0.0847%" height="15" fill="rgb(228,127,35)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.08%)</title><rect x="64.3644%" y="389" width="0.0847%" height="15" fill="rgb(245,102,45)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.08%)</title><rect x="64.3644%" y="373" width="0.0847%" height="15" fill="rgb(214,1,49)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.08%)</title><rect x="64.3644%" y="357" width="0.0847%" height="15" fill="rgb(226,163,40)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="64.3644%" y="341" width="0.0847%" height="15" fill="rgb(239,212,28)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="64.3644%" y="325" width="0.0847%" height="15" fill="rgb(220,20,13)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="64.3644%" y="309" width="0.0847%" height="15" fill="rgb(210,164,35)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="319.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="64.3644%" y="293" width="0.0847%" height="15" fill="rgb(248,109,41)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="64.3644%" y="277" width="0.0847%" height="15" fill="rgb(238,23,50)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="287.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.08%)</title><rect x="64.3644%" y="261" width="0.0847%" height="15" fill="rgb(211,48,49)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="271.50"></text></g><g><title>_int_malloc (2 samples, 0.08%)</title><rect x="64.3644%" y="245" width="0.0847%" height="15" fill="rgb(223,36,21)" fg:x="1519" fg:w="2"/><text x="64.6144%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.42%)</title><rect x="64.6610%" y="517" width="0.4237%" height="15" fill="rgb(207,123,46)" fg:x="1526" fg:w="10"/><text x="64.9110%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.42%)</title><rect x="64.6610%" y="501" width="0.4237%" height="15" fill="rgb(240,218,32)" fg:x="1526" fg:w="10"/><text x="64.9110%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.42%)</title><rect x="64.6610%" y="485" width="0.4237%" height="15" fill="rgb(252,5,43)" fg:x="1526" fg:w="10"/><text x="64.9110%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (21 samples, 0.89%)</title><rect x="65.0847%" y="517" width="0.8898%" height="15" fill="rgb(252,84,19)" fg:x="1536" fg:w="21"/><text x="65.3347%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.89%)</title><rect x="65.0847%" y="501" width="0.8898%" height="15" fill="rgb(243,152,39)" fg:x="1536" fg:w="21"/><text x="65.3347%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.85%)</title><rect x="65.1271%" y="485" width="0.8475%" height="15" fill="rgb(234,160,15)" fg:x="1537" fg:w="20"/><text x="65.3771%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.85%)</title><rect x="65.1271%" y="469" width="0.8475%" height="15" fill="rgb(237,34,20)" fg:x="1537" fg:w="20"/><text x="65.3771%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rlox::parser::Stmt,alloc::alloc::Global&gt;&gt; (9 samples, 0.38%)</title><rect x="65.9746%" y="485" width="0.3814%" height="15" fill="rgb(229,97,13)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="65.9746%" y="469" width="0.3814%" height="15" fill="rgb(234,71,50)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Stmt&gt;&gt; (9 samples, 0.38%)</title><rect x="65.9746%" y="453" width="0.3814%" height="15" fill="rgb(253,155,4)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="65.9746%" y="437" width="0.3814%" height="15" fill="rgb(222,185,37)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.38%)</title><rect x="65.9746%" y="421" width="0.3814%" height="15" fill="rgb(251,177,13)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.38%)</title><rect x="65.9746%" y="405" width="0.3814%" height="15" fill="rgb(250,179,40)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="415.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.38%)</title><rect x="65.9746%" y="389" width="0.3814%" height="15" fill="rgb(242,44,2)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.38%)</title><rect x="65.9746%" y="373" width="0.3814%" height="15" fill="rgb(216,177,13)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="383.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="65.9746%" y="357" width="0.3814%" height="15" fill="rgb(216,106,43)" fg:x="1557" fg:w="9"/><text x="66.2246%" y="367.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="66.0593%" y="341" width="0.2966%" height="15" fill="rgb(216,183,2)" fg:x="1559" fg:w="7"/><text x="66.3093%" y="351.50"></text></g><g><title>__GI___libc_free (4 samples, 0.17%)</title><rect x="66.3983%" y="469" width="0.1695%" height="15" fill="rgb(249,75,3)" fg:x="1567" fg:w="4"/><text x="66.6483%" y="479.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="66.3983%" y="453" width="0.1695%" height="15" fill="rgb(219,67,39)" fg:x="1567" fg:w="4"/><text x="66.6483%" y="463.50"></text></g><g><title>__GI___libc_free (17 samples, 0.72%)</title><rect x="66.6102%" y="453" width="0.7203%" height="15" fill="rgb(253,228,2)" fg:x="1572" fg:w="17"/><text x="66.8602%" y="463.50"></text></g><g><title>_int_free (13 samples, 0.55%)</title><rect x="66.7797%" y="437" width="0.5508%" height="15" fill="rgb(235,138,27)" fg:x="1576" fg:w="13"/><text x="67.0297%" y="447.50"></text></g><g><title>__GI___libc_free (10 samples, 0.42%)</title><rect x="67.3305%" y="421" width="0.4237%" height="15" fill="rgb(236,97,51)" fg:x="1589" fg:w="10"/><text x="67.5805%" y="431.50"></text></g><g><title>_int_free (10 samples, 0.42%)</title><rect x="67.3305%" y="405" width="0.4237%" height="15" fill="rgb(240,80,30)" fg:x="1589" fg:w="10"/><text x="67.5805%" y="415.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="67.7119%" y="389" width="0.0424%" height="15" fill="rgb(230,178,19)" fg:x="1598" fg:w="1"/><text x="67.9619%" y="399.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.13%)</title><rect x="67.7542%" y="421" width="0.1271%" height="15" fill="rgb(210,190,27)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.13%)</title><rect x="67.7542%" y="405" width="0.1271%" height="15" fill="rgb(222,107,31)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="67.7542%" y="389" width="0.1271%" height="15" fill="rgb(216,127,34)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="399.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="67.7542%" y="373" width="0.1271%" height="15" fill="rgb(234,116,52)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="67.7542%" y="357" width="0.1271%" height="15" fill="rgb(222,124,15)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="367.50"></text></g><g><title>__GI___libc_free (3 samples, 0.13%)</title><rect x="67.7542%" y="341" width="0.1271%" height="15" fill="rgb(231,179,28)" fg:x="1599" fg:w="3"/><text x="68.0042%" y="351.50"></text></g><g><title>_int_free (2 samples, 0.08%)</title><rect x="67.7966%" y="325" width="0.0847%" height="15" fill="rgb(226,93,45)" fg:x="1600" fg:w="2"/><text x="68.0466%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;rlox::parser::Expression&gt;&gt; (19 samples, 0.81%)</title><rect x="67.3305%" y="437" width="0.8051%" height="15" fill="rgb(215,8,51)" fg:x="1589" fg:w="19"/><text x="67.5805%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (6 samples, 0.25%)</title><rect x="67.8814%" y="421" width="0.2542%" height="15" fill="rgb(223,106,5)" fg:x="1602" fg:w="6"/><text x="68.1314%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (3 samples, 0.13%)</title><rect x="68.0085%" y="405" width="0.1271%" height="15" fill="rgb(250,191,5)" fg:x="1605" fg:w="3"/><text x="68.2585%" y="415.50"></text></g><g><title>_int_free (2 samples, 0.08%)</title><rect x="68.2203%" y="373" width="0.0847%" height="15" fill="rgb(242,132,44)" fg:x="1610" fg:w="2"/><text x="68.4703%" y="383.50"></text></g><g><title>__GI___libc_free (4 samples, 0.17%)</title><rect x="68.1780%" y="389" width="0.1695%" height="15" fill="rgb(251,152,29)" fg:x="1609" fg:w="4"/><text x="68.4280%" y="399.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="68.3051%" y="373" width="0.0424%" height="15" fill="rgb(218,179,5)" fg:x="1612" fg:w="1"/><text x="68.5551%" y="383.50"></text></g><g><title>_int_free (13 samples, 0.55%)</title><rect x="68.6864%" y="357" width="0.5508%" height="15" fill="rgb(227,67,19)" fg:x="1621" fg:w="13"/><text x="68.9364%" y="367.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="69.1949%" y="341" width="0.0424%" height="15" fill="rgb(233,119,31)" fg:x="1633" fg:w="1"/><text x="69.4449%" y="351.50"></text></g><g><title>__GI___libc_free (23 samples, 0.97%)</title><rect x="68.3475%" y="373" width="0.9746%" height="15" fill="rgb(241,120,22)" fg:x="1613" fg:w="23"/><text x="68.5975%" y="383.50"></text></g><g><title>arena_for_chunk (2 samples, 0.08%)</title><rect x="69.2373%" y="357" width="0.0847%" height="15" fill="rgb(224,102,30)" fg:x="1634" fg:w="2"/><text x="69.4873%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rlox::parser::Stmt&gt;&gt; (86 samples, 3.64%)</title><rect x="65.9746%" y="517" width="3.6441%" height="15" fill="rgb(210,164,37)" fg:x="1557" fg:w="86"/><text x="66.2246%" y="527.50">core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 3.64%)</title><rect x="65.9746%" y="501" width="3.6441%" height="15" fill="rgb(226,191,16)" fg:x="1557" fg:w="86"/><text x="66.2246%" y="511.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (77 samples, 3.26%)</title><rect x="66.3559%" y="485" width="3.2627%" height="15" fill="rgb(214,40,45)" fg:x="1566" fg:w="77"/><text x="66.6059%" y="495.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (72 samples, 3.05%)</title><rect x="66.5678%" y="469" width="3.0508%" height="15" fill="rgb(244,29,26)" fg:x="1571" fg:w="72"/><text x="66.8178%" y="479.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (54 samples, 2.29%)</title><rect x="67.3305%" y="453" width="2.2881%" height="15" fill="rgb(216,16,5)" fg:x="1589" fg:w="54"/><text x="67.5805%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Expression&gt;&gt; (35 samples, 1.48%)</title><rect x="68.1356%" y="437" width="1.4831%" height="15" fill="rgb(249,76,35)" fg:x="1608" fg:w="35"/><text x="68.3856%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 1.48%)</title><rect x="68.1356%" y="421" width="1.4831%" height="15" fill="rgb(207,11,44)" fg:x="1608" fg:w="35"/><text x="68.3856%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Expression]&gt; (35 samples, 1.48%)</title><rect x="68.1356%" y="405" width="1.4831%" height="15" fill="rgb(228,190,49)" fg:x="1608" fg:w="35"/><text x="68.3856%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (30 samples, 1.27%)</title><rect x="68.3475%" y="389" width="1.2712%" height="15" fill="rgb(214,173,12)" fg:x="1613" fg:w="30"/><text x="68.5975%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (7 samples, 0.30%)</title><rect x="69.3220%" y="373" width="0.2966%" height="15" fill="rgb(218,26,35)" fg:x="1636" fg:w="7"/><text x="69.5720%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (3 samples, 0.13%)</title><rect x="69.4915%" y="357" width="0.1271%" height="15" fill="rgb(220,200,19)" fg:x="1640" fg:w="3"/><text x="69.7415%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.55%)</title><rect x="70.3390%" y="485" width="0.5508%" height="15" fill="rgb(239,95,49)" fg:x="1660" fg:w="13"/><text x="70.5890%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.47%)</title><rect x="70.4237%" y="469" width="0.4661%" height="15" fill="rgb(235,85,53)" fg:x="1662" fg:w="11"/><text x="70.6737%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.47%)</title><rect x="70.4237%" y="453" width="0.4661%" height="15" fill="rgb(233,133,31)" fg:x="1662" fg:w="11"/><text x="70.6737%" y="463.50"></text></g><g><title>free_perturb (1 samples, 0.04%)</title><rect x="71.3983%" y="421" width="0.0424%" height="15" fill="rgb(218,25,20)" fg:x="1685" fg:w="1"/><text x="71.6483%" y="431.50"></text></g><g><title>_int_free (9 samples, 0.38%)</title><rect x="71.1017%" y="437" width="0.3814%" height="15" fill="rgb(252,210,38)" fg:x="1678" fg:w="9"/><text x="71.3517%" y="447.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="71.4407%" y="421" width="0.0424%" height="15" fill="rgb(242,134,21)" fg:x="1686" fg:w="1"/><text x="71.6907%" y="431.50"></text></g><g><title>__GI___libc_free (14 samples, 0.59%)</title><rect x="70.9322%" y="453" width="0.5932%" height="15" fill="rgb(213,28,48)" fg:x="1674" fg:w="14"/><text x="71.1822%" y="463.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="71.4831%" y="437" width="0.0424%" height="15" fill="rgb(250,196,2)" fg:x="1687" fg:w="1"/><text x="71.7331%" y="447.50"></text></g><g><title>core::mem::drop (15 samples, 0.64%)</title><rect x="71.5254%" y="437" width="0.6356%" height="15" fill="rgb(227,5,17)" fg:x="1688" fg:w="15"/><text x="71.7754%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (15 samples, 0.64%)</title><rect x="71.5254%" y="421" width="0.6356%" height="15" fill="rgb(221,226,24)" fg:x="1688" fg:w="15"/><text x="71.7754%" y="431.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.64%)</title><rect x="71.5254%" y="405" width="0.6356%" height="15" fill="rgb(211,5,48)" fg:x="1688" fg:w="15"/><text x="71.7754%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.59%)</title><rect x="71.5678%" y="389" width="0.5932%" height="15" fill="rgb(219,150,6)" fg:x="1689" fg:w="14"/><text x="71.8178%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.59%)</title><rect x="71.5678%" y="373" width="0.5932%" height="15" fill="rgb(251,46,16)" fg:x="1689" fg:w="14"/><text x="71.8178%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt;&gt; (7 samples, 0.30%)</title><rect x="72.1610%" y="389" width="0.2966%" height="15" fill="rgb(220,204,40)" fg:x="1703" fg:w="7"/><text x="72.4110%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (7 samples, 0.30%)</title><rect x="72.1610%" y="373" width="0.2966%" height="15" fill="rgb(211,85,2)" fg:x="1703" fg:w="7"/><text x="72.4110%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.30%)</title><rect x="72.1610%" y="357" width="0.2966%" height="15" fill="rgb(229,17,7)" fg:x="1703" fg:w="7"/><text x="72.4110%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.30%)</title><rect x="72.1610%" y="341" width="0.2966%" height="15" fill="rgb(239,72,28)" fg:x="1703" fg:w="7"/><text x="72.4110%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.30%)</title><rect x="72.1610%" y="325" width="0.2966%" height="15" fill="rgb(230,47,54)" fg:x="1703" fg:w="7"/><text x="72.4110%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="72.4576%" y="309" width="0.0424%" height="15" fill="rgb(214,50,8)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.04%)</title><rect x="72.4576%" y="293" width="0.0424%" height="15" fill="rgb(216,198,43)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.04%)</title><rect x="72.4576%" y="277" width="0.0424%" height="15" fill="rgb(234,20,35)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="72.4576%" y="261" width="0.0424%" height="15" fill="rgb(254,45,19)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="271.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.04%)</title><rect x="72.4576%" y="245" width="0.0424%" height="15" fill="rgb(219,14,44)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.04%)</title><rect x="72.4576%" y="229" width="0.0424%" height="15" fill="rgb(217,220,26)" fg:x="1710" fg:w="1"/><text x="72.7076%" y="239.50"></text></g><g><title>_int_free (6 samples, 0.25%)</title><rect x="72.5847%" y="117" width="0.2542%" height="15" fill="rgb(213,158,28)" fg:x="1713" fg:w="6"/><text x="72.8347%" y="127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.38%)</title><rect x="72.5000%" y="309" width="0.3814%" height="15" fill="rgb(252,51,52)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (9 samples, 0.38%)</title><rect x="72.5000%" y="293" width="0.3814%" height="15" fill="rgb(246,89,16)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,rlox::interpreter::LoxValue)&gt; (9 samples, 0.38%)</title><rect x="72.5000%" y="277" width="0.3814%" height="15" fill="rgb(216,158,49)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.38%)</title><rect x="72.5000%" y="261" width="0.3814%" height="15" fill="rgb(236,107,19)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.38%)</title><rect x="72.5000%" y="245" width="0.3814%" height="15" fill="rgb(228,185,30)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.38%)</title><rect x="72.5000%" y="229" width="0.3814%" height="15" fill="rgb(246,134,8)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="72.5000%" y="213" width="0.3814%" height="15" fill="rgb(214,143,50)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.38%)</title><rect x="72.5000%" y="197" width="0.3814%" height="15" fill="rgb(228,75,8)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.38%)</title><rect x="72.5000%" y="181" width="0.3814%" height="15" fill="rgb(207,175,4)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="191.50"></text></g><g><title>__rdl_dealloc (9 samples, 0.38%)</title><rect x="72.5000%" y="165" width="0.3814%" height="15" fill="rgb(205,108,24)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9 samples, 0.38%)</title><rect x="72.5000%" y="149" width="0.3814%" height="15" fill="rgb(244,120,49)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="159.50"></text></g><g><title>__GI___libc_free (9 samples, 0.38%)</title><rect x="72.5000%" y="133" width="0.3814%" height="15" fill="rgb(223,47,38)" fg:x="1711" fg:w="9"/><text x="72.7500%" y="143.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="72.8390%" y="117" width="0.0424%" height="15" fill="rgb(229,179,11)" fg:x="1719" fg:w="1"/><text x="73.0890%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.04%)</title><rect x="72.8814%" y="309" width="0.0424%" height="15" fill="rgb(231,122,1)" fg:x="1720" fg:w="1"/><text x="73.1314%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="72.8814%" y="293" width="0.0424%" height="15" fill="rgb(245,119,9)" fg:x="1720" fg:w="1"/><text x="73.1314%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.13%)</title><rect x="72.9237%" y="293" width="0.1271%" height="15" fill="rgb(241,163,25)" fg:x="1721" fg:w="3"/><text x="73.1737%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.13%)</title><rect x="72.9237%" y="277" width="0.1271%" height="15" fill="rgb(217,214,3)" fg:x="1721" fg:w="3"/><text x="73.1737%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (15 samples, 0.64%)</title><rect x="72.4576%" y="325" width="0.6356%" height="15" fill="rgb(240,86,28)" fg:x="1710" fg:w="15"/><text x="72.7076%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.17%)</title><rect x="72.9237%" y="309" width="0.1695%" height="15" fill="rgb(215,47,9)" fg:x="1721" fg:w="4"/><text x="73.1737%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.04%)</title><rect x="73.0508%" y="293" width="0.0424%" height="15" fill="rgb(252,25,45)" fg:x="1724" fg:w="1"/><text x="73.3008%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.51%)</title><rect x="73.0932%" y="293" width="0.5085%" height="15" fill="rgb(251,164,9)" fg:x="1725" fg:w="12"/><text x="73.3432%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.51%)</title><rect x="73.0932%" y="277" width="0.5085%" height="15" fill="rgb(233,194,0)" fg:x="1725" fg:w="12"/><text x="73.3432%" y="287.50"></text></g><g><title>__rdl_dealloc (12 samples, 0.51%)</title><rect x="73.0932%" y="261" width="0.5085%" height="15" fill="rgb(249,111,24)" fg:x="1725" fg:w="12"/><text x="73.3432%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (12 samples, 0.51%)</title><rect x="73.0932%" y="245" width="0.5085%" height="15" fill="rgb(250,223,3)" fg:x="1725" fg:w="12"/><text x="73.3432%" y="255.50"></text></g><g><title>__GI___libc_free (12 samples, 0.51%)</title><rect x="73.0932%" y="229" width="0.5085%" height="15" fill="rgb(236,178,37)" fg:x="1725" fg:w="12"/><text x="73.3432%" y="239.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="73.4322%" y="213" width="0.1695%" height="15" fill="rgb(241,158,50)" fg:x="1733" fg:w="4"/><text x="73.6822%" y="223.50"></text></g><g><title>tcache_put (2 samples, 0.08%)</title><rect x="73.5169%" y="197" width="0.0847%" height="15" fill="rgb(213,121,41)" fg:x="1735" fg:w="2"/><text x="73.7669%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (50 samples, 2.12%)</title><rect x="71.5254%" y="453" width="2.1186%" height="15" fill="rgb(240,92,3)" fg:x="1688" fg:w="50"/><text x="71.7754%" y="463.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt; (35 samples, 1.48%)</title><rect x="72.1610%" y="437" width="1.4831%" height="15" fill="rgb(205,123,3)" fg:x="1703" fg:w="35"/><text x="72.4110%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rlox::environ::Environ&gt;&gt; (35 samples, 1.48%)</title><rect x="72.1610%" y="421" width="1.4831%" height="15" fill="rgb(205,97,47)" fg:x="1703" fg:w="35"/><text x="72.4110%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::environ::Environ&gt; (35 samples, 1.48%)</title><rect x="72.1610%" y="405" width="1.4831%" height="15" fill="rgb(247,152,14)" fg:x="1703" fg:w="35"/><text x="72.4110%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,rlox::interpreter::LoxValue&gt;&gt; (28 samples, 1.19%)</title><rect x="72.4576%" y="389" width="1.1864%" height="15" fill="rgb(248,195,53)" fg:x="1710" fg:w="28"/><text x="72.7076%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,rlox::interpreter::LoxValue,std::collections::hash::map::RandomState&gt;&gt; (28 samples, 1.19%)</title><rect x="72.4576%" y="373" width="1.1864%" height="15" fill="rgb(226,201,16)" fg:x="1710" fg:w="28"/><text x="72.7076%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,rlox::interpreter::LoxValue)&gt;&gt; (28 samples, 1.19%)</title><rect x="72.4576%" y="357" width="1.1864%" height="15" fill="rgb(205,98,0)" fg:x="1710" fg:w="28"/><text x="72.7076%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 1.19%)</title><rect x="72.4576%" y="341" width="1.1864%" height="15" fill="rgb(214,191,48)" fg:x="1710" fg:w="28"/><text x="72.7076%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (13 samples, 0.55%)</title><rect x="73.0932%" y="325" width="0.5508%" height="15" fill="rgb(237,112,39)" fg:x="1725" fg:w="13"/><text x="73.3432%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (13 samples, 0.55%)</title><rect x="73.0932%" y="309" width="0.5508%" height="15" fill="rgb(247,203,27)" fg:x="1725" fg:w="13"/><text x="73.3432%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::allocation_info (1 samples, 0.04%)</title><rect x="73.6017%" y="293" width="0.0424%" height="15" fill="rgb(235,124,28)" fg:x="1737" fg:w="1"/><text x="73.8517%" y="303.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.04%)</title><rect x="73.6017%" y="277" width="0.0424%" height="15" fill="rgb(208,207,46)" fg:x="1737" fg:w="1"/><text x="73.8517%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="73.6017%" y="261" width="0.0424%" height="15" fill="rgb(234,176,4)" fg:x="1737" fg:w="1"/><text x="73.8517%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="73.6017%" y="245" width="0.0424%" height="15" fill="rgb(230,133,28)" fg:x="1737" fg:w="1"/><text x="73.8517%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (102 samples, 4.32%)</title><rect x="69.6186%" y="517" width="4.3220%" height="15" fill="rgb(211,137,40)" fg:x="1643" fg:w="102"/><text x="69.8686%" y="527.50">core:..</text></g><g><title>rlox::interpreter::Interpreter::execute_block::{{closure}} (87 samples, 3.69%)</title><rect x="70.2542%" y="501" width="3.6864%" height="15" fill="rgb(254,35,13)" fg:x="1658" fg:w="87"/><text x="70.5042%" y="511.50">rlox..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (72 samples, 3.05%)</title><rect x="70.8898%" y="485" width="3.0508%" height="15" fill="rgb(225,49,51)" fg:x="1673" fg:w="72"/><text x="71.1398%" y="495.50">cor..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 3.05%)</title><rect x="70.8898%" y="469" width="3.0508%" height="15" fill="rgb(251,10,15)" fg:x="1673" fg:w="72"/><text x="71.1398%" y="479.50">&lt;al..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.30%)</title><rect x="73.6441%" y="453" width="0.2966%" height="15" fill="rgb(228,207,15)" fg:x="1738" fg:w="7"/><text x="73.8941%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.30%)</title><rect x="73.6441%" y="437" width="0.2966%" height="15" fill="rgb(241,99,19)" fg:x="1738" fg:w="7"/><text x="73.8941%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="74.2797%" y="501" width="0.0424%" height="15" fill="rgb(207,104,49)" fg:x="1753" fg:w="1"/><text x="74.5297%" y="511.50"></text></g><g><title>_int_free (9 samples, 0.38%)</title><rect x="74.4492%" y="485" width="0.3814%" height="15" fill="rgb(234,99,18)" fg:x="1757" fg:w="9"/><text x="74.6992%" y="495.50"></text></g><g><title>__GI___libc_free (13 samples, 0.55%)</title><rect x="74.3220%" y="501" width="0.5508%" height="15" fill="rgb(213,191,49)" fg:x="1754" fg:w="13"/><text x="74.5720%" y="511.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="74.8305%" y="485" width="0.0424%" height="15" fill="rgb(210,226,19)" fg:x="1766" fg:w="1"/><text x="75.0805%" y="495.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.42%)</title><rect x="74.8729%" y="501" width="0.4237%" height="15" fill="rgb(229,97,18)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.42%)</title><rect x="74.8729%" y="485" width="0.4237%" height="15" fill="rgb(211,167,15)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.42%)</title><rect x="74.8729%" y="469" width="0.4237%" height="15" fill="rgb(210,169,34)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="479.50"></text></g><g><title>__rdl_dealloc (10 samples, 0.42%)</title><rect x="74.8729%" y="453" width="0.4237%" height="15" fill="rgb(241,121,31)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (10 samples, 0.42%)</title><rect x="74.8729%" y="437" width="0.4237%" height="15" fill="rgb(232,40,11)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="447.50"></text></g><g><title>__GI___libc_free (10 samples, 0.42%)</title><rect x="74.8729%" y="421" width="0.4237%" height="15" fill="rgb(205,86,26)" fg:x="1767" fg:w="10"/><text x="75.1229%" y="431.50"></text></g><g><title>_int_free (6 samples, 0.25%)</title><rect x="75.0424%" y="405" width="0.2542%" height="15" fill="rgb(231,126,28)" fg:x="1771" fg:w="6"/><text x="75.2924%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.42%)</title><rect x="75.2966%" y="501" width="0.4237%" height="15" fill="rgb(219,221,18)" fg:x="1777" fg:w="10"/><text x="75.5466%" y="511.50"></text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (3 samples, 0.13%)</title><rect x="75.5932%" y="485" width="0.1271%" height="15" fill="rgb(211,40,0)" fg:x="1784" fg:w="3"/><text x="75.8432%" y="495.50"></text></g><g><title>__GI___libc_free (3 samples, 0.13%)</title><rect x="75.5932%" y="469" width="0.1271%" height="15" fill="rgb(239,85,43)" fg:x="1784" fg:w="3"/><text x="75.8432%" y="479.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="75.5932%" y="453" width="0.1271%" height="15" fill="rgb(231,55,21)" fg:x="1784" fg:w="3"/><text x="75.8432%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Expression&gt; (1 samples, 0.04%)</title><rect x="75.7627%" y="437" width="0.0424%" height="15" fill="rgb(225,184,43)" fg:x="1788" fg:w="1"/><text x="76.0127%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Literal&gt; (1 samples, 0.04%)</title><rect x="75.7627%" y="421" width="0.0424%" height="15" fill="rgb(251,158,41)" fg:x="1788" fg:w="1"/><text x="76.0127%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (3 samples, 0.13%)</title><rect x="75.7203%" y="501" width="0.1271%" height="15" fill="rgb(234,159,37)" fg:x="1787" fg:w="3"/><text x="75.9703%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlox::parser::Stmt&gt;&gt; (2 samples, 0.08%)</title><rect x="75.7627%" y="485" width="0.0847%" height="15" fill="rgb(216,204,22)" fg:x="1788" fg:w="2"/><text x="76.0127%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="75.7627%" y="469" width="0.0847%" height="15" fill="rgb(214,17,3)" fg:x="1788" fg:w="2"/><text x="76.0127%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (2 samples, 0.08%)</title><rect x="75.7627%" y="453" width="0.0847%" height="15" fill="rgb(212,111,17)" fg:x="1788" fg:w="2"/><text x="76.0127%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::parser::Stmt&gt; (1 samples, 0.04%)</title><rect x="75.8051%" y="437" width="0.0424%" height="15" fill="rgb(221,157,24)" fg:x="1789" fg:w="1"/><text x="76.0551%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (665 samples, 28.18%)</title><rect x="47.7119%" y="613" width="28.1780%" height="15" fill="rgb(252,16,13)" fg:x="1126" fg:w="665"/><text x="47.9619%" y="623.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (665 samples, 28.18%)</title><rect x="47.7119%" y="597" width="28.1780%" height="15" fill="rgb(221,62,2)" fg:x="1126" fg:w="665"/><text x="47.9619%" y="607.50">rlox::interpreter::Interpreter::execute::{{cl..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (665 samples, 28.18%)</title><rect x="47.7119%" y="581" width="28.1780%" height="15" fill="rgb(247,87,22)" fg:x="1126" fg:w="665"/><text x="47.9619%" y="591.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::Interpreter::evaluate (665 samples, 28.18%)</title><rect x="47.7119%" y="565" width="28.1780%" height="15" fill="rgb(215,73,9)" fg:x="1126" fg:w="665"/><text x="47.9619%" y="575.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (538 samples, 22.80%)</title><rect x="53.0932%" y="549" width="22.7966%" height="15" fill="rgb(207,175,33)" fg:x="1253" fg:w="538"/><text x="53.3432%" y="559.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (270 samples, 11.44%)</title><rect x="64.4492%" y="533" width="11.4407%" height="15" fill="rgb(243,129,54)" fg:x="1521" fg:w="270"/><text x="64.6992%" y="543.50">rlox::interpreter..</text></g><g><title>rlox::interpreter::Interpreter::execute (46 samples, 1.95%)</title><rect x="73.9407%" y="517" width="1.9492%" height="15" fill="rgb(227,119,45)" fg:x="1745" fg:w="46"/><text x="74.1907%" y="527.50">r..</text></g><g><title>rlox::interpreter::is_truthy (1 samples, 0.04%)</title><rect x="75.8475%" y="501" width="0.0424%" height="15" fill="rgb(205,109,36)" fg:x="1790" fg:w="1"/><text x="76.0975%" y="511.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (1,288 samples, 54.58%)</title><rect x="21.5254%" y="901" width="54.5763%" height="15" fill="rgb(205,6,39)" fg:x="508" fg:w="1288"/><text x="21.7754%" y="911.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (670 samples, 28.39%)</title><rect x="47.7119%" y="885" width="28.3898%" height="15" fill="rgb(221,32,16)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="895.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (670 samples, 28.39%)</title><rect x="47.7119%" y="869" width="28.3898%" height="15" fill="rgb(228,144,50)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="879.50">rlox::interpreter::Interpreter::execute_block</text></g><g><title>rlox::interpreter::Interpreter::execute (670 samples, 28.39%)</title><rect x="47.7119%" y="853" width="28.3898%" height="15" fill="rgb(229,201,53)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="863.50">rlox::interpreter::Interpreter::execute</text></g><g><title>core::option::Option&lt;T&gt;::map (670 samples, 28.39%)</title><rect x="47.7119%" y="837" width="28.3898%" height="15" fill="rgb(249,153,27)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="847.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (670 samples, 28.39%)</title><rect x="47.7119%" y="821" width="28.3898%" height="15" fill="rgb(227,106,25)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="831.50">rlox::interpreter::Interpreter::execute::{{clo..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (670 samples, 28.39%)</title><rect x="47.7119%" y="805" width="28.3898%" height="15" fill="rgb(230,65,29)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="815.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::Interpreter::evaluate (670 samples, 28.39%)</title><rect x="47.7119%" y="789" width="28.3898%" height="15" fill="rgb(221,57,46)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="799.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (670 samples, 28.39%)</title><rect x="47.7119%" y="773" width="28.3898%" height="15" fill="rgb(229,161,17)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="783.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (670 samples, 28.39%)</title><rect x="47.7119%" y="757" width="28.3898%" height="15" fill="rgb(222,213,11)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="767.50">rlox::interpreter::Interpreter::execute_block</text></g><g><title>rlox::interpreter::Interpreter::execute (670 samples, 28.39%)</title><rect x="47.7119%" y="741" width="28.3898%" height="15" fill="rgb(235,35,13)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="751.50">rlox::interpreter::Interpreter::execute</text></g><g><title>core::option::Option&lt;T&gt;::map (670 samples, 28.39%)</title><rect x="47.7119%" y="725" width="28.3898%" height="15" fill="rgb(233,158,34)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="735.50">core::option::Option&lt;T&gt;::map</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (670 samples, 28.39%)</title><rect x="47.7119%" y="709" width="28.3898%" height="15" fill="rgb(215,151,48)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="719.50">rlox::interpreter::Interpreter::execute::{{clo..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (670 samples, 28.39%)</title><rect x="47.7119%" y="693" width="28.3898%" height="15" fill="rgb(229,84,14)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="703.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::Interpreter::evaluate (670 samples, 28.39%)</title><rect x="47.7119%" y="677" width="28.3898%" height="15" fill="rgb(229,68,14)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="687.50">rlox::interpreter::Interpreter::evaluate</text></g><g><title>rlox::interpreter::LoxCallable::call (670 samples, 28.39%)</title><rect x="47.7119%" y="661" width="28.3898%" height="15" fill="rgb(243,106,26)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="671.50">rlox::interpreter::LoxCallable::call</text></g><g><title>rlox::interpreter::Interpreter::execute_block (670 samples, 28.39%)</title><rect x="47.7119%" y="645" width="28.3898%" height="15" fill="rgb(206,45,38)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="655.50">rlox::interpreter::Interpreter::execute_block</text></g><g><title>rlox::interpreter::Interpreter::execute (670 samples, 28.39%)</title><rect x="47.7119%" y="629" width="28.3898%" height="15" fill="rgb(226,6,15)" fg:x="1126" fg:w="670"/><text x="47.9619%" y="639.50">rlox::interpreter::Interpreter::execute</text></g><g><title>rlox::interpreter::Interpreter::execute (5 samples, 0.21%)</title><rect x="75.8898%" y="613" width="0.2119%" height="15" fill="rgb(232,22,54)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="623.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block (5 samples, 0.21%)</title><rect x="75.8898%" y="597" width="0.2119%" height="15" fill="rgb(229,222,32)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="607.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (5 samples, 0.21%)</title><rect x="75.8898%" y="581" width="0.2119%" height="15" fill="rgb(228,62,29)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.21%)</title><rect x="75.8898%" y="565" width="0.2119%" height="15" fill="rgb(251,103,34)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="575.50"></text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (5 samples, 0.21%)</title><rect x="75.8898%" y="549" width="0.2119%" height="15" fill="rgb(233,12,30)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="559.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (5 samples, 0.21%)</title><rect x="75.8898%" y="533" width="0.2119%" height="15" fill="rgb(238,52,0)" fg:x="1791" fg:w="5"/><text x="76.1398%" y="543.50"></text></g><g><title>_int_free (8 samples, 0.34%)</title><rect x="76.7373%" y="357" width="0.3390%" height="15" fill="rgb(223,98,5)" fg:x="1811" fg:w="8"/><text x="76.9873%" y="367.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="77.0339%" y="341" width="0.0424%" height="15" fill="rgb(228,75,37)" fg:x="1818" fg:w="1"/><text x="77.2839%" y="351.50"></text></g><g><title>__GI___libc_free (11 samples, 0.47%)</title><rect x="76.6949%" y="373" width="0.4661%" height="15" fill="rgb(205,115,49)" fg:x="1810" fg:w="11"/><text x="76.9449%" y="383.50"></text></g><g><title>arena_for_chunk (2 samples, 0.08%)</title><rect x="77.0763%" y="357" width="0.0847%" height="15" fill="rgb(250,154,43)" fg:x="1819" fg:w="2"/><text x="77.3263%" y="367.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.04%)</title><rect x="77.1610%" y="341" width="0.0424%" height="15" fill="rgb(226,43,29)" fg:x="1821" fg:w="1"/><text x="77.4110%" y="351.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="77.1610%" y="325" width="0.0424%" height="15" fill="rgb(249,228,39)" fg:x="1821" fg:w="1"/><text x="77.4110%" y="335.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="77.1610%" y="309" width="0.0424%" height="15" fill="rgb(216,79,43)" fg:x="1821" fg:w="1"/><text x="77.4110%" y="319.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="77.1610%" y="293" width="0.0424%" height="15" fill="rgb(228,95,12)" fg:x="1821" fg:w="1"/><text x="77.4110%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rlox::environ::Environ&gt;&gt; (6 samples, 0.25%)</title><rect x="77.1610%" y="373" width="0.2542%" height="15" fill="rgb(249,221,15)" fg:x="1821" fg:w="6"/><text x="77.4110%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.25%)</title><rect x="77.1610%" y="357" width="0.2542%" height="15" fill="rgb(233,34,13)" fg:x="1821" fg:w="6"/><text x="77.4110%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (5 samples, 0.21%)</title><rect x="77.2034%" y="341" width="0.2119%" height="15" fill="rgb(214,103,39)" fg:x="1822" fg:w="5"/><text x="77.4534%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.21%)</title><rect x="77.2034%" y="325" width="0.2119%" height="15" fill="rgb(251,126,39)" fg:x="1822" fg:w="5"/><text x="77.4534%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.21%)</title><rect x="77.2034%" y="309" width="0.2119%" height="15" fill="rgb(214,216,36)" fg:x="1822" fg:w="5"/><text x="77.4534%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="77.4153%" y="309" width="0.0424%" height="15" fill="rgb(220,221,8)" fg:x="1827" fg:w="1"/><text x="77.6653%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.42%)</title><rect x="77.5000%" y="245" width="0.4237%" height="15" fill="rgb(240,216,3)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="255.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (10 samples, 0.42%)</title><rect x="77.5000%" y="229" width="0.4237%" height="15" fill="rgb(232,218,17)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.42%)</title><rect x="77.5000%" y="213" width="0.4237%" height="15" fill="rgb(229,163,45)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (10 samples, 0.42%)</title><rect x="77.5000%" y="197" width="0.4237%" height="15" fill="rgb(231,110,42)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="207.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.42%)</title><rect x="77.5000%" y="181" width="0.4237%" height="15" fill="rgb(208,170,48)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.42%)</title><rect x="77.5000%" y="165" width="0.4237%" height="15" fill="rgb(239,116,25)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.42%)</title><rect x="77.5000%" y="149" width="0.4237%" height="15" fill="rgb(219,200,50)" fg:x="1829" fg:w="10"/><text x="77.7500%" y="159.50"></text></g><g><title>__memcmp_evex_movbe (8 samples, 0.34%)</title><rect x="77.5847%" y="133" width="0.3390%" height="15" fill="rgb(245,200,0)" fg:x="1831" fg:w="8"/><text x="77.8347%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (11 samples, 0.47%)</title><rect x="77.5000%" y="261" width="0.4661%" height="15" fill="rgb(245,119,33)" fg:x="1829" fg:w="11"/><text x="77.7500%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.04%)</title><rect x="77.9237%" y="245" width="0.0424%" height="15" fill="rgb(231,125,12)" fg:x="1839" fg:w="1"/><text x="78.1737%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.04%)</title><rect x="77.9237%" y="229" width="0.0424%" height="15" fill="rgb(216,96,41)" fg:x="1839" fg:w="1"/><text x="78.1737%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="77.9237%" y="213" width="0.0424%" height="15" fill="rgb(248,43,45)" fg:x="1839" fg:w="1"/><text x="78.1737%" y="223.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.04%)</title><rect x="77.9237%" y="197" width="0.0424%" height="15" fill="rgb(217,222,7)" fg:x="1839" fg:w="1"/><text x="78.1737%" y="207.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.04%)</title><rect x="77.9237%" y="181" width="0.0424%" height="15" fill="rgb(233,28,6)" fg:x="1839" fg:w="1"/><text x="78.1737%" y="191.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.13%)</title><rect x="77.9661%" y="261" width="0.1271%" height="15" fill="rgb(231,218,15)" fg:x="1840" fg:w="3"/><text x="78.2161%" y="271.50"></text></g><g><title>rlox::environ::Environ::get (17 samples, 0.72%)</title><rect x="77.4153%" y="373" width="0.7203%" height="15" fill="rgb(226,171,48)" fg:x="1827" fg:w="17"/><text x="77.6653%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.72%)</title><rect x="77.4153%" y="357" width="0.7203%" height="15" fill="rgb(235,201,9)" fg:x="1827" fg:w="17"/><text x="77.6653%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.72%)</title><rect x="77.4153%" y="341" width="0.7203%" height="15" fill="rgb(217,80,15)" fg:x="1827" fg:w="17"/><text x="77.6653%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.72%)</title><rect x="77.4153%" y="325" width="0.7203%" height="15" fill="rgb(219,152,8)" fg:x="1827" fg:w="17"/><text x="77.6653%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.68%)</title><rect x="77.4576%" y="309" width="0.6780%" height="15" fill="rgb(243,107,38)" fg:x="1828" fg:w="16"/><text x="77.7076%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.68%)</title><rect x="77.4576%" y="293" width="0.6780%" height="15" fill="rgb(231,17,5)" fg:x="1828" fg:w="16"/><text x="77.7076%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.68%)</title><rect x="77.4576%" y="277" width="0.6780%" height="15" fill="rgb(209,25,54)" fg:x="1828" fg:w="16"/><text x="77.7076%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="78.0932%" y="261" width="0.0424%" height="15" fill="rgb(219,0,2)" fg:x="1843" fg:w="1"/><text x="78.3432%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="78.0932%" y="245" width="0.0424%" height="15" fill="rgb(246,9,5)" fg:x="1843" fg:w="1"/><text x="78.3432%" y="255.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="78.1356%" y="357" width="0.0424%" height="15" fill="rgb(226,159,4)" fg:x="1844" fg:w="1"/><text x="78.3856%" y="367.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.04%)</title><rect x="78.1356%" y="341" width="0.0424%" height="15" fill="rgb(219,175,34)" fg:x="1844" fg:w="1"/><text x="78.3856%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (57 samples, 2.42%)</title><rect x="76.1864%" y="597" width="2.4153%" height="15" fill="rgb(236,10,46)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="607.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (57 samples, 2.42%)</title><rect x="76.1864%" y="581" width="2.4153%" height="15" fill="rgb(240,211,16)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="591.50">&lt;a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (57 samples, 2.42%)</title><rect x="76.1864%" y="565" width="2.4153%" height="15" fill="rgb(205,3,43)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="575.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (57 samples, 2.42%)</title><rect x="76.1864%" y="549" width="2.4153%" height="15" fill="rgb(245,7,22)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="559.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (57 samples, 2.42%)</title><rect x="76.1864%" y="533" width="2.4153%" height="15" fill="rgb(239,132,32)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="543.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (57 samples, 2.42%)</title><rect x="76.1864%" y="517" width="2.4153%" height="15" fill="rgb(228,202,34)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="527.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (57 samples, 2.42%)</title><rect x="76.1864%" y="501" width="2.4153%" height="15" fill="rgb(254,200,22)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="511.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 2.42%)</title><rect x="76.1864%" y="485" width="2.4153%" height="15" fill="rgb(219,10,39)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="495.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 2.42%)</title><rect x="76.1864%" y="469" width="2.4153%" height="15" fill="rgb(226,210,39)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="479.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (57 samples, 2.42%)</title><rect x="76.1864%" y="453" width="2.4153%" height="15" fill="rgb(208,219,16)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="463.50">co..</text></g><g><title>rlox::interpreter::Interpreter::evaluate::{{closure}} (57 samples, 2.42%)</title><rect x="76.1864%" y="437" width="2.4153%" height="15" fill="rgb(216,158,51)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="447.50">rl..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (57 samples, 2.42%)</title><rect x="76.1864%" y="421" width="2.4153%" height="15" fill="rgb(233,14,44)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="431.50">rl..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (57 samples, 2.42%)</title><rect x="76.1864%" y="405" width="2.4153%" height="15" fill="rgb(237,97,39)" fg:x="1798" fg:w="57"/><text x="76.4364%" y="415.50">rl..</text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (50 samples, 2.12%)</title><rect x="76.4831%" y="389" width="2.1186%" height="15" fill="rgb(218,198,43)" fg:x="1805" fg:w="50"/><text x="76.7331%" y="399.50">r..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.47%)</title><rect x="78.1356%" y="373" width="0.4661%" height="15" fill="rgb(231,104,20)" fg:x="1844" fg:w="11"/><text x="78.3856%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (10 samples, 0.42%)</title><rect x="78.1780%" y="357" width="0.4237%" height="15" fill="rgb(254,36,13)" fg:x="1845" fg:w="10"/><text x="78.4280%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.42%)</title><rect x="78.1780%" y="341" width="0.4237%" height="15" fill="rgb(248,14,50)" fg:x="1845" fg:w="10"/><text x="78.4280%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.42%)</title><rect x="78.1780%" y="325" width="0.4237%" height="15" fill="rgb(217,107,29)" fg:x="1845" fg:w="10"/><text x="78.4280%" y="335.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (19 samples, 0.81%)</title><rect x="78.7288%" y="293" width="0.8051%" height="15" fill="rgb(251,169,33)" fg:x="1858" fg:w="19"/><text x="78.9788%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.34%)</title><rect x="79.1949%" y="277" width="0.3390%" height="15" fill="rgb(217,108,32)" fg:x="1869" fg:w="8"/><text x="79.4449%" y="287.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="79.8729%" y="149" width="0.0424%" height="15" fill="rgb(219,66,42)" fg:x="1885" fg:w="1"/><text x="80.1229%" y="159.50"></text></g><g><title>__rdl_alloc (9 samples, 0.38%)</title><rect x="79.6610%" y="197" width="0.3814%" height="15" fill="rgb(206,180,7)" fg:x="1880" fg:w="9"/><text x="79.9110%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.38%)</title><rect x="79.6610%" y="181" width="0.3814%" height="15" fill="rgb(208,226,31)" fg:x="1880" fg:w="9"/><text x="79.9110%" y="191.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.38%)</title><rect x="79.6610%" y="165" width="0.3814%" height="15" fill="rgb(218,26,49)" fg:x="1880" fg:w="9"/><text x="79.9110%" y="175.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="79.9153%" y="149" width="0.1271%" height="15" fill="rgb(233,197,48)" fg:x="1886" fg:w="3"/><text x="80.1653%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.64%)</title><rect x="79.5339%" y="293" width="0.6356%" height="15" fill="rgb(252,181,51)" fg:x="1877" fg:w="15"/><text x="79.7839%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.64%)</title><rect x="79.5339%" y="277" width="0.6356%" height="15" fill="rgb(253,90,19)" fg:x="1877" fg:w="15"/><text x="79.7839%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.64%)</title><rect x="79.5339%" y="261" width="0.6356%" height="15" fill="rgb(215,171,30)" fg:x="1877" fg:w="15"/><text x="79.7839%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.51%)</title><rect x="79.6610%" y="245" width="0.5085%" height="15" fill="rgb(214,222,9)" fg:x="1880" fg:w="12"/><text x="79.9110%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.51%)</title><rect x="79.6610%" y="229" width="0.5085%" height="15" fill="rgb(223,3,22)" fg:x="1880" fg:w="12"/><text x="79.9110%" y="239.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.51%)</title><rect x="79.6610%" y="213" width="0.5085%" height="15" fill="rgb(225,196,46)" fg:x="1880" fg:w="12"/><text x="79.9110%" y="223.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.13%)</title><rect x="80.0424%" y="197" width="0.1271%" height="15" fill="rgb(209,110,37)" fg:x="1889" fg:w="3"/><text x="80.2924%" y="207.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 1.86%)</title><rect x="78.6017%" y="405" width="1.8644%" height="15" fill="rgb(249,89,12)" fg:x="1855" fg:w="44"/><text x="78.8517%" y="415.50">&lt;..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (44 samples, 1.86%)</title><rect x="78.6017%" y="389" width="1.8644%" height="15" fill="rgb(226,27,33)" fg:x="1855" fg:w="44"/><text x="78.8517%" y="399.50">&lt;..</text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (44 samples, 1.86%)</title><rect x="78.6017%" y="373" width="1.8644%" height="15" fill="rgb(213,82,22)" fg:x="1855" fg:w="44"/><text x="78.8517%" y="383.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 1.74%)</title><rect x="78.7288%" y="357" width="1.7373%" height="15" fill="rgb(248,140,0)" fg:x="1858" fg:w="41"/><text x="78.9788%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 1.74%)</title><rect x="78.7288%" y="341" width="1.7373%" height="15" fill="rgb(228,106,3)" fg:x="1858" fg:w="41"/><text x="78.9788%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 1.74%)</title><rect x="78.7288%" y="325" width="1.7373%" height="15" fill="rgb(209,23,37)" fg:x="1858" fg:w="41"/><text x="78.9788%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 1.74%)</title><rect x="78.7288%" y="309" width="1.7373%" height="15" fill="rgb(241,93,50)" fg:x="1858" fg:w="41"/><text x="78.9788%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.30%)</title><rect x="80.1695%" y="293" width="0.2966%" height="15" fill="rgb(253,46,43)" fg:x="1892" fg:w="7"/><text x="80.4195%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="80.9322%" y="133" width="0.0424%" height="15" fill="rgb(226,206,43)" fg:x="1910" fg:w="1"/><text x="81.1822%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="80.9322%" y="117" width="0.0424%" height="15" fill="rgb(217,54,7)" fg:x="1910" fg:w="1"/><text x="81.1822%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="80.9322%" y="101" width="0.0424%" height="15" fill="rgb(223,5,52)" fg:x="1910" fg:w="1"/><text x="81.1822%" y="111.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="80.9322%" y="85" width="0.0424%" height="15" fill="rgb(206,52,46)" fg:x="1910" fg:w="1"/><text x="81.1822%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="80.9322%" y="69" width="0.0424%" height="15" fill="rgb(253,136,11)" fg:x="1910" fg:w="1"/><text x="81.1822%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="80.9322%" y="261" width="0.1271%" height="15" fill="rgb(208,106,33)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="80.9322%" y="245" width="0.1271%" height="15" fill="rgb(206,54,4)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="80.9322%" y="229" width="0.1271%" height="15" fill="rgb(213,3,15)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="80.9322%" y="213" width="0.1271%" height="15" fill="rgb(252,211,39)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="80.9322%" y="197" width="0.1271%" height="15" fill="rgb(223,6,36)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="80.9322%" y="181" width="0.1271%" height="15" fill="rgb(252,169,45)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="80.9322%" y="165" width="0.1271%" height="15" fill="rgb(212,48,26)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.13%)</title><rect x="80.9322%" y="149" width="0.1271%" height="15" fill="rgb(251,102,48)" fg:x="1910" fg:w="3"/><text x="81.1822%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.08%)</title><rect x="80.9746%" y="133" width="0.0847%" height="15" fill="rgb(243,208,16)" fg:x="1911" fg:w="2"/><text x="81.2246%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.08%)</title><rect x="80.9746%" y="117" width="0.0847%" height="15" fill="rgb(219,96,24)" fg:x="1911" fg:w="2"/><text x="81.2246%" y="127.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.34%)</title><rect x="81.0593%" y="261" width="0.3390%" height="15" fill="rgb(219,33,29)" fg:x="1913" fg:w="8"/><text x="81.3093%" y="271.50"></text></g><g><title>tcache_get (5 samples, 0.21%)</title><rect x="81.1864%" y="245" width="0.2119%" height="15" fill="rgb(223,176,5)" fg:x="1916" fg:w="5"/><text x="81.4364%" y="255.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (18 samples, 0.76%)</title><rect x="80.7627%" y="309" width="0.7627%" height="15" fill="rgb(228,140,14)" fg:x="1906" fg:w="18"/><text x="81.0127%" y="319.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (18 samples, 0.76%)</title><rect x="80.7627%" y="293" width="0.7627%" height="15" fill="rgb(217,179,31)" fg:x="1906" fg:w="18"/><text x="81.0127%" y="303.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (16 samples, 0.68%)</title><rect x="80.8475%" y="277" width="0.6780%" height="15" fill="rgb(230,9,30)" fg:x="1908" fg:w="16"/><text x="81.0975%" y="287.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3 samples, 0.13%)</title><rect x="81.3983%" y="261" width="0.1271%" height="15" fill="rgb(230,136,20)" fg:x="1921" fg:w="3"/><text x="81.6483%" y="271.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="81.6102%" y="181" width="0.0424%" height="15" fill="rgb(215,210,22)" fg:x="1926" fg:w="1"/><text x="81.8602%" y="191.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.97%)</title><rect x="80.7627%" y="325" width="0.9746%" height="15" fill="rgb(218,43,5)" fg:x="1906" fg:w="23"/><text x="81.0127%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.21%)</title><rect x="81.5254%" y="309" width="0.2119%" height="15" fill="rgb(216,11,5)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.21%)</title><rect x="81.5254%" y="293" width="0.2119%" height="15" fill="rgb(209,82,29)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.21%)</title><rect x="81.5254%" y="277" width="0.2119%" height="15" fill="rgb(244,115,12)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.21%)</title><rect x="81.5254%" y="261" width="0.2119%" height="15" fill="rgb(222,82,18)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="271.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.21%)</title><rect x="81.5254%" y="245" width="0.2119%" height="15" fill="rgb(249,227,8)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="255.50"></text></g><g><title>__rdl_alloc (5 samples, 0.21%)</title><rect x="81.5254%" y="229" width="0.2119%" height="15" fill="rgb(253,141,45)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.21%)</title><rect x="81.5254%" y="213" width="0.2119%" height="15" fill="rgb(234,184,4)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="223.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.21%)</title><rect x="81.5254%" y="197" width="0.2119%" height="15" fill="rgb(218,194,23)" fg:x="1924" fg:w="5"/><text x="81.7754%" y="207.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="81.6525%" y="181" width="0.0847%" height="15" fill="rgb(235,66,41)" fg:x="1927" fg:w="2"/><text x="81.9025%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="81.8644%" y="261" width="0.0424%" height="15" fill="rgb(245,217,1)" fg:x="1932" fg:w="1"/><text x="82.1144%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="81.8644%" y="245" width="0.0424%" height="15" fill="rgb(229,91,1)" fg:x="1932" fg:w="1"/><text x="82.1144%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="81.8644%" y="229" width="0.0424%" height="15" fill="rgb(207,101,30)" fg:x="1932" fg:w="1"/><text x="82.1144%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="82.3729%" y="181" width="0.1271%" height="15" fill="rgb(223,82,49)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="82.3729%" y="165" width="0.1271%" height="15" fill="rgb(218,167,17)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="82.3729%" y="149" width="0.1271%" height="15" fill="rgb(208,103,14)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="159.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="82.3729%" y="133" width="0.1271%" height="15" fill="rgb(238,20,8)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="82.3729%" y="117" width="0.1271%" height="15" fill="rgb(218,80,54)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="82.3729%" y="101" width="0.1271%" height="15" fill="rgb(240,144,17)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="82.3729%" y="85" width="0.1271%" height="15" fill="rgb(245,27,50)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.13%)</title><rect x="82.3729%" y="69" width="0.1271%" height="15" fill="rgb(251,51,7)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="79.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.13%)</title><rect x="82.3729%" y="53" width="0.1271%" height="15" fill="rgb(245,217,29)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="63.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (3 samples, 0.13%)</title><rect x="82.3729%" y="37" width="0.1271%" height="15" fill="rgb(221,176,29)" fg:x="1944" fg:w="3"/><text x="82.6229%" y="47.50"></text></g><g><title>_int_malloc (13 samples, 0.55%)</title><rect x="82.5847%" y="165" width="0.5508%" height="15" fill="rgb(212,180,24)" fg:x="1949" fg:w="13"/><text x="82.8347%" y="175.50"></text></g><g><title>tcache_put (5 samples, 0.21%)</title><rect x="82.9237%" y="149" width="0.2119%" height="15" fill="rgb(254,24,2)" fg:x="1957" fg:w="5"/><text x="83.1737%" y="159.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="83.1356%" y="165" width="0.0424%" height="15" fill="rgb(230,100,2)" fg:x="1962" fg:w="1"/><text x="83.3856%" y="175.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.81%)</title><rect x="82.5000%" y="181" width="0.8051%" height="15" fill="rgb(219,142,25)" fg:x="1947" fg:w="19"/><text x="82.7500%" y="191.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="83.1780%" y="165" width="0.1271%" height="15" fill="rgb(240,73,43)" fg:x="1963" fg:w="3"/><text x="83.4280%" y="175.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="83.3051%" y="181" width="0.0424%" height="15" fill="rgb(214,114,15)" fg:x="1966" fg:w="1"/><text x="83.5551%" y="191.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (31 samples, 1.31%)</title><rect x="82.0763%" y="229" width="1.3136%" height="15" fill="rgb(207,130,4)" fg:x="1937" fg:w="31"/><text x="82.3263%" y="239.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (30 samples, 1.27%)</title><rect x="82.1186%" y="213" width="1.2712%" height="15" fill="rgb(221,25,40)" fg:x="1938" fg:w="30"/><text x="82.3686%" y="223.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (27 samples, 1.14%)</title><rect x="82.2458%" y="197" width="1.1441%" height="15" fill="rgb(241,184,7)" fg:x="1941" fg:w="27"/><text x="82.4958%" y="207.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (1 samples, 0.04%)</title><rect x="83.3475%" y="181" width="0.0424%" height="15" fill="rgb(235,159,4)" fg:x="1967" fg:w="1"/><text x="83.5975%" y="191.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="83.9407%" y="101" width="0.1271%" height="15" fill="rgb(214,87,48)" fg:x="1981" fg:w="3"/><text x="84.1907%" y="111.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (53 samples, 2.25%)</title><rect x="81.9068%" y="261" width="2.2458%" height="15" fill="rgb(246,198,24)" fg:x="1933" fg:w="53"/><text x="82.1568%" y="271.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 2.08%)</title><rect x="82.0763%" y="245" width="2.0763%" height="15" fill="rgb(209,66,40)" fg:x="1937" fg:w="49"/><text x="82.3263%" y="255.50">&lt;..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (18 samples, 0.76%)</title><rect x="83.3898%" y="229" width="0.7627%" height="15" fill="rgb(233,147,39)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (18 samples, 0.76%)</title><rect x="83.3898%" y="213" width="0.7627%" height="15" fill="rgb(231,145,52)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.76%)</title><rect x="83.3898%" y="197" width="0.7627%" height="15" fill="rgb(206,20,26)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.76%)</title><rect x="83.3898%" y="181" width="0.7627%" height="15" fill="rgb(238,220,4)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="191.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.76%)</title><rect x="83.3898%" y="165" width="0.7627%" height="15" fill="rgb(252,195,42)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="175.50"></text></g><g><title>__rdl_alloc (18 samples, 0.76%)</title><rect x="83.3898%" y="149" width="0.7627%" height="15" fill="rgb(209,10,6)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (18 samples, 0.76%)</title><rect x="83.3898%" y="133" width="0.7627%" height="15" fill="rgb(229,3,52)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="143.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.76%)</title><rect x="83.3898%" y="117" width="0.7627%" height="15" fill="rgb(253,49,37)" fg:x="1968" fg:w="18"/><text x="83.6398%" y="127.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="84.0678%" y="101" width="0.0847%" height="15" fill="rgb(240,103,49)" fg:x="1984" fg:w="2"/><text x="84.3178%" y="111.50"></text></g><g><title>_int_malloc (11 samples, 0.47%)</title><rect x="84.6186%" y="117" width="0.4661%" height="15" fill="rgb(250,182,30)" fg:x="1997" fg:w="11"/><text x="84.8686%" y="127.50"></text></g><g><title>tcache_put (3 samples, 0.13%)</title><rect x="84.9576%" y="101" width="0.1271%" height="15" fill="rgb(248,8,30)" fg:x="2005" fg:w="3"/><text x="85.2076%" y="111.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="85.0847%" y="117" width="0.0424%" height="15" fill="rgb(237,120,30)" fg:x="2008" fg:w="1"/><text x="85.3347%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 1.14%)</title><rect x="84.1525%" y="261" width="1.1441%" height="15" fill="rgb(221,146,34)" fg:x="1986" fg:w="27"/><text x="84.4025%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 1.14%)</title><rect x="84.1525%" y="245" width="1.1441%" height="15" fill="rgb(242,55,13)" fg:x="1986" fg:w="27"/><text x="84.4025%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 1.14%)</title><rect x="84.1525%" y="229" width="1.1441%" height="15" fill="rgb(242,112,31)" fg:x="1986" fg:w="27"/><text x="84.4025%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 1.02%)</title><rect x="84.2797%" y="213" width="1.0169%" height="15" fill="rgb(249,192,27)" fg:x="1989" fg:w="24"/><text x="84.5297%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 1.02%)</title><rect x="84.2797%" y="197" width="1.0169%" height="15" fill="rgb(208,204,44)" fg:x="1989" fg:w="24"/><text x="84.5297%" y="207.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.89%)</title><rect x="84.4068%" y="181" width="0.8898%" height="15" fill="rgb(208,93,54)" fg:x="1992" fg:w="21"/><text x="84.6568%" y="191.50"></text></g><g><title>__rdl_alloc (21 samples, 0.89%)</title><rect x="84.4068%" y="165" width="0.8898%" height="15" fill="rgb(242,1,31)" fg:x="1992" fg:w="21"/><text x="84.6568%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (21 samples, 0.89%)</title><rect x="84.4068%" y="149" width="0.8898%" height="15" fill="rgb(241,83,25)" fg:x="1992" fg:w="21"/><text x="84.6568%" y="159.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.76%)</title><rect x="84.5339%" y="133" width="0.7627%" height="15" fill="rgb(205,169,50)" fg:x="1995" fg:w="18"/><text x="84.7839%" y="143.50"></text></g><g><title>tcache_get (4 samples, 0.17%)</title><rect x="85.1271%" y="117" width="0.1695%" height="15" fill="rgb(239,186,37)" fg:x="2009" fg:w="4"/><text x="85.3771%" y="127.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (131 samples, 5.55%)</title><rect x="80.4661%" y="357" width="5.5508%" height="15" fill="rgb(205,221,10)" fg:x="1899" fg:w="131"/><text x="80.7161%" y="367.50">&lt;T as a..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (131 samples, 5.55%)</title><rect x="80.4661%" y="341" width="5.5508%" height="15" fill="rgb(218,196,15)" fg:x="1899" fg:w="131"/><text x="80.7161%" y="351.50">&lt;rlox::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 4.28%)</title><rect x="81.7373%" y="325" width="4.2797%" height="15" fill="rgb(218,196,35)" fg:x="1929" fg:w="101"/><text x="81.9873%" y="335.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 4.28%)</title><rect x="81.7373%" y="309" width="4.2797%" height="15" fill="rgb(233,63,24)" fg:x="1929" fg:w="101"/><text x="81.9873%" y="319.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (101 samples, 4.28%)</title><rect x="81.7373%" y="293" width="4.2797%" height="15" fill="rgb(225,8,4)" fg:x="1929" fg:w="101"/><text x="81.9873%" y="303.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 4.28%)</title><rect x="81.7373%" y="277" width="4.2797%" height="15" fill="rgb(234,105,35)" fg:x="1929" fg:w="101"/><text x="81.9873%" y="287.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (17 samples, 0.72%)</title><rect x="85.2966%" y="261" width="0.7203%" height="15" fill="rgb(236,21,32)" fg:x="2013" fg:w="17"/><text x="85.5466%" y="271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (160 samples, 6.78%)</title><rect x="80.4661%" y="405" width="6.7797%" height="15" fill="rgb(228,109,6)" fg:x="1899" fg:w="160"/><text x="80.7161%" y="415.50">&lt;core::op..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (160 samples, 6.78%)</title><rect x="80.4661%" y="389" width="6.7797%" height="15" fill="rgb(229,215,31)" fg:x="1899" fg:w="160"/><text x="80.7161%" y="399.50">&lt;rlox::pa..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (160 samples, 6.78%)</title><rect x="80.4661%" y="373" width="6.7797%" height="15" fill="rgb(221,52,54)" fg:x="1899" fg:w="160"/><text x="80.7161%" y="383.50">&lt;alloc::b..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (29 samples, 1.23%)</title><rect x="86.0169%" y="357" width="1.2288%" height="15" fill="rgb(252,129,43)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (29 samples, 1.23%)</title><rect x="86.0169%" y="341" width="1.2288%" height="15" fill="rgb(248,183,27)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 1.23%)</title><rect x="86.0169%" y="325" width="1.2288%" height="15" fill="rgb(250,0,22)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 1.23%)</title><rect x="86.0169%" y="309" width="1.2288%" height="15" fill="rgb(213,166,10)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="319.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 1.23%)</title><rect x="86.0169%" y="293" width="1.2288%" height="15" fill="rgb(207,163,36)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="303.50"></text></g><g><title>__rdl_alloc (29 samples, 1.23%)</title><rect x="86.0169%" y="277" width="1.2288%" height="15" fill="rgb(208,122,22)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (29 samples, 1.23%)</title><rect x="86.0169%" y="261" width="1.2288%" height="15" fill="rgb(207,104,49)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="271.50"></text></g><g><title>__GI___libc_malloc (29 samples, 1.23%)</title><rect x="86.0169%" y="245" width="1.2288%" height="15" fill="rgb(248,211,50)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="255.50"></text></g><g><title>_int_malloc (29 samples, 1.23%)</title><rect x="86.0169%" y="229" width="1.2288%" height="15" fill="rgb(217,13,45)" fg:x="2030" fg:w="29"/><text x="86.2669%" y="239.50"></text></g><g><title>tcache_put (5 samples, 0.21%)</title><rect x="87.0339%" y="213" width="0.2119%" height="15" fill="rgb(211,216,49)" fg:x="2054" fg:w="5"/><text x="87.2839%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="87.3305%" y="197" width="0.0424%" height="15" fill="rgb(221,58,53)" fg:x="2061" fg:w="1"/><text x="87.5805%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="87.3305%" y="181" width="0.0424%" height="15" fill="rgb(220,112,41)" fg:x="2061" fg:w="1"/><text x="87.5805%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="87.3305%" y="165" width="0.0424%" height="15" fill="rgb(236,38,28)" fg:x="2061" fg:w="1"/><text x="87.5805%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="87.3305%" y="149" width="0.0424%" height="15" fill="rgb(227,195,22)" fg:x="2061" fg:w="1"/><text x="87.5805%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="87.3305%" y="133" width="0.0424%" height="15" fill="rgb(214,55,33)" fg:x="2061" fg:w="1"/><text x="87.5805%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="87.3305%" y="325" width="0.1271%" height="15" fill="rgb(248,80,13)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="87.3305%" y="309" width="0.1271%" height="15" fill="rgb(238,52,6)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="87.3305%" y="293" width="0.1271%" height="15" fill="rgb(224,198,47)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="87.3305%" y="277" width="0.1271%" height="15" fill="rgb(233,171,20)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="87.3305%" y="261" width="0.1271%" height="15" fill="rgb(241,30,25)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="87.3305%" y="245" width="0.1271%" height="15" fill="rgb(207,171,38)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.13%)</title><rect x="87.3305%" y="229" width="0.1271%" height="15" fill="rgb(234,70,1)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.13%)</title><rect x="87.3305%" y="213" width="0.1271%" height="15" fill="rgb(232,178,18)" fg:x="2061" fg:w="3"/><text x="87.5805%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.08%)</title><rect x="87.3729%" y="197" width="0.0847%" height="15" fill="rgb(241,78,40)" fg:x="2062" fg:w="2"/><text x="87.6229%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.08%)</title><rect x="87.3729%" y="181" width="0.0847%" height="15" fill="rgb(222,35,25)" fg:x="2062" fg:w="2"/><text x="87.6229%" y="191.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="87.4576%" y="309" width="0.0424%" height="15" fill="rgb(207,92,16)" fg:x="2064" fg:w="1"/><text x="87.7076%" y="319.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="87.4576%" y="325" width="0.1695%" height="15" fill="rgb(216,59,51)" fg:x="2064" fg:w="4"/><text x="87.7076%" y="335.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="87.5000%" y="309" width="0.1271%" height="15" fill="rgb(213,80,28)" fg:x="2065" fg:w="3"/><text x="87.7500%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="87.6271%" y="325" width="0.0424%" height="15" fill="rgb(220,93,7)" fg:x="2068" fg:w="1"/><text x="87.8771%" y="335.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (215 samples, 9.11%)</title><rect x="78.6017%" y="597" width="9.1102%" height="15" fill="rgb(225,24,44)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="607.50">rlox::interpr..</text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (215 samples, 9.11%)</title><rect x="78.6017%" y="581" width="9.1102%" height="15" fill="rgb(243,74,40)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="591.50">rlox::interpr..</text></g><g><title>rlox::environ::Environ::get (215 samples, 9.11%)</title><rect x="78.6017%" y="565" width="9.1102%" height="15" fill="rgb(228,39,7)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="575.50">rlox::environ..</text></g><g><title>rlox::environ::Environ::get (215 samples, 9.11%)</title><rect x="78.6017%" y="549" width="9.1102%" height="15" fill="rgb(227,79,8)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="559.50">rlox::environ..</text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (215 samples, 9.11%)</title><rect x="78.6017%" y="533" width="9.1102%" height="15" fill="rgb(236,58,11)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="543.50">&lt;rlox::interp..</text></g><g><title>&lt;rlox::interpreter::LoxCallable as core::clone::Clone&gt;::clone (215 samples, 9.11%)</title><rect x="78.6017%" y="517" width="9.1102%" height="15" fill="rgb(249,63,35)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="527.50">&lt;rlox::interp..</text></g><g><title>&lt;rlox::interpreter::LoxFunction as core::clone::Clone&gt;::clone (215 samples, 9.11%)</title><rect x="78.6017%" y="501" width="9.1102%" height="15" fill="rgb(252,114,16)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="511.50">&lt;rlox::interp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (215 samples, 9.11%)</title><rect x="78.6017%" y="485" width="9.1102%" height="15" fill="rgb(254,151,24)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="495.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (215 samples, 9.11%)</title><rect x="78.6017%" y="469" width="9.1102%" height="15" fill="rgb(253,54,39)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="479.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (215 samples, 9.11%)</title><rect x="78.6017%" y="453" width="9.1102%" height="15" fill="rgb(243,25,45)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="463.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (215 samples, 9.11%)</title><rect x="78.6017%" y="437" width="9.1102%" height="15" fill="rgb(234,134,9)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="447.50">&lt;T as alloc::..</text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (215 samples, 9.11%)</title><rect x="78.6017%" y="421" width="9.1102%" height="15" fill="rgb(227,166,31)" fg:x="1855" fg:w="215"/><text x="78.8517%" y="431.50">&lt;rlox::parser..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (11 samples, 0.47%)</title><rect x="87.2458%" y="405" width="0.4661%" height="15" fill="rgb(245,143,41)" fg:x="2059" fg:w="11"/><text x="87.4958%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.47%)</title><rect x="87.2458%" y="389" width="0.4661%" height="15" fill="rgb(238,181,32)" fg:x="2059" fg:w="11"/><text x="87.4958%" y="399.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (11 samples, 0.47%)</title><rect x="87.2458%" y="373" width="0.4661%" height="15" fill="rgb(224,113,18)" fg:x="2059" fg:w="11"/><text x="87.4958%" y="383.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (11 samples, 0.47%)</title><rect x="87.2458%" y="357" width="0.4661%" height="15" fill="rgb(240,229,28)" fg:x="2059" fg:w="11"/><text x="87.4958%" y="367.50"></text></g><g><title>&lt;rlox::parser::Literal as core::clone::Clone&gt;::clone (11 samples, 0.47%)</title><rect x="87.2458%" y="341" width="0.4661%" height="15" fill="rgb(250,185,3)" fg:x="2059" fg:w="11"/><text x="87.4958%" y="351.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (1 samples, 0.04%)</title><rect x="87.6695%" y="325" width="0.0424%" height="15" fill="rgb(212,59,25)" fg:x="2069" fg:w="1"/><text x="87.9195%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 1.02%)</title><rect x="87.7119%" y="549" width="1.0169%" height="15" fill="rgb(221,87,20)" fg:x="2070" fg:w="24"/><text x="87.9619%" y="559.50"></text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (24 samples, 1.02%)</title><rect x="87.7119%" y="533" width="1.0169%" height="15" fill="rgb(213,74,28)" fg:x="2070" fg:w="24"/><text x="87.9619%" y="543.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (24 samples, 1.02%)</title><rect x="87.7119%" y="517" width="1.0169%" height="15" fill="rgb(224,132,34)" fg:x="2070" fg:w="24"/><text x="87.9619%" y="527.50"></text></g><g><title>__GI___libc_free (4 samples, 0.17%)</title><rect x="88.5593%" y="501" width="0.1695%" height="15" fill="rgb(222,101,24)" fg:x="2090" fg:w="4"/><text x="88.8093%" y="511.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="88.5593%" y="485" width="0.1695%" height="15" fill="rgb(254,142,4)" fg:x="2090" fg:w="4"/><text x="88.8093%" y="495.50"></text></g><g><title>free_perturb (1 samples, 0.04%)</title><rect x="88.6864%" y="469" width="0.0424%" height="15" fill="rgb(230,229,49)" fg:x="2093" fg:w="1"/><text x="88.9364%" y="479.50"></text></g><g><title>__GI___libc_free (13 samples, 0.55%)</title><rect x="89.4492%" y="533" width="0.5508%" height="15" fill="rgb(238,70,47)" fg:x="2111" fg:w="13"/><text x="89.6992%" y="543.50"></text></g><g><title>_int_free (8 samples, 0.34%)</title><rect x="89.6610%" y="517" width="0.3390%" height="15" fill="rgb(231,160,17)" fg:x="2116" fg:w="8"/><text x="89.9110%" y="527.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (32 samples, 1.36%)</title><rect x="88.7288%" y="549" width="1.3559%" height="15" fill="rgb(218,68,53)" fg:x="2094" fg:w="32"/><text x="88.9788%" y="559.50"></text></g><g><title>rlox::interpreter::is_less (2 samples, 0.08%)</title><rect x="90.0000%" y="533" width="0.0847%" height="15" fill="rgb(236,111,10)" fg:x="2124" fg:w="2"/><text x="90.2500%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="90.0847%" y="517" width="0.1695%" height="15" fill="rgb(224,34,41)" fg:x="2126" fg:w="4"/><text x="90.3347%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.17%)</title><rect x="90.0847%" y="501" width="0.1695%" height="15" fill="rgb(241,118,19)" fg:x="2126" fg:w="4"/><text x="90.3347%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.17%)</title><rect x="90.0847%" y="485" width="0.1695%" height="15" fill="rgb(238,129,25)" fg:x="2126" fg:w="4"/><text x="90.3347%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="90.2542%" y="517" width="0.0424%" height="15" fill="rgb(238,22,31)" fg:x="2130" fg:w="1"/><text x="90.5042%" y="527.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.2542%" y="501" width="0.0424%" height="15" fill="rgb(222,174,48)" fg:x="2130" fg:w="1"/><text x="90.5042%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="90.2966%" y="517" width="0.0424%" height="15" fill="rgb(206,152,40)" fg:x="2131" fg:w="1"/><text x="90.5466%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (9 samples, 0.38%)</title><rect x="90.3390%" y="517" width="0.3814%" height="15" fill="rgb(218,99,54)" fg:x="2132" fg:w="9"/><text x="90.5890%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.38%)</title><rect x="90.3390%" y="501" width="0.3814%" height="15" fill="rgb(220,174,26)" fg:x="2132" fg:w="9"/><text x="90.5890%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.34%)</title><rect x="90.3814%" y="485" width="0.3390%" height="15" fill="rgb(245,116,9)" fg:x="2133" fg:w="8"/><text x="90.6314%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.34%)</title><rect x="90.3814%" y="469" width="0.3390%" height="15" fill="rgb(209,72,35)" fg:x="2133" fg:w="8"/><text x="90.6314%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rlox::parser::Stmt&gt;&gt; (2 samples, 0.08%)</title><rect x="90.7203%" y="517" width="0.0847%" height="15" fill="rgb(226,126,21)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.7203%" y="501" width="0.0847%" height="15" fill="rgb(227,192,1)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;rlox::parser::Stmt,alloc::alloc::Global&gt;&gt; (2 samples, 0.08%)</title><rect x="90.7203%" y="485" width="0.0847%" height="15" fill="rgb(237,180,29)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.7203%" y="469" width="0.0847%" height="15" fill="rgb(230,197,35)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlox::parser::Stmt&gt;&gt; (2 samples, 0.08%)</title><rect x="90.7203%" y="453" width="0.0847%" height="15" fill="rgb(246,193,31)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="90.7203%" y="437" width="0.0847%" height="15" fill="rgb(241,36,4)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="90.7203%" y="421" width="0.0847%" height="15" fill="rgb(241,130,17)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="90.7203%" y="405" width="0.0847%" height="15" fill="rgb(206,137,32)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="415.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.08%)</title><rect x="90.7203%" y="389" width="0.0847%" height="15" fill="rgb(237,228,51)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.08%)</title><rect x="90.7203%" y="373" width="0.0847%" height="15" fill="rgb(243,6,42)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="383.50"></text></g><g><title>__GI___libc_free (2 samples, 0.08%)</title><rect x="90.7203%" y="357" width="0.0847%" height="15" fill="rgb(251,74,28)" fg:x="2141" fg:w="2"/><text x="90.9703%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="90.7627%" y="341" width="0.0424%" height="15" fill="rgb(218,20,49)" fg:x="2142" fg:w="1"/><text x="91.0127%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="91.0593%" y="485" width="0.0847%" height="15" fill="rgb(238,28,14)" fg:x="2149" fg:w="2"/><text x="91.3093%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.08%)</title><rect x="91.0593%" y="469" width="0.0847%" height="15" fill="rgb(229,40,46)" fg:x="2149" fg:w="2"/><text x="91.3093%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.08%)</title><rect x="91.0593%" y="453" width="0.0847%" height="15" fill="rgb(244,195,20)" fg:x="2149" fg:w="2"/><text x="91.3093%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.08%)</title><rect x="91.2288%" y="437" width="0.0847%" height="15" fill="rgb(253,56,35)" fg:x="2153" fg:w="2"/><text x="91.4788%" y="447.50"></text></g><g><title>__GI___libc_free (4 samples, 0.17%)</title><rect x="91.1864%" y="453" width="0.1695%" height="15" fill="rgb(210,149,44)" fg:x="2152" fg:w="4"/><text x="91.4364%" y="463.50"></text></g><g><title>arena_for_chunk (1 samples, 0.04%)</title><rect x="91.3136%" y="437" width="0.0424%" height="15" fill="rgb(240,135,12)" fg:x="2155" fg:w="1"/><text x="91.5636%" y="447.50"></text></g><g><title>core::mem::drop (5 samples, 0.21%)</title><rect x="91.3559%" y="437" width="0.2119%" height="15" fill="rgb(251,24,50)" fg:x="2156" fg:w="5"/><text x="91.6059%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (5 samples, 0.21%)</title><rect x="91.3559%" y="421" width="0.2119%" height="15" fill="rgb(243,200,47)" fg:x="2156" fg:w="5"/><text x="91.6059%" y="431.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.21%)</title><rect x="91.3559%" y="405" width="0.2119%" height="15" fill="rgb(224,166,26)" fg:x="2156" fg:w="5"/><text x="91.6059%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.17%)</title><rect x="91.3983%" y="389" width="0.1695%" height="15" fill="rgb(233,0,47)" fg:x="2157" fg:w="4"/><text x="91.6483%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.17%)</title><rect x="91.3983%" y="373" width="0.1695%" height="15" fill="rgb(253,80,5)" fg:x="2157" fg:w="4"/><text x="91.6483%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt;&gt; (11 samples, 0.47%)</title><rect x="91.5678%" y="389" width="0.4661%" height="15" fill="rgb(214,133,25)" fg:x="2161" fg:w="11"/><text x="91.8178%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (11 samples, 0.47%)</title><rect x="91.5678%" y="373" width="0.4661%" height="15" fill="rgb(209,27,14)" fg:x="2161" fg:w="11"/><text x="91.8178%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.47%)</title><rect x="91.5678%" y="357" width="0.4661%" height="15" fill="rgb(219,102,51)" fg:x="2161" fg:w="11"/><text x="91.8178%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.42%)</title><rect x="91.6102%" y="341" width="0.4237%" height="15" fill="rgb(237,18,16)" fg:x="2162" fg:w="10"/><text x="91.8602%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.42%)</title><rect x="91.6102%" y="325" width="0.4237%" height="15" fill="rgb(241,85,17)" fg:x="2162" fg:w="10"/><text x="91.8602%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.72%)</title><rect x="91.3559%" y="453" width="0.7203%" height="15" fill="rgb(236,90,42)" fg:x="2156" fg:w="17"/><text x="91.6059%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt; (12 samples, 0.51%)</title><rect x="91.5678%" y="437" width="0.5085%" height="15" fill="rgb(249,57,21)" fg:x="2161" fg:w="12"/><text x="91.8178%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;rlox::environ::Environ&gt;&gt; (12 samples, 0.51%)</title><rect x="91.5678%" y="421" width="0.5085%" height="15" fill="rgb(243,12,36)" fg:x="2161" fg:w="12"/><text x="91.8178%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rlox::environ::Environ&gt; (12 samples, 0.51%)</title><rect x="91.5678%" y="405" width="0.5085%" height="15" fill="rgb(253,128,47)" fg:x="2161" fg:w="12"/><text x="91.8178%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,rlox::interpreter::LoxValue&gt;&gt; (1 samples, 0.04%)</title><rect x="92.0339%" y="389" width="0.0424%" height="15" fill="rgb(207,33,20)" fg:x="2172" fg:w="1"/><text x="92.2839%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,rlox::interpreter::LoxValue,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.04%)</title><rect x="92.0339%" y="373" width="0.0424%" height="15" fill="rgb(233,215,35)" fg:x="2172" fg:w="1"/><text x="92.2839%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,rlox::interpreter::LoxValue)&gt;&gt; (1 samples, 0.04%)</title><rect x="92.0339%" y="357" width="0.0424%" height="15" fill="rgb(249,188,52)" fg:x="2172" fg:w="1"/><text x="92.2839%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="92.0339%" y="341" width="0.0424%" height="15" fill="rgb(225,12,32)" fg:x="2172" fg:w="1"/><text x="92.2839%" y="351.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (384 samples, 16.27%)</title><rect x="76.1017%" y="901" width="16.2712%" height="15" fill="rgb(247,98,14)" fg:x="1796" fg:w="384"/><text x="76.3517%" y="911.50">rlox::interpreter::Interp..</text></g><g><title>core::option::Option&lt;T&gt;::map (382 samples, 16.19%)</title><rect x="76.1864%" y="885" width="16.1864%" height="15" fill="rgb(247,219,48)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="895.50">core::option::Option&lt;T&gt;::..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (382 samples, 16.19%)</title><rect x="76.1864%" y="869" width="16.1864%" height="15" fill="rgb(253,60,48)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="879.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="853" width="16.1864%" height="15" fill="rgb(245,15,52)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="863.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="837" width="16.1864%" height="15" fill="rgb(220,133,28)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="847.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::LoxCallable::call (382 samples, 16.19%)</title><rect x="76.1864%" y="821" width="16.1864%" height="15" fill="rgb(217,180,4)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="831.50">rlox::interpreter::LoxCal..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (382 samples, 16.19%)</title><rect x="76.1864%" y="805" width="16.1864%" height="15" fill="rgb(251,24,1)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="815.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::execute (382 samples, 16.19%)</title><rect x="76.1864%" y="789" width="16.1864%" height="15" fill="rgb(212,185,49)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="799.50">rlox::interpreter::Interp..</text></g><g><title>core::option::Option&lt;T&gt;::map (382 samples, 16.19%)</title><rect x="76.1864%" y="773" width="16.1864%" height="15" fill="rgb(215,175,22)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="783.50">core::option::Option&lt;T&gt;::..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (382 samples, 16.19%)</title><rect x="76.1864%" y="757" width="16.1864%" height="15" fill="rgb(250,205,14)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="767.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="741" width="16.1864%" height="15" fill="rgb(225,211,22)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="751.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="725" width="16.1864%" height="15" fill="rgb(251,179,42)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="735.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::LoxCallable::call (382 samples, 16.19%)</title><rect x="76.1864%" y="709" width="16.1864%" height="15" fill="rgb(208,216,51)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="719.50">rlox::interpreter::LoxCal..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (382 samples, 16.19%)</title><rect x="76.1864%" y="693" width="16.1864%" height="15" fill="rgb(235,36,11)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="703.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::execute (382 samples, 16.19%)</title><rect x="76.1864%" y="677" width="16.1864%" height="15" fill="rgb(213,189,28)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="687.50">rlox::interpreter::Interp..</text></g><g><title>core::option::Option&lt;T&gt;::map (382 samples, 16.19%)</title><rect x="76.1864%" y="661" width="16.1864%" height="15" fill="rgb(227,203,42)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="671.50">core::option::Option&lt;T&gt;::..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (382 samples, 16.19%)</title><rect x="76.1864%" y="645" width="16.1864%" height="15" fill="rgb(244,72,36)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="655.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="629" width="16.1864%" height="15" fill="rgb(213,53,17)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="639.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (382 samples, 16.19%)</title><rect x="76.1864%" y="613" width="16.1864%" height="15" fill="rgb(207,167,3)" fg:x="1798" fg:w="382"/><text x="76.4364%" y="623.50">rlox::interpreter::Interp..</text></g><g><title>rlox::interpreter::LoxCallable::call (110 samples, 4.66%)</title><rect x="87.7119%" y="597" width="4.6610%" height="15" fill="rgb(216,98,30)" fg:x="2070" fg:w="110"/><text x="87.9619%" y="607.50">rlox:..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (110 samples, 4.66%)</title><rect x="87.7119%" y="581" width="4.6610%" height="15" fill="rgb(236,123,15)" fg:x="2070" fg:w="110"/><text x="87.9619%" y="591.50">rlox:..</text></g><g><title>rlox::interpreter::Interpreter::execute (110 samples, 4.66%)</title><rect x="87.7119%" y="565" width="4.6610%" height="15" fill="rgb(248,81,50)" fg:x="2070" fg:w="110"/><text x="87.9619%" y="575.50">rlox:..</text></g><g><title>rlox::interpreter::Interpreter::execute (54 samples, 2.29%)</title><rect x="90.0847%" y="549" width="2.2881%" height="15" fill="rgb(214,120,4)" fg:x="2126" fg:w="54"/><text x="90.3347%" y="559.50">r..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (54 samples, 2.29%)</title><rect x="90.0847%" y="533" width="2.2881%" height="15" fill="rgb(208,179,34)" fg:x="2126" fg:w="54"/><text x="90.3347%" y="543.50">r..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (37 samples, 1.57%)</title><rect x="90.8051%" y="517" width="1.5678%" height="15" fill="rgb(227,140,7)" fg:x="2143" fg:w="37"/><text x="91.0551%" y="527.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block::{{closure}} (32 samples, 1.36%)</title><rect x="91.0169%" y="501" width="1.3559%" height="15" fill="rgb(214,22,6)" fg:x="2148" fg:w="32"/><text x="91.2669%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mutex::Mutex&lt;rlox::environ::Environ&gt;&gt;&gt; (29 samples, 1.23%)</title><rect x="91.1441%" y="485" width="1.2288%" height="15" fill="rgb(207,137,27)" fg:x="2151" fg:w="29"/><text x="91.3941%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 1.23%)</title><rect x="91.1441%" y="469" width="1.2288%" height="15" fill="rgb(210,8,46)" fg:x="2151" fg:w="29"/><text x="91.3941%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.30%)</title><rect x="92.0763%" y="453" width="0.2966%" height="15" fill="rgb(240,16,54)" fg:x="2173" fg:w="7"/><text x="92.3263%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.30%)</title><rect x="92.0763%" y="437" width="0.2966%" height="15" fill="rgb(211,209,29)" fg:x="2173" fg:w="7"/><text x="92.3263%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="92.6271%" y="389" width="0.0847%" height="15" fill="rgb(226,228,24)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="92.6271%" y="373" width="0.0847%" height="15" fill="rgb(222,84,9)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="92.6271%" y="357" width="0.0847%" height="15" fill="rgb(234,203,30)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="92.6271%" y="341" width="0.0847%" height="15" fill="rgb(238,109,14)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="92.6271%" y="325" width="0.0847%" height="15" fill="rgb(233,206,34)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="92.6271%" y="309" width="0.0847%" height="15" fill="rgb(220,167,47)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="319.50"></text></g><g><title>__rdl_alloc (2 samples, 0.08%)</title><rect x="92.6271%" y="293" width="0.0847%" height="15" fill="rgb(238,105,10)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.08%)</title><rect x="92.6271%" y="277" width="0.0847%" height="15" fill="rgb(213,227,17)" fg:x="2186" fg:w="2"/><text x="92.8771%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="92.6695%" y="261" width="0.0424%" height="15" fill="rgb(217,132,38)" fg:x="2187" fg:w="1"/><text x="92.9195%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="92.6271%" y="469" width="0.1271%" height="15" fill="rgb(242,146,4)" fg:x="2186" fg:w="3"/><text x="92.8771%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="92.6271%" y="453" width="0.1271%" height="15" fill="rgb(212,61,9)" fg:x="2186" fg:w="3"/><text x="92.8771%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.13%)</title><rect x="92.6271%" y="437" width="0.1271%" height="15" fill="rgb(247,126,22)" fg:x="2186" fg:w="3"/><text x="92.8771%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.13%)</title><rect x="92.6271%" y="421" width="0.1271%" height="15" fill="rgb(220,196,2)" fg:x="2186" fg:w="3"/><text x="92.8771%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.13%)</title><rect x="92.6271%" y="405" width="0.1271%" height="15" fill="rgb(208,46,4)" fg:x="2186" fg:w="3"/><text x="92.8771%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="92.7119%" y="389" width="0.0424%" height="15" fill="rgb(252,104,46)" fg:x="2188" fg:w="1"/><text x="92.9619%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="92.7119%" y="373" width="0.0424%" height="15" fill="rgb(237,152,48)" fg:x="2188" fg:w="1"/><text x="92.9619%" y="383.50"></text></g><g><title>__rdl_alloc (12 samples, 0.51%)</title><rect x="92.8814%" y="229" width="0.5085%" height="15" fill="rgb(221,59,37)" fg:x="2192" fg:w="12"/><text x="93.1314%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.51%)</title><rect x="92.8814%" y="213" width="0.5085%" height="15" fill="rgb(209,202,51)" fg:x="2192" fg:w="12"/><text x="93.1314%" y="223.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.38%)</title><rect x="93.0085%" y="197" width="0.3814%" height="15" fill="rgb(228,81,30)" fg:x="2195" fg:w="9"/><text x="93.2585%" y="207.50"></text></g><g><title>_int_malloc (8 samples, 0.34%)</title><rect x="93.0508%" y="181" width="0.3390%" height="15" fill="rgb(227,42,39)" fg:x="2196" fg:w="8"/><text x="93.3008%" y="191.50"></text></g><g><title>tcache_put (3 samples, 0.13%)</title><rect x="93.2627%" y="165" width="0.1271%" height="15" fill="rgb(221,26,2)" fg:x="2201" fg:w="3"/><text x="93.5127%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.59%)</title><rect x="92.8390%" y="325" width="0.5932%" height="15" fill="rgb(254,61,31)" fg:x="2191" fg:w="14"/><text x="93.0890%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.59%)</title><rect x="92.8390%" y="309" width="0.5932%" height="15" fill="rgb(222,173,38)" fg:x="2191" fg:w="14"/><text x="93.0890%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.59%)</title><rect x="92.8390%" y="293" width="0.5932%" height="15" fill="rgb(218,50,12)" fg:x="2191" fg:w="14"/><text x="93.0890%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.55%)</title><rect x="92.8814%" y="277" width="0.5508%" height="15" fill="rgb(223,88,40)" fg:x="2192" fg:w="13"/><text x="93.1314%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.55%)</title><rect x="92.8814%" y="261" width="0.5508%" height="15" fill="rgb(237,54,19)" fg:x="2192" fg:w="13"/><text x="93.1314%" y="271.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.55%)</title><rect x="92.8814%" y="245" width="0.5508%" height="15" fill="rgb(251,129,25)" fg:x="2192" fg:w="13"/><text x="93.1314%" y="255.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.04%)</title><rect x="93.3898%" y="229" width="0.0424%" height="15" fill="rgb(238,97,19)" fg:x="2204" fg:w="1"/><text x="93.6398%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.64%)</title><rect x="92.8390%" y="405" width="0.6356%" height="15" fill="rgb(240,169,18)" fg:x="2191" fg:w="15"/><text x="93.0890%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.64%)</title><rect x="92.8390%" y="389" width="0.6356%" height="15" fill="rgb(230,187,49)" fg:x="2191" fg:w="15"/><text x="93.0890%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.64%)</title><rect x="92.8390%" y="373" width="0.6356%" height="15" fill="rgb(209,44,26)" fg:x="2191" fg:w="15"/><text x="93.0890%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.64%)</title><rect x="92.8390%" y="357" width="0.6356%" height="15" fill="rgb(244,0,6)" fg:x="2191" fg:w="15"/><text x="93.0890%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.64%)</title><rect x="92.8390%" y="341" width="0.6356%" height="15" fill="rgb(248,18,21)" fg:x="2191" fg:w="15"/><text x="93.0890%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="93.4322%" y="325" width="0.0424%" height="15" fill="rgb(245,180,19)" fg:x="2205" fg:w="1"/><text x="93.6822%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="93.4322%" y="309" width="0.0424%" height="15" fill="rgb(252,118,36)" fg:x="2205" fg:w="1"/><text x="93.6822%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="93.4322%" y="293" width="0.0424%" height="15" fill="rgb(210,224,19)" fg:x="2205" fg:w="1"/><text x="93.6822%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="93.4746%" y="405" width="0.0424%" height="15" fill="rgb(218,30,24)" fg:x="2206" fg:w="1"/><text x="93.7246%" y="415.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2 samples, 0.08%)</title><rect x="94.4915%" y="341" width="0.0847%" height="15" fill="rgb(219,75,50)" fg:x="2230" fg:w="2"/><text x="94.7415%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="94.7458%" y="213" width="0.0424%" height="15" fill="rgb(234,72,50)" fg:x="2236" fg:w="1"/><text x="94.9958%" y="223.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="94.7881%" y="213" width="0.0424%" height="15" fill="rgb(219,100,48)" fg:x="2237" fg:w="1"/><text x="95.0381%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.85%)</title><rect x="94.0254%" y="389" width="0.8475%" height="15" fill="rgb(253,5,41)" fg:x="2219" fg:w="20"/><text x="94.2754%" y="399.50"></text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (10 samples, 0.42%)</title><rect x="94.4492%" y="373" width="0.4237%" height="15" fill="rgb(247,181,11)" fg:x="2229" fg:w="10"/><text x="94.6992%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.38%)</title><rect x="94.4915%" y="357" width="0.3814%" height="15" fill="rgb(222,223,25)" fg:x="2230" fg:w="9"/><text x="94.7415%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.30%)</title><rect x="94.5763%" y="341" width="0.2966%" height="15" fill="rgb(214,198,28)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.30%)</title><rect x="94.5763%" y="325" width="0.2966%" height="15" fill="rgb(230,46,43)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.30%)</title><rect x="94.5763%" y="309" width="0.2966%" height="15" fill="rgb(233,65,53)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.30%)</title><rect x="94.5763%" y="293" width="0.2966%" height="15" fill="rgb(221,121,27)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="303.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.30%)</title><rect x="94.5763%" y="277" width="0.2966%" height="15" fill="rgb(247,70,47)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="287.50"></text></g><g><title>__rdl_alloc (7 samples, 0.30%)</title><rect x="94.5763%" y="261" width="0.2966%" height="15" fill="rgb(228,85,35)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.30%)</title><rect x="94.5763%" y="245" width="0.2966%" height="15" fill="rgb(209,50,18)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="255.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.30%)</title><rect x="94.5763%" y="229" width="0.2966%" height="15" fill="rgb(250,19,35)" fg:x="2232" fg:w="7"/><text x="94.8263%" y="239.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="94.8305%" y="213" width="0.0424%" height="15" fill="rgb(253,107,29)" fg:x="2238" fg:w="1"/><text x="95.0805%" y="223.50"></text></g><g><title>checked_request2size (4 samples, 0.17%)</title><rect x="95.0847%" y="229" width="0.1695%" height="15" fill="rgb(252,179,29)" fg:x="2244" fg:w="4"/><text x="95.3347%" y="239.50"></text></g><g><title>&lt;rlox::parser::Stmt as core::clone::Clone&gt;::clone (42 samples, 1.78%)</title><rect x="93.5169%" y="405" width="1.7797%" height="15" fill="rgb(238,194,6)" fg:x="2207" fg:w="42"/><text x="93.7669%" y="415.50">&lt;..</text></g><g><title>&lt;rlox::parser::Expression as core::clone::Clone&gt;::clone (10 samples, 0.42%)</title><rect x="94.8729%" y="389" width="0.4237%" height="15" fill="rgb(238,164,29)" fg:x="2239" fg:w="10"/><text x="95.1229%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.38%)</title><rect x="94.9153%" y="373" width="0.3814%" height="15" fill="rgb(224,25,9)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.38%)</title><rect x="94.9153%" y="357" width="0.3814%" height="15" fill="rgb(244,153,23)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.38%)</title><rect x="94.9153%" y="341" width="0.3814%" height="15" fill="rgb(212,203,14)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.38%)</title><rect x="94.9153%" y="325" width="0.3814%" height="15" fill="rgb(220,164,20)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.38%)</title><rect x="94.9153%" y="309" width="0.3814%" height="15" fill="rgb(222,203,48)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="319.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.38%)</title><rect x="94.9153%" y="293" width="0.3814%" height="15" fill="rgb(215,159,22)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="303.50"></text></g><g><title>__rdl_alloc (9 samples, 0.38%)</title><rect x="94.9153%" y="277" width="0.3814%" height="15" fill="rgb(216,183,47)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.38%)</title><rect x="94.9153%" y="261" width="0.3814%" height="15" fill="rgb(229,195,25)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="271.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.38%)</title><rect x="94.9153%" y="245" width="0.3814%" height="15" fill="rgb(224,132,51)" fg:x="2240" fg:w="9"/><text x="95.1653%" y="255.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="95.2542%" y="229" width="0.0424%" height="15" fill="rgb(240,63,7)" fg:x="2248" fg:w="1"/><text x="95.5042%" y="239.50"></text></g><g><title>checked_request2size (3 samples, 0.13%)</title><rect x="95.7627%" y="261" width="0.1271%" height="15" fill="rgb(249,182,41)" fg:x="2260" fg:w="3"/><text x="96.0127%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.68%)</title><rect x="95.2966%" y="405" width="0.6780%" height="15" fill="rgb(243,47,26)" fg:x="2249" fg:w="16"/><text x="95.5466%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.68%)</title><rect x="95.2966%" y="389" width="0.6780%" height="15" fill="rgb(233,48,2)" fg:x="2249" fg:w="16"/><text x="95.5466%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.68%)</title><rect x="95.2966%" y="373" width="0.6780%" height="15" fill="rgb(244,165,34)" fg:x="2249" fg:w="16"/><text x="95.5466%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.55%)</title><rect x="95.4237%" y="357" width="0.5508%" height="15" fill="rgb(207,89,7)" fg:x="2252" fg:w="13"/><text x="95.6737%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.55%)</title><rect x="95.4237%" y="341" width="0.5508%" height="15" fill="rgb(244,117,36)" fg:x="2252" fg:w="13"/><text x="95.6737%" y="351.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.55%)</title><rect x="95.4237%" y="325" width="0.5508%" height="15" fill="rgb(226,144,34)" fg:x="2252" fg:w="13"/><text x="95.6737%" y="335.50"></text></g><g><title>__rdl_alloc (13 samples, 0.55%)</title><rect x="95.4237%" y="309" width="0.5508%" height="15" fill="rgb(213,23,19)" fg:x="2252" fg:w="13"/><text x="95.6737%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.55%)</title><rect x="95.4237%" y="293" width="0.5508%" height="15" fill="rgb(217,75,12)" fg:x="2252" fg:w="13"/><text x="95.6737%" y="303.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.47%)</title><rect x="95.5085%" y="277" width="0.4661%" height="15" fill="rgb(224,159,17)" fg:x="2254" fg:w="11"/><text x="95.7585%" y="287.50"></text></g><g><title>tcache_get (2 samples, 0.08%)</title><rect x="95.8898%" y="261" width="0.0847%" height="15" fill="rgb(217,118,1)" fg:x="2263" fg:w="2"/><text x="96.1398%" y="271.50"></text></g><g><title>&lt;rlox::interpreter::LoxValue as core::clone::Clone&gt;::clone (108 samples, 4.58%)</title><rect x="92.3729%" y="517" width="4.5763%" height="15" fill="rgb(232,180,48)" fg:x="2180" fg:w="108"/><text x="92.6229%" y="527.50">&lt;rlox..</text></g><g><title>&lt;rlox::interpreter::LoxCallable as core::clone::Clone&gt;::clone (104 samples, 4.41%)</title><rect x="92.5424%" y="501" width="4.4068%" height="15" fill="rgb(230,27,33)" fg:x="2184" fg:w="104"/><text x="92.7924%" y="511.50">&lt;rlox..</text></g><g><title>&lt;rlox::interpreter::LoxFunction as core::clone::Clone&gt;::clone (104 samples, 4.41%)</title><rect x="92.5424%" y="485" width="4.4068%" height="15" fill="rgb(205,31,21)" fg:x="2184" fg:w="104"/><text x="92.7924%" y="495.50">&lt;rlox..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (99 samples, 4.19%)</title><rect x="92.7542%" y="469" width="4.1949%" height="15" fill="rgb(253,59,4)" fg:x="2189" fg:w="99"/><text x="93.0042%" y="479.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (99 samples, 4.19%)</title><rect x="92.7542%" y="453" width="4.1949%" height="15" fill="rgb(224,201,9)" fg:x="2189" fg:w="99"/><text x="93.0042%" y="463.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (99 samples, 4.19%)</title><rect x="92.7542%" y="437" width="4.1949%" height="15" fill="rgb(229,206,30)" fg:x="2189" fg:w="99"/><text x="93.0042%" y="447.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (99 samples, 4.19%)</title><rect x="92.7542%" y="421" width="4.1949%" height="15" fill="rgb(212,67,47)" fg:x="2189" fg:w="99"/><text x="93.0042%" y="431.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 0.97%)</title><rect x="95.9746%" y="405" width="0.9746%" height="15" fill="rgb(211,96,50)" fg:x="2265" fg:w="23"/><text x="96.2246%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.13%)</title><rect x="97.1186%" y="373" width="0.1271%" height="15" fill="rgb(252,114,18)" fg:x="2292" fg:w="3"/><text x="97.3686%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.21%)</title><rect x="97.0763%" y="389" width="0.2119%" height="15" fill="rgb(223,58,37)" fg:x="2291" fg:w="5"/><text x="97.3263%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="97.2458%" y="373" width="0.0424%" height="15" fill="rgb(237,70,4)" fg:x="2295" fg:w="1"/><text x="97.4958%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="97.3305%" y="373" width="0.0424%" height="15" fill="rgb(244,85,46)" fg:x="2297" fg:w="1"/><text x="97.5805%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.55%)</title><rect x="96.9915%" y="437" width="0.5508%" height="15" fill="rgb(223,39,52)" fg:x="2289" fg:w="13"/><text x="97.2415%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.55%)</title><rect x="96.9915%" y="421" width="0.5508%" height="15" fill="rgb(218,200,14)" fg:x="2289" fg:w="13"/><text x="97.2415%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.55%)</title><rect x="96.9915%" y="405" width="0.5508%" height="15" fill="rgb(208,171,16)" fg:x="2289" fg:w="13"/><text x="97.2415%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.25%)</title><rect x="97.2881%" y="389" width="0.2542%" height="15" fill="rgb(234,200,18)" fg:x="2296" fg:w="6"/><text x="97.5381%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.17%)</title><rect x="97.3729%" y="373" width="0.1695%" height="15" fill="rgb(228,45,11)" fg:x="2298" fg:w="4"/><text x="97.6229%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.08%)</title><rect x="97.5424%" y="437" width="0.0847%" height="15" fill="rgb(237,182,11)" fg:x="2302" fg:w="2"/><text x="97.7924%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="97.5847%" y="421" width="0.0424%" height="15" fill="rgb(241,175,49)" fg:x="2303" fg:w="1"/><text x="97.8347%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="97.5847%" y="405" width="0.0424%" height="15" fill="rgb(247,38,35)" fg:x="2303" fg:w="1"/><text x="97.8347%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="97.5847%" y="389" width="0.0424%" height="15" fill="rgb(228,39,49)" fg:x="2303" fg:w="1"/><text x="97.8347%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.42%)</title><rect x="97.6271%" y="341" width="0.4237%" height="15" fill="rgb(226,101,26)" fg:x="2304" fg:w="10"/><text x="97.8771%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.08%)</title><rect x="97.9661%" y="325" width="0.0847%" height="15" fill="rgb(206,141,19)" fg:x="2312" fg:w="2"/><text x="98.2161%" y="335.50"></text></g><g><title>rlox::interpreter::Interpreter::evaluate (140 samples, 5.93%)</title><rect x="92.3729%" y="581" width="5.9322%" height="15" fill="rgb(211,200,13)" fg:x="2180" fg:w="140"/><text x="92.6229%" y="591.50">rlox::in..</text></g><g><title>rlox::interpreter::Interpreter::val_from_lit (140 samples, 5.93%)</title><rect x="92.3729%" y="565" width="5.9322%" height="15" fill="rgb(241,121,6)" fg:x="2180" fg:w="140"/><text x="92.6229%" y="575.50">rlox::in..</text></g><g><title>rlox::environ::Environ::get (140 samples, 5.93%)</title><rect x="92.3729%" y="549" width="5.9322%" height="15" fill="rgb(234,221,29)" fg:x="2180" fg:w="140"/><text x="92.6229%" y="559.50">rlox::en..</text></g><g><title>rlox::environ::Environ::get (140 samples, 5.93%)</title><rect x="92.3729%" y="533" width="5.9322%" height="15" fill="rgb(229,136,5)" fg:x="2180" fg:w="140"/><text x="92.6229%" y="543.50">rlox::en..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (32 samples, 1.36%)</title><rect x="96.9492%" y="517" width="1.3559%" height="15" fill="rgb(238,36,11)" fg:x="2288" fg:w="32"/><text x="97.1992%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 1.36%)</title><rect x="96.9492%" y="501" width="1.3559%" height="15" fill="rgb(251,55,41)" fg:x="2288" fg:w="32"/><text x="97.1992%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 1.36%)</title><rect x="96.9492%" y="485" width="1.3559%" height="15" fill="rgb(242,34,40)" fg:x="2288" fg:w="32"/><text x="97.1992%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 1.36%)</title><rect x="96.9492%" y="469" width="1.3559%" height="15" fill="rgb(215,42,17)" fg:x="2288" fg:w="32"/><text x="97.1992%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 1.36%)</title><rect x="96.9492%" y="453" width="1.3559%" height="15" fill="rgb(207,44,46)" fg:x="2288" fg:w="32"/><text x="97.1992%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.68%)</title><rect x="97.6271%" y="437" width="0.6780%" height="15" fill="rgb(211,206,28)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (16 samples, 0.68%)</title><rect x="97.6271%" y="421" width="0.6780%" height="15" fill="rgb(237,167,16)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.68%)</title><rect x="97.6271%" y="405" width="0.6780%" height="15" fill="rgb(233,66,6)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (16 samples, 0.68%)</title><rect x="97.6271%" y="389" width="0.6780%" height="15" fill="rgb(246,123,29)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (16 samples, 0.68%)</title><rect x="97.6271%" y="373" width="0.6780%" height="15" fill="rgb(209,62,40)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (16 samples, 0.68%)</title><rect x="97.6271%" y="357" width="0.6780%" height="15" fill="rgb(218,4,25)" fg:x="2304" fg:w="16"/><text x="97.8771%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.25%)</title><rect x="98.0508%" y="341" width="0.2542%" height="15" fill="rgb(253,91,49)" fg:x="2314" fg:w="6"/><text x="98.3008%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.21%)</title><rect x="98.0932%" y="325" width="0.2119%" height="15" fill="rgb(228,155,29)" fg:x="2315" fg:w="5"/><text x="98.3432%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="98.2627%" y="309" width="0.0424%" height="15" fill="rgb(243,57,37)" fg:x="2319" fg:w="1"/><text x="98.5127%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.25%)</title><rect x="98.6441%" y="517" width="0.2542%" height="15" fill="rgb(244,167,17)" fg:x="2328" fg:w="6"/><text x="98.8941%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.21%)</title><rect x="98.6864%" y="501" width="0.2119%" height="15" fill="rgb(207,181,38)" fg:x="2329" fg:w="5"/><text x="98.9364%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.21%)</title><rect x="98.6864%" y="485" width="0.2119%" height="15" fill="rgb(211,8,23)" fg:x="2329" fg:w="5"/><text x="98.9364%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.17%)</title><rect x="98.8983%" y="517" width="0.1695%" height="15" fill="rgb(235,11,44)" fg:x="2334" fg:w="4"/><text x="99.1483%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.17%)</title><rect x="98.8983%" y="501" width="0.1695%" height="15" fill="rgb(248,18,52)" fg:x="2334" fg:w="4"/><text x="99.1483%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.13%)</title><rect x="98.9407%" y="485" width="0.1271%" height="15" fill="rgb(208,4,7)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.13%)</title><rect x="98.9407%" y="469" width="0.1271%" height="15" fill="rgb(240,17,39)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.13%)</title><rect x="98.9407%" y="453" width="0.1271%" height="15" fill="rgb(207,170,3)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.13%)</title><rect x="98.9407%" y="437" width="0.1271%" height="15" fill="rgb(236,100,52)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="447.50"></text></g><g><title>__rdl_alloc (3 samples, 0.13%)</title><rect x="98.9407%" y="421" width="0.1271%" height="15" fill="rgb(246,78,51)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.13%)</title><rect x="98.9407%" y="405" width="0.1271%" height="15" fill="rgb(211,17,15)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="415.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="98.9407%" y="389" width="0.1271%" height="15" fill="rgb(209,59,46)" fg:x="2335" fg:w="3"/><text x="99.1907%" y="399.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block (159 samples, 6.74%)</title><rect x="92.3729%" y="901" width="6.7373%" height="15" fill="rgb(210,92,25)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="911.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::execute (159 samples, 6.74%)</title><rect x="92.3729%" y="885" width="6.7373%" height="15" fill="rgb(238,174,52)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="895.50">rlox::int..</text></g><g><title>core::option::Option&lt;T&gt;::map (159 samples, 6.74%)</title><rect x="92.3729%" y="869" width="6.7373%" height="15" fill="rgb(230,73,7)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="879.50">core::opt..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (159 samples, 6.74%)</title><rect x="92.3729%" y="853" width="6.7373%" height="15" fill="rgb(243,124,40)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="863.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="837" width="6.7373%" height="15" fill="rgb(244,170,11)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="847.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="821" width="6.7373%" height="15" fill="rgb(207,114,54)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="831.50">rlox::int..</text></g><g><title>rlox::interpreter::LoxCallable::call (159 samples, 6.74%)</title><rect x="92.3729%" y="805" width="6.7373%" height="15" fill="rgb(205,42,20)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="815.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (159 samples, 6.74%)</title><rect x="92.3729%" y="789" width="6.7373%" height="15" fill="rgb(230,30,28)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="799.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::execute (159 samples, 6.74%)</title><rect x="92.3729%" y="773" width="6.7373%" height="15" fill="rgb(205,73,54)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="783.50">rlox::int..</text></g><g><title>core::option::Option&lt;T&gt;::map (159 samples, 6.74%)</title><rect x="92.3729%" y="757" width="6.7373%" height="15" fill="rgb(254,227,23)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="767.50">core::opt..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (159 samples, 6.74%)</title><rect x="92.3729%" y="741" width="6.7373%" height="15" fill="rgb(228,202,34)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="751.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="725" width="6.7373%" height="15" fill="rgb(222,225,37)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="735.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="709" width="6.7373%" height="15" fill="rgb(221,14,54)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="719.50">rlox::int..</text></g><g><title>rlox::interpreter::LoxCallable::call (159 samples, 6.74%)</title><rect x="92.3729%" y="693" width="6.7373%" height="15" fill="rgb(254,102,2)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="703.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::execute_block (159 samples, 6.74%)</title><rect x="92.3729%" y="677" width="6.7373%" height="15" fill="rgb(232,104,17)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="687.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::execute (159 samples, 6.74%)</title><rect x="92.3729%" y="661" width="6.7373%" height="15" fill="rgb(250,220,14)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="671.50">rlox::int..</text></g><g><title>core::option::Option&lt;T&gt;::map (159 samples, 6.74%)</title><rect x="92.3729%" y="645" width="6.7373%" height="15" fill="rgb(241,158,9)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="655.50">core::opt..</text></g><g><title>rlox::interpreter::Interpreter::execute::{{closure}} (159 samples, 6.74%)</title><rect x="92.3729%" y="629" width="6.7373%" height="15" fill="rgb(246,9,43)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="639.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="613" width="6.7373%" height="15" fill="rgb(206,73,33)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="623.50">rlox::int..</text></g><g><title>rlox::interpreter::Interpreter::evaluate (159 samples, 6.74%)</title><rect x="92.3729%" y="597" width="6.7373%" height="15" fill="rgb(222,79,8)" fg:x="2180" fg:w="159"/><text x="92.6229%" y="607.50">rlox::int..</text></g><g><title>rlox::interpreter::LoxCallable::call (19 samples, 0.81%)</title><rect x="98.3051%" y="581" width="0.8051%" height="15" fill="rgb(234,8,54)" fg:x="2320" fg:w="19"/><text x="98.5551%" y="591.50"></text></g><g><title>rlox::interpreter::Interpreter::execute_block (19 samples, 0.81%)</title><rect x="98.3051%" y="565" width="0.8051%" height="15" fill="rgb(209,134,38)" fg:x="2320" fg:w="19"/><text x="98.5551%" y="575.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (19 samples, 0.81%)</title><rect x="98.3051%" y="549" width="0.8051%" height="15" fill="rgb(230,127,29)" fg:x="2320" fg:w="19"/><text x="98.5551%" y="559.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (19 samples, 0.81%)</title><rect x="98.3051%" y="533" width="0.8051%" height="15" fill="rgb(242,44,41)" fg:x="2320" fg:w="19"/><text x="98.5551%" y="543.50"></text></g><g><title>rlox::environ::Environ::new (1 samples, 0.04%)</title><rect x="99.0678%" y="517" width="0.0424%" height="15" fill="rgb(222,56,43)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (1 samples, 0.04%)</title><rect x="99.0678%" y="501" width="0.0424%" height="15" fill="rgb(238,39,47)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="99.0678%" y="485" width="0.0424%" height="15" fill="rgb(226,79,43)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="99.0678%" y="469" width="0.0424%" height="15" fill="rgb(242,105,53)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="479.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.04%)</title><rect x="99.0678%" y="453" width="0.0424%" height="15" fill="rgb(251,132,46)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.04%)</title><rect x="99.0678%" y="437" width="0.0424%" height="15" fill="rgb(231,77,14)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="99.0678%" y="421" width="0.0424%" height="15" fill="rgb(240,135,9)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="431.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (1 samples, 0.04%)</title><rect x="99.0678%" y="405" width="0.0424%" height="15" fill="rgb(248,109,14)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.04%)</title><rect x="99.0678%" y="389" width="0.0424%" height="15" fill="rgb(227,146,52)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.04%)</title><rect x="99.0678%" y="373" width="0.0424%" height="15" fill="rgb(232,54,3)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="383.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="99.0678%" y="357" width="0.0424%" height="15" fill="rgb(229,201,43)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="99.0678%" y="341" width="0.0424%" height="15" fill="rgb(252,161,33)" fg:x="2338" fg:w="1"/><text x="99.3178%" y="351.50"></text></g><g><title>[unknown] (2,055 samples, 87.08%)</title><rect x="12.0763%" y="917" width="87.0763%" height="15" fill="rgb(226,146,40)" fg:x="285" fg:w="2055"/><text x="12.3263%" y="927.50">[unknown]</text></g><g><title>rlox::interpreter::is_less (1 samples, 0.04%)</title><rect x="99.1102%" y="901" width="0.0424%" height="15" fill="rgb(219,47,25)" fg:x="2339" fg:w="1"/><text x="99.3602%" y="911.50"></text></g><g><title>__GI___libc_free (2 samples, 0.08%)</title><rect x="99.1525%" y="917" width="0.0847%" height="15" fill="rgb(250,135,13)" fg:x="2340" fg:w="2"/><text x="99.4025%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="99.2373%" y="917" width="0.0424%" height="15" fill="rgb(219,229,18)" fg:x="2342" fg:w="1"/><text x="99.4873%" y="927.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.04%)</title><rect x="99.2797%" y="917" width="0.0424%" height="15" fill="rgb(217,152,27)" fg:x="2343" fg:w="1"/><text x="99.5297%" y="927.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="99.3220%" y="917" width="0.1271%" height="15" fill="rgb(225,71,47)" fg:x="2344" fg:w="3"/><text x="99.5720%" y="927.50"></text></g><g><title>_start (6 samples, 0.25%)</title><rect x="99.4492%" y="917" width="0.2542%" height="15" fill="rgb(220,139,14)" fg:x="2347" fg:w="6"/><text x="99.6992%" y="927.50"></text></g><g><title>_dl_start (1 samples, 0.04%)</title><rect x="99.6610%" y="901" width="0.0424%" height="15" fill="rgb(247,54,32)" fg:x="2352" fg:w="1"/><text x="99.9110%" y="911.50"></text></g><g><title>_dl_start_final (1 samples, 0.04%)</title><rect x="99.6610%" y="885" width="0.0424%" height="15" fill="rgb(252,131,39)" fg:x="2352" fg:w="1"/><text x="99.9110%" y="895.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.04%)</title><rect x="99.6610%" y="869" width="0.0424%" height="15" fill="rgb(210,108,39)" fg:x="2352" fg:w="1"/><text x="99.9110%" y="879.50"></text></g><g><title>dl_main (1 samples, 0.04%)</title><rect x="99.6610%" y="853" width="0.0424%" height="15" fill="rgb(205,23,29)" fg:x="2352" fg:w="1"/><text x="99.9110%" y="863.50"></text></g><g><title>elf_get_dynamic_info (1 samples, 0.04%)</title><rect x="99.6610%" y="837" width="0.0424%" height="15" fill="rgb(246,139,46)" fg:x="2352" fg:w="1"/><text x="99.9110%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="99.7034%" y="917" width="0.0424%" height="15" fill="rgb(250,81,26)" fg:x="2353" fg:w="1"/><text x="99.9534%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="99.7458%" y="917" width="0.0424%" height="15" fill="rgb(214,104,7)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.04%)</title><rect x="99.7458%" y="901" width="0.0424%" height="15" fill="rgb(233,189,8)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.04%)</title><rect x="99.7458%" y="885" width="0.0424%" height="15" fill="rgb(228,141,17)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="99.7458%" y="869" width="0.0424%" height="15" fill="rgb(247,157,1)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="99.7458%" y="853" width="0.0424%" height="15" fill="rgb(249,225,5)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.04%)</title><rect x="99.7458%" y="837" width="0.0424%" height="15" fill="rgb(242,55,13)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="847.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.04%)</title><rect x="99.7458%" y="821" width="0.0424%" height="15" fill="rgb(230,49,50)" fg:x="2354" fg:w="1"/><text x="99.9958%" y="831.50"></text></g><g><title>rlox::environ::Environ::define (1 samples, 0.04%)</title><rect x="99.7881%" y="917" width="0.0424%" height="15" fill="rgb(241,111,38)" fg:x="2355" fg:w="1"/><text x="100.0381%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="99.7881%" y="901" width="0.0424%" height="15" fill="rgb(252,155,4)" fg:x="2355" fg:w="1"/><text x="100.0381%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="99.7881%" y="885" width="0.0424%" height="15" fill="rgb(212,69,32)" fg:x="2355" fg:w="1"/><text x="100.0381%" y="895.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="99.7881%" y="869" width="0.0424%" height="15" fill="rgb(243,107,47)" fg:x="2355" fg:w="1"/><text x="100.0381%" y="879.50"></text></g><g><title>rlox::interpreter::Interpreter::execute (1 samples, 0.04%)</title><rect x="99.8305%" y="917" width="0.0424%" height="15" fill="rgb(247,130,12)" fg:x="2356" fg:w="1"/><text x="100.0805%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="99.9153%" y="901" width="0.0424%" height="15" fill="rgb(233,74,16)" fg:x="2358" fg:w="1"/><text x="100.1653%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.04%)</title><rect x="99.9153%" y="885" width="0.0424%" height="15" fill="rgb(208,58,18)" fg:x="2358" fg:w="1"/><text x="100.1653%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="99.9153%" y="869" width="0.0424%" height="15" fill="rgb(242,225,1)" fg:x="2358" fg:w="1"/><text x="100.1653%" y="879.50"></text></g><g><title>all (2,360 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(249,39,40)" fg:x="0" fg:w="2360"/><text x="0.2500%" y="959.50"></text></g><g><title>rlox (2,360 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(207,72,44)" fg:x="0" fg:w="2360"/><text x="0.2500%" y="943.50">rlox</text></g><g><title>rlox::interpreter::Interpreter::execute_block (3 samples, 0.13%)</title><rect x="99.8729%" y="917" width="0.1271%" height="15" fill="rgb(215,193,12)" fg:x="2357" fg:w="3"/><text x="100.1229%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rlox::parser::Stmt&gt;&gt; (1 samples, 0.04%)</title><rect x="99.9576%" y="901" width="0.0424%" height="15" fill="rgb(248,41,39)" fg:x="2359" fg:w="1"/><text x="100.2076%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="99.9576%" y="885" width="0.0424%" height="15" fill="rgb(253,85,4)" fg:x="2359" fg:w="1"/><text x="100.2076%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rlox::parser::Stmt]&gt; (1 samples, 0.04%)</title><rect x="99.9576%" y="869" width="0.0424%" height="15" fill="rgb(243,70,31)" fg:x="2359" fg:w="1"/><text x="100.2076%" y="879.50"></text></g></svg></svg>